ARM GAS  /tmp/ccSfWcKi.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"24xx_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/24xx_eeprom.c"
  20              		.section	.text.EepromInit,"ax",%progbits
  21              		.align	1
  22              		.global	EepromInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	EepromInit:
  28              	.LVL0:
  29              	.LFB141:
   1:Core/Src/24xx_eeprom.c **** /**
   2:Core/Src/24xx_eeprom.c ****  * @auth: Portland.HODL
   3:Core/Src/24xx_eeprom.c ****  * An 24xx EEPROM library designed around DMA access
   4:Core/Src/24xx_eeprom.c ****  */
   5:Core/Src/24xx_eeprom.c **** 
   6:Core/Src/24xx_eeprom.c **** #include <string.h>
   7:Core/Src/24xx_eeprom.c **** 
   8:Core/Src/24xx_eeprom.c **** #include "i2c.h"
   9:Core/Src/24xx_eeprom.c **** #include "24xx_eeprom.h"
  10:Core/Src/24xx_eeprom.c **** 
  11:Core/Src/24xx_eeprom.c **** 
  12:Core/Src/24xx_eeprom.c **** EepromReturn EepromInit(Eeprom24xx* eeprom, bool a0, bool a1)   
  13:Core/Src/24xx_eeprom.c **** {
  30              		.loc 1 13 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 13 1 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  14:Core/Src/24xx_eeprom.c ****     eeprom->a0 = a0;
  42              		.loc 1 14 5 is_stmt 1 view .LVU2
  43              		.loc 1 14 16 is_stmt 0 view .LVU3
  44 0004 0170     		strb	r1, [r0]
ARM GAS  /tmp/ccSfWcKi.s 			page 2


  15:Core/Src/24xx_eeprom.c ****     eeprom->a1 = a1;
  45              		.loc 1 15 5 is_stmt 1 view .LVU4
  46              		.loc 1 15 16 is_stmt 0 view .LVU5
  47 0006 4270     		strb	r2, [r0, #1]
  16:Core/Src/24xx_eeprom.c ****     eeprom->tx_inflight = false;
  48              		.loc 1 16 5 is_stmt 1 view .LVU6
  49              		.loc 1 16 25 is_stmt 0 view .LVU7
  50 0008 0025     		movs	r5, #0
  51 000a 8570     		strb	r5, [r0, #2]
  17:Core/Src/24xx_eeprom.c ****     eeprom->rx_inflight = false;
  52              		.loc 1 17 5 is_stmt 1 view .LVU8
  53              		.loc 1 17 25 is_stmt 0 view .LVU9
  54 000c 0571     		strb	r5, [r0, #4]
  18:Core/Src/24xx_eeprom.c **** 
  19:Core/Src/24xx_eeprom.c ****     memset((void*)eeprom->tx_buf, 0, sizeof(eeprom->tx_buf));
  55              		.loc 1 19 5 is_stmt 1 view .LVU10
  56 000e 8022     		movs	r2, #128
  57              	.LVL1:
  58              		.loc 1 19 5 is_stmt 0 view .LVU11
  59 0010 2946     		mov	r1, r5
  60              	.LVL2:
  61              		.loc 1 19 5 view .LVU12
  62 0012 0530     		adds	r0, r0, #5
  63              	.LVL3:
  64              		.loc 1 19 5 view .LVU13
  65 0014 FFF7FEFF 		bl	memset
  66              	.LVL4:
  20:Core/Src/24xx_eeprom.c ****     memset((void*)eeprom->rx_buf, 0, sizeof(eeprom->rx_buf));
  67              		.loc 1 20 5 is_stmt 1 view .LVU14
  68 0018 4FF48062 		mov	r2, #1024
  69 001c 2946     		mov	r1, r5
  70 001e 04F18500 		add	r0, r4, #133
  71 0022 FFF7FEFF 		bl	memset
  72              	.LVL5:
  21:Core/Src/24xx_eeprom.c **** 
  22:Core/Src/24xx_eeprom.c ****     return EEPROM_SUCCESS;
  73              		.loc 1 22 5 view .LVU15
  23:Core/Src/24xx_eeprom.c **** }
  74              		.loc 1 23 1 is_stmt 0 view .LVU16
  75 0026 0120     		movs	r0, #1
  76 0028 38BD     		pop	{r3, r4, r5, pc}
  77              		.loc 1 23 1 view .LVU17
  78              		.cfi_endproc
  79              	.LFE141:
  81              		.section	.text.EepromFlushTxBuff,"ax",%progbits
  82              		.align	1
  83              		.global	EepromFlushTxBuff
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	EepromFlushTxBuff:
  89              	.LVL6:
  90              	.LFB142:
  24:Core/Src/24xx_eeprom.c **** 
  25:Core/Src/24xx_eeprom.c **** EepromReturn EepromFlushTxBuff(Eeprom24xx* eeprom)
  26:Core/Src/24xx_eeprom.c **** {
  91              		.loc 1 26 1 is_stmt 1 view -0
ARM GAS  /tmp/ccSfWcKi.s 			page 3


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		.loc 1 26 1 is_stmt 0 view .LVU19
  96 0000 08B5     		push	{r3, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
  27:Core/Src/24xx_eeprom.c ****     memset((void*)eeprom->tx_buf, 0, sizeof(eeprom->tx_buf));
 100              		.loc 1 27 5 is_stmt 1 view .LVU20
 101 0002 8022     		movs	r2, #128
 102 0004 0021     		movs	r1, #0
 103 0006 0530     		adds	r0, r0, #5
 104              	.LVL7:
 105              		.loc 1 27 5 is_stmt 0 view .LVU21
 106 0008 FFF7FEFF 		bl	memset
 107              	.LVL8:
  28:Core/Src/24xx_eeprom.c **** 
  29:Core/Src/24xx_eeprom.c ****     return EEPROM_SUCCESS;
 108              		.loc 1 29 5 is_stmt 1 view .LVU22
  30:Core/Src/24xx_eeprom.c **** }
 109              		.loc 1 30 1 is_stmt 0 view .LVU23
 110 000c 0120     		movs	r0, #1
 111 000e 08BD     		pop	{r3, pc}
 112              		.cfi_endproc
 113              	.LFE142:
 115              		.section	.text.EepromCreateControlByte,"ax",%progbits
 116              		.align	1
 117              		.global	EepromCreateControlByte
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	EepromCreateControlByte:
 123              	.LVL9:
 124              	.LFB143:
  31:Core/Src/24xx_eeprom.c **** 
  32:Core/Src/24xx_eeprom.c **** uint8_t EepromCreateControlByte(Eeprom24xx* eeprom, bool read, bool b0)
  33:Core/Src/24xx_eeprom.c **** {
 125              		.loc 1 33 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              		.loc 1 33 1 is_stmt 0 view .LVU25
 131 0000 8446     		mov	ip, r0
  34:Core/Src/24xx_eeprom.c ****     uint8_t ctrl_byte = EEPROM_CTRL_MASK_CODE;
 132              		.loc 1 34 5 is_stmt 1 view .LVU26
 133              	.LVL10:
  35:Core/Src/24xx_eeprom.c **** 
  36:Core/Src/24xx_eeprom.c ****     if(read)
 134              		.loc 1 36 5 view .LVU27
 135              		.loc 1 36 7 is_stmt 0 view .LVU28
 136 0002 71B9     		cbnz	r1, .L10
  34:Core/Src/24xx_eeprom.c ****     uint8_t ctrl_byte = EEPROM_CTRL_MASK_CODE;
 137              		.loc 1 34 13 view .LVU29
 138 0004 A020     		movs	r0, #160
 139              	.LVL11:
ARM GAS  /tmp/ccSfWcKi.s 			page 4


 140              	.L6:
  37:Core/Src/24xx_eeprom.c ****         ctrl_byte += EEPROM_CTRL_MASK_RW;
  38:Core/Src/24xx_eeprom.c ****     if(eeprom->a0)
 141              		.loc 1 38 5 is_stmt 1 view .LVU30
 142              		.loc 1 38 14 is_stmt 0 view .LVU31
 143 0006 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
 144              		.loc 1 38 7 view .LVU32
 145 000a 0BB1     		cbz	r3, .L7
  39:Core/Src/24xx_eeprom.c ****         ctrl_byte += EEPROM_CTRL_MASK_A0;
 146              		.loc 1 39 9 is_stmt 1 view .LVU33
 147              		.loc 1 39 19 is_stmt 0 view .LVU34
 148 000c 831C     		adds	r3, r0, #2
 149 000e D8B2     		uxtb	r0, r3
 150              	.LVL12:
 151              	.L7:
  40:Core/Src/24xx_eeprom.c ****     if(eeprom->a1)
 152              		.loc 1 40 5 is_stmt 1 view .LVU35
 153              		.loc 1 40 14 is_stmt 0 view .LVU36
 154 0010 9CF80130 		ldrb	r3, [ip, #1]	@ zero_extendqisi2
 155              		.loc 1 40 7 view .LVU37
 156 0014 0BB1     		cbz	r3, .L8
  41:Core/Src/24xx_eeprom.c ****         ctrl_byte += EEPROM_CTRL_MASK_A1;
 157              		.loc 1 41 9 is_stmt 1 view .LVU38
 158              		.loc 1 41 19 is_stmt 0 view .LVU39
 159 0016 0430     		adds	r0, r0, #4
 160              	.LVL13:
 161              		.loc 1 41 19 view .LVU40
 162 0018 C0B2     		uxtb	r0, r0
 163              	.LVL14:
 164              	.L8:
  42:Core/Src/24xx_eeprom.c ****     if(b0)
 165              		.loc 1 42 5 is_stmt 1 view .LVU41
 166              		.loc 1 42 7 is_stmt 0 view .LVU42
 167 001a 0AB1     		cbz	r2, .L9
  43:Core/Src/24xx_eeprom.c ****         ctrl_byte += EEPROM_CTRL_MASK_B0;
 168              		.loc 1 43 9 is_stmt 1 view .LVU43
 169              		.loc 1 43 19 is_stmt 0 view .LVU44
 170 001c 0830     		adds	r0, r0, #8
 171              	.LVL15:
 172              		.loc 1 43 19 view .LVU45
 173 001e C0B2     		uxtb	r0, r0
 174              	.LVL16:
 175              	.L9:
  44:Core/Src/24xx_eeprom.c **** 
  45:Core/Src/24xx_eeprom.c ****     return ctrl_byte;
 176              		.loc 1 45 5 is_stmt 1 view .LVU46
  46:Core/Src/24xx_eeprom.c **** }
 177              		.loc 1 46 1 is_stmt 0 view .LVU47
 178 0020 7047     		bx	lr
 179              	.LVL17:
 180              	.L10:
  37:Core/Src/24xx_eeprom.c ****     if(eeprom->a0)
 181              		.loc 1 37 19 view .LVU48
 182 0022 A120     		movs	r0, #161
 183              	.LVL18:
  37:Core/Src/24xx_eeprom.c ****     if(eeprom->a0)
 184              		.loc 1 37 19 view .LVU49
ARM GAS  /tmp/ccSfWcKi.s 			page 5


 185 0024 EFE7     		b	.L6
 186              		.cfi_endproc
 187              	.LFE143:
 189              		.section	.text.EepromWrite,"ax",%progbits
 190              		.align	1
 191              		.global	EepromWrite
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	EepromWrite:
 197              	.LVL19:
 198              	.LFB144:
  47:Core/Src/24xx_eeprom.c **** 
  48:Core/Src/24xx_eeprom.c **** EepromReturn EepromWrite(Eeprom24xx* eeprom, bool b0, short eeprom_address, size_t len)
  49:Core/Src/24xx_eeprom.c **** {
 199              		.loc 1 49 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 49 1 is_stmt 0 view .LVU51
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 4, -16
 207              		.cfi_offset 5, -12
 208              		.cfi_offset 6, -8
 209              		.cfi_offset 14, -4
 210 0002 82B0     		sub	sp, sp, #8
 211              		.cfi_def_cfa_offset 24
 212 0004 1D46     		mov	r5, r3
  50:Core/Src/24xx_eeprom.c ****     if(eeprom->tx_inflight)
 213              		.loc 1 50 5 is_stmt 1 view .LVU52
 214              		.loc 1 50 14 is_stmt 0 view .LVU53
 215 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 216              	.LVL20:
 217              		.loc 1 50 7 view .LVU54
 218 0008 13B1     		cbz	r3, .L16
  51:Core/Src/24xx_eeprom.c ****         return EEPROM_FAILURE;
 219              		.loc 1 51 16 view .LVU55
 220 000a 0020     		movs	r0, #0
 221              	.LVL21:
 222              	.L12:
  52:Core/Src/24xx_eeprom.c ****     else {
  53:Core/Src/24xx_eeprom.c ****         // Place the TX inflight to prevent causing DMA collisions
  54:Core/Src/24xx_eeprom.c ****         eeprom->tx_inflight = true;
  55:Core/Src/24xx_eeprom.c ****         if (HAL_I2C_Mem_Write_DMA(&hi2c1,EepromCreateControlByte(eeprom, false, b0), eeprom_address
  56:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
  57:Core/Src/24xx_eeprom.c ****         // Reset the position since we just placed all of the data on the buffer to be sent.
  58:Core/Src/24xx_eeprom.c ****     }
  59:Core/Src/24xx_eeprom.c **** 
  60:Core/Src/24xx_eeprom.c ****     return EEPROM_SUCCESS;
  61:Core/Src/24xx_eeprom.c **** }
 223              		.loc 1 61 1 view .LVU56
 224 000c 02B0     		add	sp, sp, #8
 225              		.cfi_remember_state
 226              		.cfi_def_cfa_offset 16
 227              		@ sp needed
 228 000e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccSfWcKi.s 			page 6


 229              	.LVL22:
 230              	.L16:
 231              		.cfi_restore_state
 232              		.loc 1 61 1 view .LVU57
 233 0010 0446     		mov	r4, r0
 234 0012 1646     		mov	r6, r2
  54:Core/Src/24xx_eeprom.c ****         if (HAL_I2C_Mem_Write_DMA(&hi2c1,EepromCreateControlByte(eeprom, false, b0), eeprom_address
 235              		.loc 1 54 9 is_stmt 1 view .LVU58
  54:Core/Src/24xx_eeprom.c ****         if (HAL_I2C_Mem_Write_DMA(&hi2c1,EepromCreateControlByte(eeprom, false, b0), eeprom_address
 236              		.loc 1 54 29 is_stmt 0 view .LVU59
 237 0014 0123     		movs	r3, #1
 238 0016 8370     		strb	r3, [r0, #2]
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 239              		.loc 1 55 9 is_stmt 1 view .LVU60
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 240              		.loc 1 55 42 is_stmt 0 view .LVU61
 241 0018 0A46     		mov	r2, r1
 242              	.LVL23:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 243              		.loc 1 55 42 view .LVU62
 244 001a 0021     		movs	r1, #0
 245              	.LVL24:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 246              		.loc 1 55 42 view .LVU63
 247 001c FFF7FEFF 		bl	EepromCreateControlByte
 248              	.LVL25:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 249              		.loc 1 55 42 view .LVU64
 250 0020 0146     		mov	r1, r0
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 251              		.loc 1 55 13 view .LVU65
 252 0022 ADB2     		uxth	r5, r5
 253              	.LVL26:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 254              		.loc 1 55 13 view .LVU66
 255 0024 0195     		str	r5, [sp, #4]
 256 0026 0534     		adds	r4, r4, #5
 257              	.LVL27:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 258              		.loc 1 55 13 view .LVU67
 259 0028 0094     		str	r4, [sp]
 260 002a 0223     		movs	r3, #2
 261 002c B2B2     		uxth	r2, r6
 262 002e 0448     		ldr	r0, .L17
 263 0030 FFF7FEFF 		bl	HAL_I2C_Mem_Write_DMA
 264              	.LVL28:
  55:Core/Src/24xx_eeprom.c ****             return EEPROM_FAILURE;
 265              		.loc 1 55 12 view .LVU68
 266 0034 08B9     		cbnz	r0, .L14
  60:Core/Src/24xx_eeprom.c **** }
 267              		.loc 1 60 12 view .LVU69
 268 0036 0120     		movs	r0, #1
 269 0038 E8E7     		b	.L12
 270              	.L14:
  56:Core/Src/24xx_eeprom.c ****         // Reset the position since we just placed all of the data on the buffer to be sent.
 271              		.loc 1 56 20 view .LVU70
 272 003a 0020     		movs	r0, #0
ARM GAS  /tmp/ccSfWcKi.s 			page 7


 273 003c E6E7     		b	.L12
 274              	.L18:
 275 003e 00BF     		.align	2
 276              	.L17:
 277 0040 00000000 		.word	hi2c1
 278              		.cfi_endproc
 279              	.LFE144:
 281              		.section	.text.EepromRead,"ax",%progbits
 282              		.align	1
 283              		.global	EepromRead
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	EepromRead:
 289              	.LVL29:
 290              	.LFB145:
  62:Core/Src/24xx_eeprom.c **** 
  63:Core/Src/24xx_eeprom.c **** EepromReturn EepromRead(Eeprom24xx* eeprom, bool b0, short eeprom_address, size_t len)
  64:Core/Src/24xx_eeprom.c **** {
 291              		.loc 1 64 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		.loc 1 64 1 is_stmt 0 view .LVU72
 296 0000 70B5     		push	{r4, r5, r6, lr}
 297              		.cfi_def_cfa_offset 16
 298              		.cfi_offset 4, -16
 299              		.cfi_offset 5, -12
 300              		.cfi_offset 6, -8
 301              		.cfi_offset 14, -4
 302 0002 82B0     		sub	sp, sp, #8
 303              		.cfi_def_cfa_offset 24
 304 0004 1D46     		mov	r5, r3
  65:Core/Src/24xx_eeprom.c ****     if(eeprom->rx_inflight)
 305              		.loc 1 65 5 is_stmt 1 view .LVU73
 306              		.loc 1 65 14 is_stmt 0 view .LVU74
 307 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 308              	.LVL30:
 309              		.loc 1 65 7 view .LVU75
 310 0008 EBB9     		cbnz	r3, .L21
 311 000a 0446     		mov	r4, r0
 312 000c 1646     		mov	r6, r2
  66:Core/Src/24xx_eeprom.c ****         return EEPROM_FAILURE;
  67:Core/Src/24xx_eeprom.c ****     if(len >= EEPROM_DRIVER_RX_BUF_SZ)
 313              		.loc 1 67 5 is_stmt 1 view .LVU76
 314              		.loc 1 67 7 is_stmt 0 view .LVU77
 315 000e B5F5806F 		cmp	r5, #1024
 316 0012 01D3     		bcc	.L25
  68:Core/Src/24xx_eeprom.c ****         return EEPROM_FAILURE;
 317              		.loc 1 68 16 view .LVU78
 318 0014 0020     		movs	r0, #0
 319              	.LVL31:
 320              		.loc 1 68 16 view .LVU79
 321 0016 17E0     		b	.L20
 322              	.LVL32:
 323              	.L25:
  69:Core/Src/24xx_eeprom.c ****     else {
ARM GAS  /tmp/ccSfWcKi.s 			page 8


  70:Core/Src/24xx_eeprom.c ****         eeprom->rx_inflight = true;
 324              		.loc 1 70 9 is_stmt 1 view .LVU80
 325              		.loc 1 70 29 is_stmt 0 view .LVU81
 326 0018 0123     		movs	r3, #1
 327 001a 0371     		strb	r3, [r0, #4]
  71:Core/Src/24xx_eeprom.c ****         if(HAL_I2C_Mem_Read_DMA(&hi2c1,EepromCreateControlByte(eeprom, true, b0), eeprom_address, I
 328              		.loc 1 71 9 is_stmt 1 view .LVU82
 329              		.loc 1 71 40 is_stmt 0 view .LVU83
 330 001c 0A46     		mov	r2, r1
 331              	.LVL33:
 332              		.loc 1 71 40 view .LVU84
 333 001e 1946     		mov	r1, r3
 334              	.LVL34:
 335              		.loc 1 71 40 view .LVU85
 336 0020 FFF7FEFF 		bl	EepromCreateControlByte
 337              	.LVL35:
 338              		.loc 1 71 40 view .LVU86
 339 0024 0146     		mov	r1, r0
 340              		.loc 1 71 12 view .LVU87
 341 0026 ADB2     		uxth	r5, r5
 342              	.LVL36:
 343              		.loc 1 71 12 view .LVU88
 344 0028 0195     		str	r5, [sp, #4]
 345 002a 8534     		adds	r4, r4, #133
 346              	.LVL37:
 347              		.loc 1 71 12 view .LVU89
 348 002c 0094     		str	r4, [sp]
 349 002e 0223     		movs	r3, #2
 350 0030 B2B2     		uxth	r2, r6
 351 0032 0648     		ldr	r0, .L27
 352 0034 FFF7FEFF 		bl	HAL_I2C_Mem_Read_DMA
 353              	.LVL38:
 354              		.loc 1 71 11 view .LVU90
 355 0038 08B9     		cbnz	r0, .L26
  72:Core/Src/24xx_eeprom.c ****             Error_Handler();
  73:Core/Src/24xx_eeprom.c ****     }
  74:Core/Src/24xx_eeprom.c **** 
  75:Core/Src/24xx_eeprom.c ****     return EEPROM_SUCCESS;
 356              		.loc 1 75 12 view .LVU91
 357 003a 0120     		movs	r0, #1
 358 003c 04E0     		b	.L20
 359              	.L26:
  72:Core/Src/24xx_eeprom.c ****             Error_Handler();
 360              		.loc 1 72 13 is_stmt 1 view .LVU92
 361 003e FFF7FEFF 		bl	Error_Handler
 362              	.LVL39:
 363              		.loc 1 75 12 is_stmt 0 view .LVU93
 364 0042 0120     		movs	r0, #1
 365 0044 00E0     		b	.L20
 366              	.LVL40:
 367              	.L21:
  66:Core/Src/24xx_eeprom.c ****     if(len >= EEPROM_DRIVER_RX_BUF_SZ)
 368              		.loc 1 66 16 view .LVU94
 369 0046 0020     		movs	r0, #0
 370              	.LVL41:
 371              	.L20:
  76:Core/Src/24xx_eeprom.c **** }...
ARM GAS  /tmp/ccSfWcKi.s 			page 9


 372              		.loc 1 76 1 view .LVU95
 373 0048 02B0     		add	sp, sp, #8
 374              		.cfi_def_cfa_offset 16
 375              		@ sp needed
 376 004a 70BD     		pop	{r4, r5, r6, pc}
 377              	.L28:
 378              		.align	2
 379              	.L27:
 380 004c 00000000 		.word	hi2c1
 381              		.cfi_endproc
 382              	.LFE145:
 384              		.text
 385              	.Letext0:
 386              		.file 2 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 387              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 388              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 389              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 390              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 391              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 392              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 393              		.file 9 "Core/Inc/24xx_eeprom.h"
 394              		.file 10 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 395              		.file 11 "Core/Inc/i2c.h"
 396              		.file 12 "Core/Inc/main.h"
 397              		.file 13 "<built-in>"
ARM GAS  /tmp/ccSfWcKi.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 24xx_eeprom.c
     /tmp/ccSfWcKi.s:21     .text.EepromInit:00000000 $t
     /tmp/ccSfWcKi.s:27     .text.EepromInit:00000000 EepromInit
     /tmp/ccSfWcKi.s:82     .text.EepromFlushTxBuff:00000000 $t
     /tmp/ccSfWcKi.s:88     .text.EepromFlushTxBuff:00000000 EepromFlushTxBuff
     /tmp/ccSfWcKi.s:116    .text.EepromCreateControlByte:00000000 $t
     /tmp/ccSfWcKi.s:122    .text.EepromCreateControlByte:00000000 EepromCreateControlByte
     /tmp/ccSfWcKi.s:190    .text.EepromWrite:00000000 $t
     /tmp/ccSfWcKi.s:196    .text.EepromWrite:00000000 EepromWrite
     /tmp/ccSfWcKi.s:277    .text.EepromWrite:00000040 $d
     /tmp/ccSfWcKi.s:282    .text.EepromRead:00000000 $t
     /tmp/ccSfWcKi.s:288    .text.EepromRead:00000000 EepromRead
     /tmp/ccSfWcKi.s:380    .text.EepromRead:0000004c $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Mem_Write_DMA
hi2c1
HAL_I2C_Mem_Read_DMA
Error_Handler
