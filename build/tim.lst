ARM GAS  /tmp/ccnnr79r.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/tim.c"
  20              		.section	.text.MX_TIM1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_TIM1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_TIM1_Init:
  28              	.LFB141:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim6;
  29:Core/Src/tim.c **** TIM_HandleTypeDef htim7;
  30:Core/Src/tim.c **** TIM_HandleTypeDef htim8;
ARM GAS  /tmp/ccnnr79r.s 			page 2


  31:Core/Src/tim.c **** 
  32:Core/Src/tim.c **** /* TIM1 init function */
  33:Core/Src/tim.c **** void MX_TIM1_Init(void)
  34:Core/Src/tim.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 88
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 96B0     		sub	sp, sp, #88
  38              		.cfi_def_cfa_offset 96
  35:Core/Src/tim.c **** 
  36:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  37:Core/Src/tim.c **** 
  38:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  39:Core/Src/tim.c **** 
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39              		.loc 1 40 3 view .LVU1
  40              		.loc 1 40 27 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 1394     		str	r4, [sp, #76]
  43 0008 1494     		str	r4, [sp, #80]
  44 000a 1594     		str	r4, [sp, #84]
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  45              		.loc 1 41 3 is_stmt 1 view .LVU3
  46              		.loc 1 41 22 is_stmt 0 view .LVU4
  47 000c 0C94     		str	r4, [sp, #48]
  48 000e 0D94     		str	r4, [sp, #52]
  49 0010 0E94     		str	r4, [sp, #56]
  50 0012 0F94     		str	r4, [sp, #60]
  51 0014 1094     		str	r4, [sp, #64]
  52 0016 1194     		str	r4, [sp, #68]
  53 0018 1294     		str	r4, [sp, #72]
  42:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  54              		.loc 1 42 3 is_stmt 1 view .LVU5
  55              		.loc 1 42 34 is_stmt 0 view .LVU6
  56 001a 2C22     		movs	r2, #44
  57 001c 2146     		mov	r1, r4
  58 001e 01A8     		add	r0, sp, #4
  59 0020 FFF7FEFF 		bl	memset
  60              	.LVL0:
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  45:Core/Src/tim.c **** 
  46:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  47:Core/Src/tim.c ****   htim1.Instance = TIM1;
  61              		.loc 1 47 3 is_stmt 1 view .LVU7
  62              		.loc 1 47 18 is_stmt 0 view .LVU8
  63 0024 2648     		ldr	r0, .L11
  64 0026 274B     		ldr	r3, .L11+4
  65 0028 0360     		str	r3, [r0]
  48:Core/Src/tim.c ****   htim1.Init.Prescaler = 320;
  66              		.loc 1 48 3 is_stmt 1 view .LVU9
  67              		.loc 1 48 24 is_stmt 0 view .LVU10
ARM GAS  /tmp/ccnnr79r.s 			page 3


  68 002a 4FF4A073 		mov	r3, #320
  69 002e 4360     		str	r3, [r0, #4]
  49:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  70              		.loc 1 49 3 is_stmt 1 view .LVU11
  71              		.loc 1 49 26 is_stmt 0 view .LVU12
  72 0030 8460     		str	r4, [r0, #8]
  50:Core/Src/tim.c ****   htim1.Init.Period = 256;
  73              		.loc 1 50 3 is_stmt 1 view .LVU13
  74              		.loc 1 50 21 is_stmt 0 view .LVU14
  75 0032 4FF48073 		mov	r3, #256
  76 0036 C360     		str	r3, [r0, #12]
  51:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
  77              		.loc 1 51 3 is_stmt 1 view .LVU15
  78              		.loc 1 51 28 is_stmt 0 view .LVU16
  79 0038 4FF40073 		mov	r3, #512
  80 003c 0361     		str	r3, [r0, #16]
  52:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  81              		.loc 1 52 3 is_stmt 1 view .LVU17
  82              		.loc 1 52 32 is_stmt 0 view .LVU18
  83 003e 4461     		str	r4, [r0, #20]
  53:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  84              		.loc 1 53 3 is_stmt 1 view .LVU19
  85              		.loc 1 53 32 is_stmt 0 view .LVU20
  86 0040 8023     		movs	r3, #128
  87 0042 8361     		str	r3, [r0, #24]
  54:Core/Src/tim.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
  88              		.loc 1 54 3 is_stmt 1 view .LVU21
  89              		.loc 1 54 7 is_stmt 0 view .LVU22
  90 0044 FFF7FEFF 		bl	HAL_TIM_OC_Init
  91              	.LVL1:
  92              		.loc 1 54 6 view .LVU23
  93 0048 0028     		cmp	r0, #0
  94 004a 2CD1     		bne	.L7
  95              	.L2:
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  96              		.loc 1 58 3 is_stmt 1 view .LVU24
  97              		.loc 1 58 37 is_stmt 0 view .LVU25
  98 004c 0023     		movs	r3, #0
  99 004e 1393     		str	r3, [sp, #76]
  59:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 100              		.loc 1 59 3 is_stmt 1 view .LVU26
 101              		.loc 1 59 38 is_stmt 0 view .LVU27
 102 0050 1493     		str	r3, [sp, #80]
  60:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 103              		.loc 1 60 3 is_stmt 1 view .LVU28
 104              		.loc 1 60 33 is_stmt 0 view .LVU29
 105 0052 1593     		str	r3, [sp, #84]
  61:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 106              		.loc 1 61 3 is_stmt 1 view .LVU30
 107              		.loc 1 61 7 is_stmt 0 view .LVU31
 108 0054 13A9     		add	r1, sp, #76
 109 0056 1A48     		ldr	r0, .L11
 110 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 111              	.LVL2:
ARM GAS  /tmp/ccnnr79r.s 			page 4


 112              		.loc 1 61 6 view .LVU32
 113 005c 30BB     		cbnz	r0, .L8
 114              	.L3:
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 115              		.loc 1 65 3 is_stmt 1 view .LVU33
 116              		.loc 1 65 20 is_stmt 0 view .LVU34
 117 005e 0022     		movs	r2, #0
 118 0060 0C92     		str	r2, [sp, #48]
  66:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 119              		.loc 1 66 3 is_stmt 1 view .LVU35
 120              		.loc 1 66 19 is_stmt 0 view .LVU36
 121 0062 0D92     		str	r2, [sp, #52]
  67:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 122              		.loc 1 67 3 is_stmt 1 view .LVU37
 123              		.loc 1 67 24 is_stmt 0 view .LVU38
 124 0064 0E92     		str	r2, [sp, #56]
  68:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 125              		.loc 1 68 3 is_stmt 1 view .LVU39
 126              		.loc 1 68 25 is_stmt 0 view .LVU40
 127 0066 0F92     		str	r2, [sp, #60]
  69:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 128              		.loc 1 69 3 is_stmt 1 view .LVU41
 129              		.loc 1 69 24 is_stmt 0 view .LVU42
 130 0068 1092     		str	r2, [sp, #64]
  70:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 131              		.loc 1 70 3 is_stmt 1 view .LVU43
 132              		.loc 1 70 25 is_stmt 0 view .LVU44
 133 006a 1192     		str	r2, [sp, #68]
  71:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 134              		.loc 1 71 3 is_stmt 1 view .LVU45
 135              		.loc 1 71 26 is_stmt 0 view .LVU46
 136 006c 1292     		str	r2, [sp, #72]
  72:Core/Src/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 137              		.loc 1 72 3 is_stmt 1 view .LVU47
 138              		.loc 1 72 7 is_stmt 0 view .LVU48
 139 006e 0CA9     		add	r1, sp, #48
 140 0070 1348     		ldr	r0, .L11
 141 0072 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 142              	.LVL3:
 143              		.loc 1 72 6 view .LVU49
 144 0076 E0B9     		cbnz	r0, .L9
 145              	.L4:
  73:Core/Src/tim.c ****   {
  74:Core/Src/tim.c ****     Error_Handler();
  75:Core/Src/tim.c ****   }
  76:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 146              		.loc 1 76 3 is_stmt 1 view .LVU50
 147              		.loc 1 76 40 is_stmt 0 view .LVU51
 148 0078 0023     		movs	r3, #0
 149 007a 0193     		str	r3, [sp, #4]
  77:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 150              		.loc 1 77 3 is_stmt 1 view .LVU52
 151              		.loc 1 77 41 is_stmt 0 view .LVU53
 152 007c 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccnnr79r.s 			page 5


  78:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 153              		.loc 1 78 3 is_stmt 1 view .LVU54
 154              		.loc 1 78 34 is_stmt 0 view .LVU55
 155 007e 0393     		str	r3, [sp, #12]
  79:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 156              		.loc 1 79 3 is_stmt 1 view .LVU56
 157              		.loc 1 79 33 is_stmt 0 view .LVU57
 158 0080 0493     		str	r3, [sp, #16]
  80:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 159              		.loc 1 80 3 is_stmt 1 view .LVU58
 160              		.loc 1 80 35 is_stmt 0 view .LVU59
 161 0082 0593     		str	r3, [sp, #20]
  81:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 162              		.loc 1 81 3 is_stmt 1 view .LVU60
 163              		.loc 1 81 38 is_stmt 0 view .LVU61
 164 0084 4FF40052 		mov	r2, #8192
 165 0088 0692     		str	r2, [sp, #24]
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 166              		.loc 1 82 3 is_stmt 1 view .LVU62
 167              		.loc 1 82 36 is_stmt 0 view .LVU63
 168 008a 0793     		str	r3, [sp, #28]
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 169              		.loc 1 83 3 is_stmt 1 view .LVU64
 170              		.loc 1 83 36 is_stmt 0 view .LVU65
 171 008c 0893     		str	r3, [sp, #32]
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 172              		.loc 1 84 3 is_stmt 1 view .LVU66
 173              		.loc 1 84 39 is_stmt 0 view .LVU67
 174 008e 4FF00072 		mov	r2, #33554432
 175 0092 0992     		str	r2, [sp, #36]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 176              		.loc 1 85 3 is_stmt 1 view .LVU68
 177              		.loc 1 85 37 is_stmt 0 view .LVU69
 178 0094 0A93     		str	r3, [sp, #40]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 179              		.loc 1 86 3 is_stmt 1 view .LVU70
 180              		.loc 1 86 40 is_stmt 0 view .LVU71
 181 0096 0B93     		str	r3, [sp, #44]
  87:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 182              		.loc 1 87 3 is_stmt 1 view .LVU72
 183              		.loc 1 87 7 is_stmt 0 view .LVU73
 184 0098 01A9     		add	r1, sp, #4
 185 009a 0948     		ldr	r0, .L11
 186 009c FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 187              	.LVL4:
 188              		.loc 1 87 6 view .LVU74
 189 00a0 50B9     		cbnz	r0, .L10
 190              	.L1:
  88:Core/Src/tim.c ****   {
  89:Core/Src/tim.c ****     Error_Handler();
  90:Core/Src/tim.c ****   }
  91:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  94:Core/Src/tim.c **** 
  95:Core/Src/tim.c **** }
 191              		.loc 1 95 1 view .LVU75
ARM GAS  /tmp/ccnnr79r.s 			page 6


 192 00a2 16B0     		add	sp, sp, #88
 193              		.cfi_remember_state
 194              		.cfi_def_cfa_offset 8
 195              		@ sp needed
 196 00a4 10BD     		pop	{r4, pc}
 197              	.L7:
 198              		.cfi_restore_state
  56:Core/Src/tim.c ****   }
 199              		.loc 1 56 5 is_stmt 1 view .LVU76
 200 00a6 FFF7FEFF 		bl	Error_Handler
 201              	.LVL5:
 202 00aa CFE7     		b	.L2
 203              	.L8:
  63:Core/Src/tim.c ****   }
 204              		.loc 1 63 5 view .LVU77
 205 00ac FFF7FEFF 		bl	Error_Handler
 206              	.LVL6:
 207 00b0 D5E7     		b	.L3
 208              	.L9:
  74:Core/Src/tim.c ****   }
 209              		.loc 1 74 5 view .LVU78
 210 00b2 FFF7FEFF 		bl	Error_Handler
 211              	.LVL7:
 212 00b6 DFE7     		b	.L4
 213              	.L10:
  89:Core/Src/tim.c ****   }
 214              		.loc 1 89 5 view .LVU79
 215 00b8 FFF7FEFF 		bl	Error_Handler
 216              	.LVL8:
 217              		.loc 1 95 1 is_stmt 0 view .LVU80
 218 00bc F1E7     		b	.L1
 219              	.L12:
 220 00be 00BF     		.align	2
 221              	.L11:
 222 00c0 00000000 		.word	htim1
 223 00c4 00000140 		.word	1073807360
 224              		.cfi_endproc
 225              	.LFE141:
 227              		.section	.text.MX_TIM6_Init,"ax",%progbits
 228              		.align	1
 229              		.global	MX_TIM6_Init
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	MX_TIM6_Init:
 235              	.LFB142:
  96:Core/Src/tim.c **** /* TIM6 init function */
  97:Core/Src/tim.c **** void MX_TIM6_Init(void)
  98:Core/Src/tim.c **** {
 236              		.loc 1 98 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 16
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 00B5     		push	{lr}
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccnnr79r.s 			page 7


 244              		.cfi_def_cfa_offset 24
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c ****   /* USER CODE END TIM6_Init 0 */
 103:Core/Src/tim.c **** 
 104:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 245              		.loc 1 104 3 view .LVU82
 246              		.loc 1 104 27 is_stmt 0 view .LVU83
 247 0004 0023     		movs	r3, #0
 248 0006 0193     		str	r3, [sp, #4]
 249 0008 0293     		str	r3, [sp, #8]
 250 000a 0393     		str	r3, [sp, #12]
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 107:Core/Src/tim.c **** 
 108:Core/Src/tim.c ****   /* USER CODE END TIM6_Init 1 */
 109:Core/Src/tim.c ****   htim6.Instance = TIM6;
 251              		.loc 1 109 3 is_stmt 1 view .LVU84
 252              		.loc 1 109 18 is_stmt 0 view .LVU85
 253 000c 0E48     		ldr	r0, .L19
 254 000e 0F4A     		ldr	r2, .L19+4
 255 0010 0260     		str	r2, [r0]
 110:Core/Src/tim.c ****   htim6.Init.Prescaler = 16452;
 256              		.loc 1 110 3 is_stmt 1 view .LVU86
 257              		.loc 1 110 24 is_stmt 0 view .LVU87
 258 0012 44F24402 		movw	r2, #16452
 259 0016 4260     		str	r2, [r0, #4]
 111:Core/Src/tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 260              		.loc 1 111 3 is_stmt 1 view .LVU88
 261              		.loc 1 111 26 is_stmt 0 view .LVU89
 262 0018 8360     		str	r3, [r0, #8]
 112:Core/Src/tim.c ****   htim6.Init.Period = 37;
 263              		.loc 1 112 3 is_stmt 1 view .LVU90
 264              		.loc 1 112 21 is_stmt 0 view .LVU91
 265 001a 2522     		movs	r2, #37
 266 001c C260     		str	r2, [r0, #12]
 113:Core/Src/tim.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 267              		.loc 1 113 3 is_stmt 1 view .LVU92
 268              		.loc 1 113 32 is_stmt 0 view .LVU93
 269 001e 8361     		str	r3, [r0, #24]
 114:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 270              		.loc 1 114 3 is_stmt 1 view .LVU94
 271              		.loc 1 114 7 is_stmt 0 view .LVU95
 272 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 273              	.LVL9:
 274              		.loc 1 114 6 view .LVU96
 275 0024 50B9     		cbnz	r0, .L17
 276              	.L14:
 115:Core/Src/tim.c ****   {
 116:Core/Src/tim.c ****     Error_Handler();
 117:Core/Src/tim.c ****   }
 118:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 277              		.loc 1 118 3 is_stmt 1 view .LVU97
 278              		.loc 1 118 37 is_stmt 0 view .LVU98
 279 0026 0023     		movs	r3, #0
 280 0028 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccnnr79r.s 			page 8


 119:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 281              		.loc 1 119 3 is_stmt 1 view .LVU99
 282              		.loc 1 119 33 is_stmt 0 view .LVU100
 283 002a 0393     		str	r3, [sp, #12]
 120:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 284              		.loc 1 120 3 is_stmt 1 view .LVU101
 285              		.loc 1 120 7 is_stmt 0 view .LVU102
 286 002c 01A9     		add	r1, sp, #4
 287 002e 0648     		ldr	r0, .L19
 288 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 289              	.LVL10:
 290              		.loc 1 120 6 view .LVU103
 291 0034 28B9     		cbnz	r0, .L18
 292              	.L13:
 121:Core/Src/tim.c ****   {
 122:Core/Src/tim.c ****     Error_Handler();
 123:Core/Src/tim.c ****   }
 124:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 125:Core/Src/tim.c **** 
 126:Core/Src/tim.c ****   /* USER CODE END TIM6_Init 2 */
 127:Core/Src/tim.c **** 
 128:Core/Src/tim.c **** }
 293              		.loc 1 128 1 view .LVU104
 294 0036 05B0     		add	sp, sp, #20
 295              		.cfi_remember_state
 296              		.cfi_def_cfa_offset 4
 297              		@ sp needed
 298 0038 5DF804FB 		ldr	pc, [sp], #4
 299              	.L17:
 300              		.cfi_restore_state
 116:Core/Src/tim.c ****   }
 301              		.loc 1 116 5 is_stmt 1 view .LVU105
 302 003c FFF7FEFF 		bl	Error_Handler
 303              	.LVL11:
 304 0040 F1E7     		b	.L14
 305              	.L18:
 122:Core/Src/tim.c ****   }
 306              		.loc 1 122 5 view .LVU106
 307 0042 FFF7FEFF 		bl	Error_Handler
 308              	.LVL12:
 309              		.loc 1 128 1 is_stmt 0 view .LVU107
 310 0046 F6E7     		b	.L13
 311              	.L20:
 312              		.align	2
 313              	.L19:
 314 0048 00000000 		.word	htim6
 315 004c 00100040 		.word	1073745920
 316              		.cfi_endproc
 317              	.LFE142:
 319              		.section	.text.MX_TIM7_Init,"ax",%progbits
 320              		.align	1
 321              		.global	MX_TIM7_Init
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	MX_TIM7_Init:
 327              	.LFB143:
ARM GAS  /tmp/ccnnr79r.s 			page 9


 129:Core/Src/tim.c **** /* TIM7 init function */
 130:Core/Src/tim.c **** void MX_TIM7_Init(void)
 131:Core/Src/tim.c **** {
 328              		.loc 1 131 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 16
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 00B5     		push	{lr}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 14, -4
 335 0002 85B0     		sub	sp, sp, #20
 336              		.cfi_def_cfa_offset 24
 132:Core/Src/tim.c **** 
 133:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 134:Core/Src/tim.c **** 
 135:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 0 */
 136:Core/Src/tim.c **** 
 137:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 337              		.loc 1 137 3 view .LVU109
 338              		.loc 1 137 27 is_stmt 0 view .LVU110
 339 0004 0023     		movs	r3, #0
 340 0006 0193     		str	r3, [sp, #4]
 341 0008 0293     		str	r3, [sp, #8]
 342 000a 0393     		str	r3, [sp, #12]
 138:Core/Src/tim.c **** 
 139:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 140:Core/Src/tim.c **** 
 141:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 1 */
 142:Core/Src/tim.c ****   htim7.Instance = TIM7;
 343              		.loc 1 142 3 is_stmt 1 view .LVU111
 344              		.loc 1 142 18 is_stmt 0 view .LVU112
 345 000c 0F48     		ldr	r0, .L27
 346 000e 104A     		ldr	r2, .L27+4
 347 0010 0260     		str	r2, [r0]
 143:Core/Src/tim.c ****   htim7.Init.Prescaler = 7520;
 348              		.loc 1 143 3 is_stmt 1 view .LVU113
 349              		.loc 1 143 24 is_stmt 0 view .LVU114
 350 0012 4FF4EB52 		mov	r2, #7520
 351 0016 4260     		str	r2, [r0, #4]
 144:Core/Src/tim.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 352              		.loc 1 144 3 is_stmt 1 view .LVU115
 353              		.loc 1 144 26 is_stmt 0 view .LVU116
 354 0018 8360     		str	r3, [r0, #8]
 145:Core/Src/tim.c ****   htim7.Init.Period = 11154;
 355              		.loc 1 145 3 is_stmt 1 view .LVU117
 356              		.loc 1 145 21 is_stmt 0 view .LVU118
 357 001a 42F69232 		movw	r2, #11154
 358 001e C260     		str	r2, [r0, #12]
 146:Core/Src/tim.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 359              		.loc 1 146 3 is_stmt 1 view .LVU119
 360              		.loc 1 146 32 is_stmt 0 view .LVU120
 361 0020 8361     		str	r3, [r0, #24]
 147:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 362              		.loc 1 147 3 is_stmt 1 view .LVU121
 363              		.loc 1 147 7 is_stmt 0 view .LVU122
 364 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 365              	.LVL13:
ARM GAS  /tmp/ccnnr79r.s 			page 10


 366              		.loc 1 147 6 view .LVU123
 367 0026 50B9     		cbnz	r0, .L25
 368              	.L22:
 148:Core/Src/tim.c ****   {
 149:Core/Src/tim.c ****     Error_Handler();
 150:Core/Src/tim.c ****   }
 151:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 369              		.loc 1 151 3 is_stmt 1 view .LVU124
 370              		.loc 1 151 37 is_stmt 0 view .LVU125
 371 0028 0023     		movs	r3, #0
 372 002a 0193     		str	r3, [sp, #4]
 152:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 373              		.loc 1 152 3 is_stmt 1 view .LVU126
 374              		.loc 1 152 33 is_stmt 0 view .LVU127
 375 002c 0393     		str	r3, [sp, #12]
 153:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 376              		.loc 1 153 3 is_stmt 1 view .LVU128
 377              		.loc 1 153 7 is_stmt 0 view .LVU129
 378 002e 01A9     		add	r1, sp, #4
 379 0030 0648     		ldr	r0, .L27
 380 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 381              	.LVL14:
 382              		.loc 1 153 6 view .LVU130
 383 0036 28B9     		cbnz	r0, .L26
 384              	.L21:
 154:Core/Src/tim.c ****   {
 155:Core/Src/tim.c ****     Error_Handler();
 156:Core/Src/tim.c ****   }
 157:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 158:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 2 */
 159:Core/Src/tim.c **** 
 160:Core/Src/tim.c **** }
 385              		.loc 1 160 1 view .LVU131
 386 0038 05B0     		add	sp, sp, #20
 387              		.cfi_remember_state
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 003a 5DF804FB 		ldr	pc, [sp], #4
 391              	.L25:
 392              		.cfi_restore_state
 149:Core/Src/tim.c ****   }
 393              		.loc 1 149 5 is_stmt 1 view .LVU132
 394 003e FFF7FEFF 		bl	Error_Handler
 395              	.LVL15:
 396 0042 F1E7     		b	.L22
 397              	.L26:
 155:Core/Src/tim.c ****   }
 398              		.loc 1 155 5 view .LVU133
 399 0044 FFF7FEFF 		bl	Error_Handler
 400              	.LVL16:
 401              		.loc 1 160 1 is_stmt 0 view .LVU134
 402 0048 F6E7     		b	.L21
 403              	.L28:
 404 004a 00BF     		.align	2
 405              	.L27:
 406 004c 00000000 		.word	htim7
 407 0050 00140040 		.word	1073746944
ARM GAS  /tmp/ccnnr79r.s 			page 11


 408              		.cfi_endproc
 409              	.LFE143:
 411              		.section	.text.MX_TIM8_Init,"ax",%progbits
 412              		.align	1
 413              		.global	MX_TIM8_Init
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	MX_TIM8_Init:
 419              	.LFB144:
 161:Core/Src/tim.c **** /* TIM8 init function */
 162:Core/Src/tim.c **** void MX_TIM8_Init(void)
 163:Core/Src/tim.c **** {
 420              		.loc 1 163 1 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 104
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 10B5     		push	{r4, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 428 0002 9AB0     		sub	sp, sp, #104
 429              		.cfi_def_cfa_offset 112
 164:Core/Src/tim.c **** 
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 0 */
 166:Core/Src/tim.c **** 
 167:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 0 */
 168:Core/Src/tim.c **** 
 169:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 430              		.loc 1 169 3 view .LVU136
 431              		.loc 1 169 26 is_stmt 0 view .LVU137
 432 0004 0024     		movs	r4, #0
 433 0006 1694     		str	r4, [sp, #88]
 434 0008 1794     		str	r4, [sp, #92]
 435 000a 1894     		str	r4, [sp, #96]
 436 000c 1994     		str	r4, [sp, #100]
 170:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 437              		.loc 1 170 3 is_stmt 1 view .LVU138
 438              		.loc 1 170 27 is_stmt 0 view .LVU139
 439 000e 1394     		str	r4, [sp, #76]
 440 0010 1494     		str	r4, [sp, #80]
 441 0012 1594     		str	r4, [sp, #84]
 171:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 442              		.loc 1 171 3 is_stmt 1 view .LVU140
 443              		.loc 1 171 22 is_stmt 0 view .LVU141
 444 0014 0C94     		str	r4, [sp, #48]
 445 0016 0D94     		str	r4, [sp, #52]
 446 0018 0E94     		str	r4, [sp, #56]
 447 001a 0F94     		str	r4, [sp, #60]
 448 001c 1094     		str	r4, [sp, #64]
 449 001e 1194     		str	r4, [sp, #68]
 450 0020 1294     		str	r4, [sp, #72]
 172:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 451              		.loc 1 172 3 is_stmt 1 view .LVU142
 452              		.loc 1 172 34 is_stmt 0 view .LVU143
 453 0022 2C22     		movs	r2, #44
 454 0024 2146     		mov	r1, r4
ARM GAS  /tmp/ccnnr79r.s 			page 12


 455 0026 01A8     		add	r0, sp, #4
 456 0028 FFF7FEFF 		bl	memset
 457              	.LVL17:
 173:Core/Src/tim.c **** 
 174:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 1 */
 175:Core/Src/tim.c **** 
 176:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 1 */
 177:Core/Src/tim.c ****   htim8.Instance = TIM8;
 458              		.loc 1 177 3 is_stmt 1 view .LVU144
 459              		.loc 1 177 18 is_stmt 0 view .LVU145
 460 002c 2F48     		ldr	r0, .L43
 461 002e 304B     		ldr	r3, .L43+4
 462 0030 0360     		str	r3, [r0]
 178:Core/Src/tim.c ****   htim8.Init.Prescaler = 53999;
 463              		.loc 1 178 3 is_stmt 1 view .LVU146
 464              		.loc 1 178 24 is_stmt 0 view .LVU147
 465 0032 4DF2EF23 		movw	r3, #53999
 466 0036 4360     		str	r3, [r0, #4]
 179:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 467              		.loc 1 179 3 is_stmt 1 view .LVU148
 468              		.loc 1 179 26 is_stmt 0 view .LVU149
 469 0038 8460     		str	r4, [r0, #8]
 180:Core/Src/tim.c ****   htim8.Init.Period = 99;
 470              		.loc 1 180 3 is_stmt 1 view .LVU150
 471              		.loc 1 180 21 is_stmt 0 view .LVU151
 472 003a 6323     		movs	r3, #99
 473 003c C360     		str	r3, [r0, #12]
 181:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 474              		.loc 1 181 3 is_stmt 1 view .LVU152
 475              		.loc 1 181 28 is_stmt 0 view .LVU153
 476 003e 0461     		str	r4, [r0, #16]
 182:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 477              		.loc 1 182 3 is_stmt 1 view .LVU154
 478              		.loc 1 182 32 is_stmt 0 view .LVU155
 479 0040 4461     		str	r4, [r0, #20]
 183:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 480              		.loc 1 183 3 is_stmt 1 view .LVU156
 481              		.loc 1 183 32 is_stmt 0 view .LVU157
 482 0042 8023     		movs	r3, #128
 483 0044 8361     		str	r3, [r0, #24]
 184:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 484              		.loc 1 184 3 is_stmt 1 view .LVU158
 485              		.loc 1 184 7 is_stmt 0 view .LVU159
 486 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 487              	.LVL18:
 488              		.loc 1 184 6 view .LVU160
 489 004a 0028     		cmp	r0, #0
 490 004c 3BD1     		bne	.L37
 491              	.L30:
 185:Core/Src/tim.c ****   {
 186:Core/Src/tim.c ****     Error_Handler();
 187:Core/Src/tim.c ****   }
 188:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 492              		.loc 1 188 3 is_stmt 1 view .LVU161
 493              		.loc 1 188 34 is_stmt 0 view .LVU162
 494 004e 4FF48053 		mov	r3, #4096
 495 0052 1693     		str	r3, [sp, #88]
ARM GAS  /tmp/ccnnr79r.s 			page 13


 189:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 496              		.loc 1 189 3 is_stmt 1 view .LVU163
 497              		.loc 1 189 7 is_stmt 0 view .LVU164
 498 0054 16A9     		add	r1, sp, #88
 499 0056 2548     		ldr	r0, .L43
 500 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 501              	.LVL19:
 502              		.loc 1 189 6 view .LVU165
 503 005c 0028     		cmp	r0, #0
 504 005e 35D1     		bne	.L38
 505              	.L31:
 190:Core/Src/tim.c ****   {
 191:Core/Src/tim.c ****     Error_Handler();
 192:Core/Src/tim.c ****   }
 193:Core/Src/tim.c ****   if (HAL_TIM_OC_Init(&htim8) != HAL_OK)
 506              		.loc 1 193 3 is_stmt 1 view .LVU166
 507              		.loc 1 193 7 is_stmt 0 view .LVU167
 508 0060 2248     		ldr	r0, .L43
 509 0062 FFF7FEFF 		bl	HAL_TIM_OC_Init
 510              	.LVL20:
 511              		.loc 1 193 6 view .LVU168
 512 0066 0028     		cmp	r0, #0
 513 0068 33D1     		bne	.L39
 514              	.L32:
 194:Core/Src/tim.c ****   {
 195:Core/Src/tim.c ****     Error_Handler();
 196:Core/Src/tim.c ****   }
 197:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 515              		.loc 1 197 3 is_stmt 1 view .LVU169
 516              		.loc 1 197 37 is_stmt 0 view .LVU170
 517 006a 0023     		movs	r3, #0
 518 006c 1393     		str	r3, [sp, #76]
 198:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 519              		.loc 1 198 3 is_stmt 1 view .LVU171
 520              		.loc 1 198 38 is_stmt 0 view .LVU172
 521 006e 1493     		str	r3, [sp, #80]
 199:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 522              		.loc 1 199 3 is_stmt 1 view .LVU173
 523              		.loc 1 199 33 is_stmt 0 view .LVU174
 524 0070 1593     		str	r3, [sp, #84]
 200:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 525              		.loc 1 200 3 is_stmt 1 view .LVU175
 526              		.loc 1 200 7 is_stmt 0 view .LVU176
 527 0072 13A9     		add	r1, sp, #76
 528 0074 1D48     		ldr	r0, .L43
 529 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 530              	.LVL21:
 531              		.loc 1 200 6 view .LVU177
 532 007a 0028     		cmp	r0, #0
 533 007c 2CD1     		bne	.L40
 534              	.L33:
 201:Core/Src/tim.c ****   {
 202:Core/Src/tim.c ****     Error_Handler();
 203:Core/Src/tim.c ****   }
 204:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 535              		.loc 1 204 3 is_stmt 1 view .LVU178
 536              		.loc 1 204 20 is_stmt 0 view .LVU179
ARM GAS  /tmp/ccnnr79r.s 			page 14


 537 007e 0022     		movs	r2, #0
 538 0080 0C92     		str	r2, [sp, #48]
 205:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 539              		.loc 1 205 3 is_stmt 1 view .LVU180
 540              		.loc 1 205 19 is_stmt 0 view .LVU181
 541 0082 0D92     		str	r2, [sp, #52]
 206:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 542              		.loc 1 206 3 is_stmt 1 view .LVU182
 543              		.loc 1 206 24 is_stmt 0 view .LVU183
 544 0084 0E92     		str	r2, [sp, #56]
 207:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 545              		.loc 1 207 3 is_stmt 1 view .LVU184
 546              		.loc 1 207 25 is_stmt 0 view .LVU185
 547 0086 0F92     		str	r2, [sp, #60]
 208:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 548              		.loc 1 208 3 is_stmt 1 view .LVU186
 549              		.loc 1 208 24 is_stmt 0 view .LVU187
 550 0088 1092     		str	r2, [sp, #64]
 209:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 551              		.loc 1 209 3 is_stmt 1 view .LVU188
 552              		.loc 1 209 25 is_stmt 0 view .LVU189
 553 008a 1192     		str	r2, [sp, #68]
 210:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 554              		.loc 1 210 3 is_stmt 1 view .LVU190
 555              		.loc 1 210 26 is_stmt 0 view .LVU191
 556 008c 1292     		str	r2, [sp, #72]
 211:Core/Src/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 557              		.loc 1 211 3 is_stmt 1 view .LVU192
 558              		.loc 1 211 7 is_stmt 0 view .LVU193
 559 008e 0CA9     		add	r1, sp, #48
 560 0090 1648     		ldr	r0, .L43
 561 0092 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 562              	.LVL22:
 563              		.loc 1 211 6 view .LVU194
 564 0096 10BB     		cbnz	r0, .L41
 565              	.L34:
 212:Core/Src/tim.c ****   {
 213:Core/Src/tim.c ****     Error_Handler();
 214:Core/Src/tim.c ****   }
 215:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 566              		.loc 1 215 3 is_stmt 1 view .LVU195
 567              		.loc 1 215 40 is_stmt 0 view .LVU196
 568 0098 0023     		movs	r3, #0
 569 009a 0193     		str	r3, [sp, #4]
 216:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 570              		.loc 1 216 3 is_stmt 1 view .LVU197
 571              		.loc 1 216 41 is_stmt 0 view .LVU198
 572 009c 0293     		str	r3, [sp, #8]
 217:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 573              		.loc 1 217 3 is_stmt 1 view .LVU199
 574              		.loc 1 217 34 is_stmt 0 view .LVU200
 575 009e 0393     		str	r3, [sp, #12]
 218:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 576              		.loc 1 218 3 is_stmt 1 view .LVU201
 577              		.loc 1 218 33 is_stmt 0 view .LVU202
 578 00a0 0493     		str	r3, [sp, #16]
 219:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  /tmp/ccnnr79r.s 			page 15


 579              		.loc 1 219 3 is_stmt 1 view .LVU203
 580              		.loc 1 219 35 is_stmt 0 view .LVU204
 581 00a2 0593     		str	r3, [sp, #20]
 220:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 582              		.loc 1 220 3 is_stmt 1 view .LVU205
 583              		.loc 1 220 38 is_stmt 0 view .LVU206
 584 00a4 4FF40052 		mov	r2, #8192
 585 00a8 0692     		str	r2, [sp, #24]
 221:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 586              		.loc 1 221 3 is_stmt 1 view .LVU207
 587              		.loc 1 221 36 is_stmt 0 view .LVU208
 588 00aa 0793     		str	r3, [sp, #28]
 222:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 589              		.loc 1 222 3 is_stmt 1 view .LVU209
 590              		.loc 1 222 36 is_stmt 0 view .LVU210
 591 00ac 0893     		str	r3, [sp, #32]
 223:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 592              		.loc 1 223 3 is_stmt 1 view .LVU211
 593              		.loc 1 223 39 is_stmt 0 view .LVU212
 594 00ae 4FF00072 		mov	r2, #33554432
 595 00b2 0992     		str	r2, [sp, #36]
 224:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 596              		.loc 1 224 3 is_stmt 1 view .LVU213
 597              		.loc 1 224 37 is_stmt 0 view .LVU214
 598 00b4 0A93     		str	r3, [sp, #40]
 225:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 599              		.loc 1 225 3 is_stmt 1 view .LVU215
 600              		.loc 1 225 40 is_stmt 0 view .LVU216
 601 00b6 0B93     		str	r3, [sp, #44]
 226:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 602              		.loc 1 226 3 is_stmt 1 view .LVU217
 603              		.loc 1 226 7 is_stmt 0 view .LVU218
 604 00b8 01A9     		add	r1, sp, #4
 605 00ba 0C48     		ldr	r0, .L43
 606 00bc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 607              	.LVL23:
 608              		.loc 1 226 6 view .LVU219
 609 00c0 80B9     		cbnz	r0, .L42
 610              	.L29:
 227:Core/Src/tim.c ****   {
 228:Core/Src/tim.c ****     Error_Handler();
 229:Core/Src/tim.c ****   }
 230:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 2 */
 231:Core/Src/tim.c **** 
 232:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 2 */
 233:Core/Src/tim.c **** 
 234:Core/Src/tim.c **** }
 611              		.loc 1 234 1 view .LVU220
 612 00c2 1AB0     		add	sp, sp, #104
 613              		.cfi_remember_state
 614              		.cfi_def_cfa_offset 8
 615              		@ sp needed
 616 00c4 10BD     		pop	{r4, pc}
 617              	.L37:
 618              		.cfi_restore_state
 186:Core/Src/tim.c ****   }
 619              		.loc 1 186 5 is_stmt 1 view .LVU221
ARM GAS  /tmp/ccnnr79r.s 			page 16


 620 00c6 FFF7FEFF 		bl	Error_Handler
 621              	.LVL24:
 622 00ca C0E7     		b	.L30
 623              	.L38:
 191:Core/Src/tim.c ****   }
 624              		.loc 1 191 5 view .LVU222
 625 00cc FFF7FEFF 		bl	Error_Handler
 626              	.LVL25:
 627 00d0 C6E7     		b	.L31
 628              	.L39:
 195:Core/Src/tim.c ****   }
 629              		.loc 1 195 5 view .LVU223
 630 00d2 FFF7FEFF 		bl	Error_Handler
 631              	.LVL26:
 632 00d6 C8E7     		b	.L32
 633              	.L40:
 202:Core/Src/tim.c ****   }
 634              		.loc 1 202 5 view .LVU224
 635 00d8 FFF7FEFF 		bl	Error_Handler
 636              	.LVL27:
 637 00dc CFE7     		b	.L33
 638              	.L41:
 213:Core/Src/tim.c ****   }
 639              		.loc 1 213 5 view .LVU225
 640 00de FFF7FEFF 		bl	Error_Handler
 641              	.LVL28:
 642 00e2 D9E7     		b	.L34
 643              	.L42:
 228:Core/Src/tim.c ****   }
 644              		.loc 1 228 5 view .LVU226
 645 00e4 FFF7FEFF 		bl	Error_Handler
 646              	.LVL29:
 647              		.loc 1 234 1 is_stmt 0 view .LVU227
 648 00e8 EBE7     		b	.L29
 649              	.L44:
 650 00ea 00BF     		.align	2
 651              	.L43:
 652 00ec 00000000 		.word	htim8
 653 00f0 00040140 		.word	1073808384
 654              		.cfi_endproc
 655              	.LFE144:
 657              		.section	.text.HAL_TIM_OC_MspInit,"ax",%progbits
 658              		.align	1
 659              		.global	HAL_TIM_OC_MspInit
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 664              	HAL_TIM_OC_MspInit:
 665              	.LVL30:
 666              	.LFB145:
 235:Core/Src/tim.c **** 
 236:Core/Src/tim.c **** void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* tim_ocHandle)
 237:Core/Src/tim.c **** {
 667              		.loc 1 237 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccnnr79r.s 			page 17


 238:Core/Src/tim.c **** 
 239:Core/Src/tim.c ****   if(tim_ocHandle->Instance==TIM1)
 671              		.loc 1 239 3 view .LVU229
 672              		.loc 1 239 18 is_stmt 0 view .LVU230
 673 0000 0268     		ldr	r2, [r0]
 674              		.loc 1 239 5 view .LVU231
 675 0002 124B     		ldr	r3, .L52
 676 0004 9A42     		cmp	r2, r3
 677 0006 00D0     		beq	.L51
 678 0008 7047     		bx	lr
 679              	.L51:
 237:Core/Src/tim.c **** 
 680              		.loc 1 237 1 view .LVU232
 681 000a 00B5     		push	{lr}
 682              		.cfi_def_cfa_offset 4
 683              		.cfi_offset 14, -4
 684 000c 83B0     		sub	sp, sp, #12
 685              		.cfi_def_cfa_offset 16
 240:Core/Src/tim.c ****   {
 241:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 242:Core/Src/tim.c **** 
 243:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 244:Core/Src/tim.c ****     /* TIM1 clock enable */
 245:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 686              		.loc 1 245 5 is_stmt 1 view .LVU233
 687              	.LBB2:
 688              		.loc 1 245 5 view .LVU234
 689              		.loc 1 245 5 view .LVU235
 690 000e 03F59C33 		add	r3, r3, #79872
 691 0012 5A6C     		ldr	r2, [r3, #68]
 692 0014 42F00102 		orr	r2, r2, #1
 693 0018 5A64     		str	r2, [r3, #68]
 694              		.loc 1 245 5 view .LVU236
 695 001a 5B6C     		ldr	r3, [r3, #68]
 696 001c 03F00103 		and	r3, r3, #1
 697 0020 0193     		str	r3, [sp, #4]
 698              		.loc 1 245 5 view .LVU237
 699 0022 019B     		ldr	r3, [sp, #4]
 700              	.LBE2:
 701              		.loc 1 245 5 view .LVU238
 246:Core/Src/tim.c **** 
 247:Core/Src/tim.c ****     /* TIM1 interrupt Init */
 248:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 11, 0);
 702              		.loc 1 248 5 view .LVU239
 703 0024 0022     		movs	r2, #0
 704 0026 0B21     		movs	r1, #11
 705 0028 1920     		movs	r0, #25
 706              	.LVL31:
 707              		.loc 1 248 5 is_stmt 0 view .LVU240
 708 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 709              	.LVL32:
 249:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 710              		.loc 1 249 5 is_stmt 1 view .LVU241
 711 002e 1920     		movs	r0, #25
 712 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 713              	.LVL33:
 250:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_CC_IRQn, 10, 0);
ARM GAS  /tmp/ccnnr79r.s 			page 18


 714              		.loc 1 250 5 view .LVU242
 715 0034 0022     		movs	r2, #0
 716 0036 0A21     		movs	r1, #10
 717 0038 1B20     		movs	r0, #27
 718 003a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 719              	.LVL34:
 251:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 720              		.loc 1 251 5 view .LVU243
 721 003e 1B20     		movs	r0, #27
 722 0040 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 723              	.LVL35:
 252:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 253:Core/Src/tim.c **** 
 254:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 255:Core/Src/tim.c ****   }
 256:Core/Src/tim.c **** }
 724              		.loc 1 256 1 is_stmt 0 view .LVU244
 725 0044 03B0     		add	sp, sp, #12
 726              		.cfi_def_cfa_offset 4
 727              		@ sp needed
 728 0046 5DF804FB 		ldr	pc, [sp], #4
 729              	.L53:
 730 004a 00BF     		.align	2
 731              	.L52:
 732 004c 00000140 		.word	1073807360
 733              		.cfi_endproc
 734              	.LFE145:
 736              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 737              		.align	1
 738              		.global	HAL_TIM_Base_MspInit
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	HAL_TIM_Base_MspInit:
 744              	.LVL36:
 745              	.LFB146:
 257:Core/Src/tim.c **** 
 258:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 259:Core/Src/tim.c **** {
 746              		.loc 1 259 1 is_stmt 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 16
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		.loc 1 259 1 is_stmt 0 view .LVU246
 751 0000 00B5     		push	{lr}
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 14, -4
 754 0002 85B0     		sub	sp, sp, #20
 755              		.cfi_def_cfa_offset 24
 260:Core/Src/tim.c **** 
 261:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM6)
 756              		.loc 1 261 3 is_stmt 1 view .LVU247
 757              		.loc 1 261 20 is_stmt 0 view .LVU248
 758 0004 0368     		ldr	r3, [r0]
 759              		.loc 1 261 5 view .LVU249
 760 0006 224A     		ldr	r2, .L62
 761 0008 9342     		cmp	r3, r2
ARM GAS  /tmp/ccnnr79r.s 			page 19


 762 000a 08D0     		beq	.L59
 262:Core/Src/tim.c ****   {
 263:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 264:Core/Src/tim.c **** 
 265:Core/Src/tim.c ****   /* USER CODE END TIM6_MspInit 0 */
 266:Core/Src/tim.c ****     /* TIM6 clock enable */
 267:Core/Src/tim.c ****     __HAL_RCC_TIM6_CLK_ENABLE();
 268:Core/Src/tim.c **** 
 269:Core/Src/tim.c ****     /* TIM6 interrupt Init */
 270:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 12, 0);
 271:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 272:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 273:Core/Src/tim.c **** 
 274:Core/Src/tim.c ****   /* USER CODE END TIM6_MspInit 1 */
 275:Core/Src/tim.c ****   }
 276:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM7)
 763              		.loc 1 276 8 is_stmt 1 view .LVU250
 764              		.loc 1 276 10 is_stmt 0 view .LVU251
 765 000c 214A     		ldr	r2, .L62+4
 766 000e 9342     		cmp	r3, r2
 767 0010 18D0     		beq	.L60
 277:Core/Src/tim.c ****   {
 278:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspInit 0 */
 279:Core/Src/tim.c **** 
 280:Core/Src/tim.c ****   /* USER CODE END TIM7_MspInit 0 */
 281:Core/Src/tim.c ****     /* TIM7 clock enable */
 282:Core/Src/tim.c ****     __HAL_RCC_TIM7_CLK_ENABLE();
 283:Core/Src/tim.c **** 
 284:Core/Src/tim.c ****     /* TIM7 interrupt Init */
 285:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM7_IRQn, 13, 0);
 286:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM7_IRQn);
 287:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 288:Core/Src/tim.c **** 
 289:Core/Src/tim.c ****   /* USER CODE END TIM7_MspInit 1 */
 290:Core/Src/tim.c ****   }
 291:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 768              		.loc 1 291 8 is_stmt 1 view .LVU252
 769              		.loc 1 291 10 is_stmt 0 view .LVU253
 770 0012 214A     		ldr	r2, .L62+8
 771 0014 9342     		cmp	r3, r2
 772 0016 28D0     		beq	.L61
 773              	.LVL37:
 774              	.L54:
 292:Core/Src/tim.c ****   {
 293:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 294:Core/Src/tim.c **** 
 295:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 0 */
 296:Core/Src/tim.c ****     /* TIM8 clock enable */
 297:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_ENABLE();
 298:Core/Src/tim.c **** 
 299:Core/Src/tim.c ****     /* TIM8 interrupt Init */
 300:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM8_CC_IRQn, 9, 0);
 301:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM8_CC_IRQn);
 302:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 303:Core/Src/tim.c **** 
 304:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 1 */
 305:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccnnr79r.s 			page 20


 306:Core/Src/tim.c **** }
 775              		.loc 1 306 1 view .LVU254
 776 0018 05B0     		add	sp, sp, #20
 777              		.cfi_remember_state
 778              		.cfi_def_cfa_offset 4
 779              		@ sp needed
 780 001a 5DF804FB 		ldr	pc, [sp], #4
 781              	.LVL38:
 782              	.L59:
 783              		.cfi_restore_state
 267:Core/Src/tim.c **** 
 784              		.loc 1 267 5 is_stmt 1 view .LVU255
 785              	.LBB3:
 267:Core/Src/tim.c **** 
 786              		.loc 1 267 5 view .LVU256
 267:Core/Src/tim.c **** 
 787              		.loc 1 267 5 view .LVU257
 788 001e 1F4B     		ldr	r3, .L62+12
 789 0020 1A6C     		ldr	r2, [r3, #64]
 790 0022 42F01002 		orr	r2, r2, #16
 791 0026 1A64     		str	r2, [r3, #64]
 267:Core/Src/tim.c **** 
 792              		.loc 1 267 5 view .LVU258
 793 0028 1B6C     		ldr	r3, [r3, #64]
 794 002a 03F01003 		and	r3, r3, #16
 795 002e 0193     		str	r3, [sp, #4]
 267:Core/Src/tim.c **** 
 796              		.loc 1 267 5 view .LVU259
 797 0030 019B     		ldr	r3, [sp, #4]
 798              	.LBE3:
 267:Core/Src/tim.c **** 
 799              		.loc 1 267 5 view .LVU260
 270:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800              		.loc 1 270 5 view .LVU261
 801 0032 0022     		movs	r2, #0
 802 0034 0C21     		movs	r1, #12
 803 0036 3620     		movs	r0, #54
 804              	.LVL39:
 270:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 805              		.loc 1 270 5 is_stmt 0 view .LVU262
 806 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 807              	.LVL40:
 271:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 808              		.loc 1 271 5 is_stmt 1 view .LVU263
 809 003c 3620     		movs	r0, #54
 810 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 811              	.LVL41:
 812 0042 E9E7     		b	.L54
 813              	.LVL42:
 814              	.L60:
 282:Core/Src/tim.c **** 
 815              		.loc 1 282 5 view .LVU264
 816              	.LBB4:
 282:Core/Src/tim.c **** 
 817              		.loc 1 282 5 view .LVU265
 282:Core/Src/tim.c **** 
 818              		.loc 1 282 5 view .LVU266
ARM GAS  /tmp/ccnnr79r.s 			page 21


 819 0044 154B     		ldr	r3, .L62+12
 820 0046 1A6C     		ldr	r2, [r3, #64]
 821 0048 42F02002 		orr	r2, r2, #32
 822 004c 1A64     		str	r2, [r3, #64]
 282:Core/Src/tim.c **** 
 823              		.loc 1 282 5 view .LVU267
 824 004e 1B6C     		ldr	r3, [r3, #64]
 825 0050 03F02003 		and	r3, r3, #32
 826 0054 0293     		str	r3, [sp, #8]
 282:Core/Src/tim.c **** 
 827              		.loc 1 282 5 view .LVU268
 828 0056 029B     		ldr	r3, [sp, #8]
 829              	.LBE4:
 282:Core/Src/tim.c **** 
 830              		.loc 1 282 5 view .LVU269
 285:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM7_IRQn);
 831              		.loc 1 285 5 view .LVU270
 832 0058 0022     		movs	r2, #0
 833 005a 0D21     		movs	r1, #13
 834 005c 3720     		movs	r0, #55
 835              	.LVL43:
 285:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM7_IRQn);
 836              		.loc 1 285 5 is_stmt 0 view .LVU271
 837 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 838              	.LVL44:
 286:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 839              		.loc 1 286 5 is_stmt 1 view .LVU272
 840 0062 3720     		movs	r0, #55
 841 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 842              	.LVL45:
 843 0068 D6E7     		b	.L54
 844              	.LVL46:
 845              	.L61:
 297:Core/Src/tim.c **** 
 846              		.loc 1 297 5 view .LVU273
 847              	.LBB5:
 297:Core/Src/tim.c **** 
 848              		.loc 1 297 5 view .LVU274
 297:Core/Src/tim.c **** 
 849              		.loc 1 297 5 view .LVU275
 850 006a 0C4B     		ldr	r3, .L62+12
 851 006c 5A6C     		ldr	r2, [r3, #68]
 852 006e 42F00202 		orr	r2, r2, #2
 853 0072 5A64     		str	r2, [r3, #68]
 297:Core/Src/tim.c **** 
 854              		.loc 1 297 5 view .LVU276
 855 0074 5B6C     		ldr	r3, [r3, #68]
 856 0076 03F00203 		and	r3, r3, #2
 857 007a 0393     		str	r3, [sp, #12]
 297:Core/Src/tim.c **** 
 858              		.loc 1 297 5 view .LVU277
 859 007c 039B     		ldr	r3, [sp, #12]
 860              	.LBE5:
 297:Core/Src/tim.c **** 
 861              		.loc 1 297 5 view .LVU278
 300:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM8_CC_IRQn);
 862              		.loc 1 300 5 view .LVU279
ARM GAS  /tmp/ccnnr79r.s 			page 22


 863 007e 0022     		movs	r2, #0
 864 0080 0921     		movs	r1, #9
 865 0082 2E20     		movs	r0, #46
 866              	.LVL47:
 300:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM8_CC_IRQn);
 867              		.loc 1 300 5 is_stmt 0 view .LVU280
 868 0084 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 869              	.LVL48:
 301:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 870              		.loc 1 301 5 is_stmt 1 view .LVU281
 871 0088 2E20     		movs	r0, #46
 872 008a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 873              	.LVL49:
 874              		.loc 1 306 1 is_stmt 0 view .LVU282
 875 008e C3E7     		b	.L54
 876              	.L63:
 877              		.align	2
 878              	.L62:
 879 0090 00100040 		.word	1073745920
 880 0094 00140040 		.word	1073746944
 881 0098 00040140 		.word	1073808384
 882 009c 00380240 		.word	1073887232
 883              		.cfi_endproc
 884              	.LFE146:
 886              		.section	.text.HAL_TIM_OC_MspDeInit,"ax",%progbits
 887              		.align	1
 888              		.global	HAL_TIM_OC_MspDeInit
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 893              	HAL_TIM_OC_MspDeInit:
 894              	.LVL50:
 895              	.LFB147:
 307:Core/Src/tim.c **** 
 308:Core/Src/tim.c **** void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef* tim_ocHandle)
 309:Core/Src/tim.c **** {
 896              		.loc 1 309 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		.loc 1 309 1 is_stmt 0 view .LVU284
 901 0000 08B5     		push	{r3, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 3, -8
 904              		.cfi_offset 14, -4
 310:Core/Src/tim.c **** 
 311:Core/Src/tim.c ****   if(tim_ocHandle->Instance==TIM1)
 905              		.loc 1 311 3 is_stmt 1 view .LVU285
 906              		.loc 1 311 18 is_stmt 0 view .LVU286
 907 0002 0268     		ldr	r2, [r0]
 908              		.loc 1 311 5 view .LVU287
 909 0004 074B     		ldr	r3, .L68
 910 0006 9A42     		cmp	r2, r3
 911 0008 00D0     		beq	.L67
 912              	.LVL51:
 913              	.L64:
 312:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccnnr79r.s 			page 23


 313:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 314:Core/Src/tim.c **** 
 315:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 316:Core/Src/tim.c ****     /* Peripheral clock disable */
 317:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 318:Core/Src/tim.c **** 
 319:Core/Src/tim.c ****     /* TIM1 interrupt Deinit */
 320:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM10_IRQn);
 321:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 322:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 323:Core/Src/tim.c **** 
 324:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 325:Core/Src/tim.c ****   }
 326:Core/Src/tim.c **** }
 914              		.loc 1 326 1 view .LVU288
 915 000a 08BD     		pop	{r3, pc}
 916              	.LVL52:
 917              	.L67:
 317:Core/Src/tim.c **** 
 918              		.loc 1 317 5 is_stmt 1 view .LVU289
 919 000c 064A     		ldr	r2, .L68+4
 920 000e 536C     		ldr	r3, [r2, #68]
 921 0010 23F00103 		bic	r3, r3, #1
 922 0014 5364     		str	r3, [r2, #68]
 320:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 923              		.loc 1 320 5 view .LVU290
 924 0016 1920     		movs	r0, #25
 925              	.LVL53:
 320:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 926              		.loc 1 320 5 is_stmt 0 view .LVU291
 927 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 928              	.LVL54:
 321:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 929              		.loc 1 321 5 is_stmt 1 view .LVU292
 930 001c 1B20     		movs	r0, #27
 931 001e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 932              	.LVL55:
 933              		.loc 1 326 1 is_stmt 0 view .LVU293
 934 0022 F2E7     		b	.L64
 935              	.L69:
 936              		.align	2
 937              	.L68:
 938 0024 00000140 		.word	1073807360
 939 0028 00380240 		.word	1073887232
 940              		.cfi_endproc
 941              	.LFE147:
 943              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 944              		.align	1
 945              		.global	HAL_TIM_Base_MspDeInit
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 950              	HAL_TIM_Base_MspDeInit:
 951              	.LVL56:
 952              	.LFB148:
 327:Core/Src/tim.c **** 
 328:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
ARM GAS  /tmp/ccnnr79r.s 			page 24


 329:Core/Src/tim.c **** {
 953              		.loc 1 329 1 is_stmt 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		.loc 1 329 1 is_stmt 0 view .LVU295
 958 0000 08B5     		push	{r3, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 3, -8
 961              		.cfi_offset 14, -4
 330:Core/Src/tim.c **** 
 331:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM6)
 962              		.loc 1 331 3 is_stmt 1 view .LVU296
 963              		.loc 1 331 20 is_stmt 0 view .LVU297
 964 0002 0368     		ldr	r3, [r0]
 965              		.loc 1 331 5 view .LVU298
 966 0004 134A     		ldr	r2, .L78
 967 0006 9342     		cmp	r3, r2
 968 0008 06D0     		beq	.L75
 332:Core/Src/tim.c ****   {
 333:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 334:Core/Src/tim.c **** 
 335:Core/Src/tim.c ****   /* USER CODE END TIM6_MspDeInit 0 */
 336:Core/Src/tim.c ****     /* Peripheral clock disable */
 337:Core/Src/tim.c ****     __HAL_RCC_TIM6_CLK_DISABLE();
 338:Core/Src/tim.c **** 
 339:Core/Src/tim.c ****     /* TIM6 interrupt Deinit */
 340:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM6_DAC_IRQn);
 341:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 342:Core/Src/tim.c **** 
 343:Core/Src/tim.c ****   /* USER CODE END TIM6_MspDeInit 1 */
 344:Core/Src/tim.c ****   }
 345:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM7)
 969              		.loc 1 345 8 is_stmt 1 view .LVU299
 970              		.loc 1 345 10 is_stmt 0 view .LVU300
 971 000a 134A     		ldr	r2, .L78+4
 972 000c 9342     		cmp	r3, r2
 973 000e 0DD0     		beq	.L76
 346:Core/Src/tim.c ****   {
 347:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspDeInit 0 */
 348:Core/Src/tim.c **** 
 349:Core/Src/tim.c ****   /* USER CODE END TIM7_MspDeInit 0 */
 350:Core/Src/tim.c ****     /* Peripheral clock disable */
 351:Core/Src/tim.c ****     __HAL_RCC_TIM7_CLK_DISABLE();
 352:Core/Src/tim.c **** 
 353:Core/Src/tim.c ****     /* TIM7 interrupt Deinit */
 354:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM7_IRQn);
 355:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 356:Core/Src/tim.c **** 
 357:Core/Src/tim.c ****   /* USER CODE END TIM7_MspDeInit 1 */
 358:Core/Src/tim.c ****   }
 359:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 974              		.loc 1 359 8 is_stmt 1 view .LVU301
 975              		.loc 1 359 10 is_stmt 0 view .LVU302
 976 0010 124A     		ldr	r2, .L78+8
 977 0012 9342     		cmp	r3, r2
 978 0014 14D0     		beq	.L77
ARM GAS  /tmp/ccnnr79r.s 			page 25


 979              	.LVL57:
 980              	.L70:
 360:Core/Src/tim.c ****   {
 361:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 362:Core/Src/tim.c **** 
 363:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 0 */
 364:Core/Src/tim.c ****     /* Peripheral clock disable */
 365:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_DISABLE();
 366:Core/Src/tim.c **** 
 367:Core/Src/tim.c ****     /* TIM8 interrupt Deinit */
 368:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM8_CC_IRQn);
 369:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 370:Core/Src/tim.c **** 
 371:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 1 */
 372:Core/Src/tim.c ****   }
 373:Core/Src/tim.c **** }
 981              		.loc 1 373 1 view .LVU303
 982 0016 08BD     		pop	{r3, pc}
 983              	.LVL58:
 984              	.L75:
 337:Core/Src/tim.c **** 
 985              		.loc 1 337 5 is_stmt 1 view .LVU304
 986 0018 02F50A32 		add	r2, r2, #141312
 987 001c 136C     		ldr	r3, [r2, #64]
 988 001e 23F01003 		bic	r3, r3, #16
 989 0022 1364     		str	r3, [r2, #64]
 340:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 990              		.loc 1 340 5 view .LVU305
 991 0024 3620     		movs	r0, #54
 992              	.LVL59:
 340:Core/Src/tim.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 993              		.loc 1 340 5 is_stmt 0 view .LVU306
 994 0026 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 995              	.LVL60:
 996 002a F4E7     		b	.L70
 997              	.LVL61:
 998              	.L76:
 351:Core/Src/tim.c **** 
 999              		.loc 1 351 5 is_stmt 1 view .LVU307
 1000 002c 02F50932 		add	r2, r2, #140288
 1001 0030 136C     		ldr	r3, [r2, #64]
 1002 0032 23F02003 		bic	r3, r3, #32
 1003 0036 1364     		str	r3, [r2, #64]
 354:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 1004              		.loc 1 354 5 view .LVU308
 1005 0038 3720     		movs	r0, #55
 1006              	.LVL62:
 354:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 1007              		.loc 1 354 5 is_stmt 0 view .LVU309
 1008 003a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1009              	.LVL63:
 1010 003e EAE7     		b	.L70
 1011              	.LVL64:
 1012              	.L77:
 365:Core/Src/tim.c **** 
 1013              		.loc 1 365 5 is_stmt 1 view .LVU310
 1014 0040 02F59A32 		add	r2, r2, #78848
ARM GAS  /tmp/ccnnr79r.s 			page 26


 1015 0044 536C     		ldr	r3, [r2, #68]
 1016 0046 23F00203 		bic	r3, r3, #2
 1017 004a 5364     		str	r3, [r2, #68]
 368:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 1018              		.loc 1 368 5 view .LVU311
 1019 004c 2E20     		movs	r0, #46
 1020              	.LVL65:
 368:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 1021              		.loc 1 368 5 is_stmt 0 view .LVU312
 1022 004e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1023              	.LVL66:
 1024              		.loc 1 373 1 view .LVU313
 1025 0052 E0E7     		b	.L70
 1026              	.L79:
 1027              		.align	2
 1028              	.L78:
 1029 0054 00100040 		.word	1073745920
 1030 0058 00140040 		.word	1073746944
 1031 005c 00040140 		.word	1073808384
 1032              		.cfi_endproc
 1033              	.LFE148:
 1035              		.global	htim8
 1036              		.section	.bss.htim8,"aw",%nobits
 1037              		.align	2
 1040              	htim8:
 1041 0000 00000000 		.space	76
 1041      00000000 
 1041      00000000 
 1041      00000000 
 1041      00000000 
 1042              		.global	htim7
 1043              		.section	.bss.htim7,"aw",%nobits
 1044              		.align	2
 1047              	htim7:
 1048 0000 00000000 		.space	76
 1048      00000000 
 1048      00000000 
 1048      00000000 
 1048      00000000 
 1049              		.global	htim6
 1050              		.section	.bss.htim6,"aw",%nobits
 1051              		.align	2
 1054              	htim6:
 1055 0000 00000000 		.space	76
 1055      00000000 
 1055      00000000 
 1055      00000000 
 1055      00000000 
 1056              		.global	htim1
 1057              		.section	.bss.htim1,"aw",%nobits
 1058              		.align	2
 1061              	htim1:
 1062 0000 00000000 		.space	76
 1062      00000000 
 1062      00000000 
 1062      00000000 
 1062      00000000 
ARM GAS  /tmp/ccnnr79r.s 			page 27


 1063              		.text
 1064              	.Letext0:
 1065              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 1066              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1067              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1068              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1069              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1070              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1071              		.file 8 "Core/Inc/tim.h"
 1072              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1073              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1074              		.file 11 "Core/Inc/main.h"
 1075              		.file 12 "<built-in>"
ARM GAS  /tmp/ccnnr79r.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccnnr79r.s:21     .text.MX_TIM1_Init:00000000 $t
     /tmp/ccnnr79r.s:27     .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccnnr79r.s:222    .text.MX_TIM1_Init:000000c0 $d
     /tmp/ccnnr79r.s:1061   .bss.htim1:00000000 htim1
     /tmp/ccnnr79r.s:228    .text.MX_TIM6_Init:00000000 $t
     /tmp/ccnnr79r.s:234    .text.MX_TIM6_Init:00000000 MX_TIM6_Init
     /tmp/ccnnr79r.s:314    .text.MX_TIM6_Init:00000048 $d
     /tmp/ccnnr79r.s:1054   .bss.htim6:00000000 htim6
     /tmp/ccnnr79r.s:320    .text.MX_TIM7_Init:00000000 $t
     /tmp/ccnnr79r.s:326    .text.MX_TIM7_Init:00000000 MX_TIM7_Init
     /tmp/ccnnr79r.s:406    .text.MX_TIM7_Init:0000004c $d
     /tmp/ccnnr79r.s:1047   .bss.htim7:00000000 htim7
     /tmp/ccnnr79r.s:412    .text.MX_TIM8_Init:00000000 $t
     /tmp/ccnnr79r.s:418    .text.MX_TIM8_Init:00000000 MX_TIM8_Init
     /tmp/ccnnr79r.s:652    .text.MX_TIM8_Init:000000ec $d
     /tmp/ccnnr79r.s:1040   .bss.htim8:00000000 htim8
     /tmp/ccnnr79r.s:658    .text.HAL_TIM_OC_MspInit:00000000 $t
     /tmp/ccnnr79r.s:664    .text.HAL_TIM_OC_MspInit:00000000 HAL_TIM_OC_MspInit
     /tmp/ccnnr79r.s:732    .text.HAL_TIM_OC_MspInit:0000004c $d
     /tmp/ccnnr79r.s:737    .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccnnr79r.s:743    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccnnr79r.s:879    .text.HAL_TIM_Base_MspInit:00000090 $d
     /tmp/ccnnr79r.s:887    .text.HAL_TIM_OC_MspDeInit:00000000 $t
     /tmp/ccnnr79r.s:893    .text.HAL_TIM_OC_MspDeInit:00000000 HAL_TIM_OC_MspDeInit
     /tmp/ccnnr79r.s:938    .text.HAL_TIM_OC_MspDeInit:00000024 $d
     /tmp/ccnnr79r.s:944    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccnnr79r.s:950    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccnnr79r.s:1029   .text.HAL_TIM_Base_MspDeInit:00000054 $d
     /tmp/ccnnr79r.s:1037   .bss.htim8:00000000 $d
     /tmp/ccnnr79r.s:1044   .bss.htim7:00000000 $d
     /tmp/ccnnr79r.s:1051   .bss.htim6:00000000 $d
     /tmp/ccnnr79r.s:1058   .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
