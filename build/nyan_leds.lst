ARM GAS  /tmp/ccsMyLxb.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_leds.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_d2f
  20              		.global	__aeabi_f2d
  21              		.global	__aeabi_dmul
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_d2uiz
  24              		.section	.text.getSystemStatusOCRValue,"ax",%progbits
  25              		.align	1
  26              		.global	getSystemStatusOCRValue
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	getSystemStatusOCRValue:
  32              	.LVL0:
  33              	.LFB0:
  34              		.file 1 "Core/Src/nyan_leds.c"
   1:Core/Src/nyan_leds.c **** /**
   2:Core/Src/nyan_leds.c ****  * @file nyan_leds.c
   3:Core/Src/nyan_leds.c ****  * @brief Implementation of LED timing and control functionality.
   4:Core/Src/nyan_leds.c ****  */
   5:Core/Src/nyan_leds.c **** #include "nyan_leds.h"
   6:Core/Src/nyan_leds.c **** 
   7:Core/Src/nyan_leds.c **** /** 
   8:Core/Src/nyan_leds.c ****  * @brief Frame rate at which the system status LED operates.
   9:Core/Src/nyan_leds.c ****  */
  10:Core/Src/nyan_leds.c **** const double SYSTEM_STATUS_LED_FPS = 255;
  11:Core/Src/nyan_leds.c **** 
  12:Core/Src/nyan_leds.c **** /** 
  13:Core/Src/nyan_leds.c ****  * @brief Increment of radians for each frame in the system status LED animation.
  14:Core/Src/nyan_leds.c ****  *
  15:Core/Src/nyan_leds.c ****  * Calculated based on the 2Ï€ radians of a full circle divided by the number of frames per second.
  16:Core/Src/nyan_leds.c ****  */
  17:Core/Src/nyan_leds.c **** const double SYSTEM_STATUS_DEGREE_INCREMENT = (2 * 3.14)/SYSTEM_STATUS_LED_FPS;
  18:Core/Src/nyan_leds.c **** 
  19:Core/Src/nyan_leds.c **** /**
  20:Core/Src/nyan_leds.c ****  * @brief Calculates the OCR value for system status LED based on the given angle in radians.
  21:Core/Src/nyan_leds.c ****  *
  22:Core/Src/nyan_leds.c ****  * This function takes an angle in radians and calculates the corresponding OCR value for the LED c
  23:Core/Src/nyan_leds.c ****  * It uses a cosine function to create a pulsing effect, with the formula [Sin^2(x) + Cos^2(x) = 1]
  24:Core/Src/nyan_leds.c ****  *
ARM GAS  /tmp/ccsMyLxb.s 			page 2


  25:Core/Src/nyan_leds.c ****  * @param radians The angle in radians for which to calculate the OCR value.
  26:Core/Src/nyan_leds.c ****  * @return The calculated OCR value to control the LED brightness.
  27:Core/Src/nyan_leds.c ****  */
  28:Core/Src/nyan_leds.c **** unsigned char getSystemStatusOCRValue(double radians) {
  35              		.loc 1 28 55 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 28 55 is_stmt 0 view .LVU1
  40 0000 08B5     		push	{r3, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
  45 0002 51EC100B 		vmov	r0, r1, d0
  29:Core/Src/nyan_leds.c ****     double t_on = pow(cosf(radians), 2);
  46              		.loc 1 29 5 is_stmt 1 view .LVU2
  47              		.loc 1 29 23 is_stmt 0 view .LVU3
  48 0006 FFF7FEFF 		bl	__aeabi_d2f
  49              	.LVL1:
  50              		.loc 1 29 23 view .LVU4
  51 000a 00EE100A 		vmov	s0, r0
  52 000e FFF7FEFF 		bl	cosf
  53              	.LVL2:
  54 0012 10EE100A 		vmov	r0, s0
  55              		.loc 1 29 19 view .LVU5
  56 0016 FFF7FEFF 		bl	__aeabi_f2d
  57              	.LVL3:
  58 001a 9FED0D1B 		vldr.64	d1, .L3
  59 001e 41EC100B 		vmov	d0, r0, r1
  60 0022 FFF7FEFF 		bl	pow
  61              	.LVL4:
  62 0026 51EC100B 		vmov	r0, r1, d0
  63              	.LVL5:
  30:Core/Src/nyan_leds.c ****     t_on *= 50;
  64              		.loc 1 30 5 is_stmt 1 view .LVU6
  65              		.loc 1 30 10 is_stmt 0 view .LVU7
  66 002a 0022     		movs	r2, #0
  67 002c 0A4B     		ldr	r3, .L3+8
  68 002e FFF7FEFF 		bl	__aeabi_dmul
  69              	.LVL6:
  31:Core/Src/nyan_leds.c ****     t_on += 5;
  70              		.loc 1 31 5 is_stmt 1 view .LVU8
  71              		.loc 1 31 10 is_stmt 0 view .LVU9
  72 0032 0022     		movs	r2, #0
  73 0034 094B     		ldr	r3, .L3+12
  74 0036 FFF7FEFF 		bl	__aeabi_dadd
  75              	.LVL7:
  32:Core/Src/nyan_leds.c **** 
  33:Core/Src/nyan_leds.c ****     return (unsigned char)floor(t_on);
  76              		.loc 1 33 5 is_stmt 1 view .LVU10
  77              		.loc 1 33 27 is_stmt 0 view .LVU11
  78 003a 41EC100B 		vmov	d0, r0, r1
  79 003e FFF7FEFF 		bl	floor
  80              	.LVL8:
  81              		.loc 1 33 27 view .LVU12
  82 0042 51EC100B 		vmov	r0, r1, d0
ARM GAS  /tmp/ccsMyLxb.s 			page 3


  83              		.loc 1 33 12 view .LVU13
  84 0046 FFF7FEFF 		bl	__aeabi_d2uiz
  85              	.LVL9:
  34:Core/Src/nyan_leds.c **** }...
  86              		.loc 1 34 1 view .LVU14
  87 004a C0B2     		uxtb	r0, r0
  88 004c 08BD     		pop	{r3, pc}
  89              	.L4:
  90 004e 00BF     		.align	3
  91              	.L3:
  92 0050 00000000 		.word	0
  93 0054 00000040 		.word	1073741824
  94 0058 00004940 		.word	1078525952
  95 005c 00001440 		.word	1075052544
  96              		.cfi_endproc
  97              	.LFE0:
  99              		.global	SYSTEM_STATUS_DEGREE_INCREMENT
 100              		.global	SYSTEM_STATUS_LED_FPS
 101              		.section	.rodata.SYSTEM_STATUS_DEGREE_INCREMENT,"a"
 102              		.align	3
 105              	SYSTEM_STATUS_DEGREE_INCREMENT:
 106 0000 D2B22D42 		.word	1110291154
 107 0004 F037993F 		.word	1067005936
 108              		.section	.rodata.SYSTEM_STATUS_LED_FPS,"a"
 109              		.align	3
 112              	SYSTEM_STATUS_LED_FPS:
 113 0000 00000000 		.word	0
 114 0004 00E06F40 		.word	1081073664
 115              		.text
 116              	.Letext0:
 117              		.file 2 "Core/Inc/nyan_leds.h"
 118              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccsMyLxb.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nyan_leds.c
     /tmp/ccsMyLxb.s:25     .text.getSystemStatusOCRValue:0000000000000000 $t
     /tmp/ccsMyLxb.s:31     .text.getSystemStatusOCRValue:0000000000000000 getSystemStatusOCRValue
     /tmp/ccsMyLxb.s:92     .text.getSystemStatusOCRValue:0000000000000050 $d
     /tmp/ccsMyLxb.s:105    .rodata.SYSTEM_STATUS_DEGREE_INCREMENT:0000000000000000 SYSTEM_STATUS_DEGREE_INCREMENT
     /tmp/ccsMyLxb.s:112    .rodata.SYSTEM_STATUS_LED_FPS:0000000000000000 SYSTEM_STATUS_LED_FPS
     /tmp/ccsMyLxb.s:102    .rodata.SYSTEM_STATUS_DEGREE_INCREMENT:0000000000000000 $d
     /tmp/ccsMyLxb.s:109    .rodata.SYSTEM_STATUS_LED_FPS:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_d2f
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
cosf
pow
floor
