ARM GAS  /tmp/cc9RMdGn.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_I2C_MemTxCpltCallback
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_I2C_MemTxCpltCallback:
  28              	.LVL0:
  29              	.LFB147:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "rng.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "usb_otg.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/cc9RMdGn.s 			page 2


  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "usb_device.h"
  32:Core/Src/main.c **** #include "usbd_cdc_acm_if.h"
  33:Core/Src/main.c **** #include "24xx_eeprom.h"
  34:Core/Src/main.c **** #include "nyan_os.h"
  35:Core/Src/main.c **** #include "nyan_leds.h"
  36:Core/Src/main.c **** #include "nyan_strings.h"
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** double system_status_led_angle;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** volatile NyanOS nos;
  61:Core/Src/main.c **** Eeprom24xx nos_eeprom;
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/cc9RMdGn.s 			page 3


  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c ****   system_status_led_angle = 0;
  91:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
  92:Core/Src/main.c ****   NyanOsInit(&nos, &nos_eeprom);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_DMA_Init();
 106:Core/Src/main.c ****   MX_SPI1_Init();
 107:Core/Src/main.c ****   MX_SPI2_Init();
 108:Core/Src/main.c ****   MX_SPI4_Init();
 109:Core/Src/main.c ****   MX_I2C1_Init();
 110:Core/Src/main.c ****   MX_TIM7_Init();
 111:Core/Src/main.c ****   MX_TIM6_Init();
 112:Core/Src/main.c ****   MX_TIM1_Init();
 113:Core/Src/main.c ****   MX_USB_OTG_HS_PCD_Init();
 114:Core/Src/main.c ****   MX_RNG_Init();
 115:Core/Src/main.c ****   MX_TIM8_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   // Activate the STM32F7 timer interrupts
 118:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 119:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 120:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 121:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 122:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 123:Core/Src/main.c ****   // USB composite device creation
 124:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
ARM GAS  /tmp/cc9RMdGn.s 			page 4


 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 153:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Activate the Over-Drive mode
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 191:Core/Src/main.c **** void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *I2cHandle)
 192:Core/Src/main.c **** {
  30              		.loc 1 192 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 193:Core/Src/main.c ****   nos_eeprom.tx_inflight = false;
  35              		.loc 1 193 3 view .LVU1
  36              		.loc 1 193 26 is_stmt 0 view .LVU2
ARM GAS  /tmp/cc9RMdGn.s 			page 5


  37 0000 014B     		ldr	r3, .L2
  38 0002 0022     		movs	r2, #0
  39 0004 9A70     		strb	r2, [r3, #2]
 194:Core/Src/main.c **** }
  40              		.loc 1 194 1 view .LVU3
  41 0006 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0008 00000000 		.word	nos_eeprom
  46              		.cfi_endproc
  47              	.LFE147:
  49              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
  50              		.align	1
  51              		.global	HAL_I2C_MemRxCpltCallback
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	HAL_I2C_MemRxCpltCallback:
  57              	.LVL1:
  58              	.LFB148:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *I2cHandle)
 197:Core/Src/main.c **** {
  59              		.loc 1 197 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 198:Core/Src/main.c ****   nos_eeprom.rx_inflight = false;
  64              		.loc 1 198 3 view .LVU5
  65              		.loc 1 198 26 is_stmt 0 view .LVU6
  66 0000 014B     		ldr	r3, .L5
  67 0002 0022     		movs	r2, #0
  68 0004 DA70     		strb	r2, [r3, #3]
 199:Core/Src/main.c **** }
  69              		.loc 1 199 1 view .LVU7
  70 0006 7047     		bx	lr
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0008 00000000 		.word	nos_eeprom
  75              		.cfi_endproc
  76              	.LFE148:
  78              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_PeriodElapsedCallback
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	HAL_TIM_PeriodElapsedCallback:
  86              	.LVL2:
  87              	.LFB150:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *I2cHandle)
 202:Core/Src/main.c **** {
 203:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
ARM GAS  /tmp/cc9RMdGn.s 			page 6


 204:Core/Src/main.c ****   switch (error)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     case HAL_I2C_ERROR_AF :
 207:Core/Src/main.c ****     default:
 208:Core/Src/main.c ****       Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 213:Core/Src/main.c **** {
  88              		.loc 1 213 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		.loc 1 213 1 is_stmt 0 view .LVU9
  93 0000 08B5     		push	{r3, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
 214:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  97              		.loc 1 214 3 is_stmt 1 view .LVU10
  98              		.loc 1 214 11 is_stmt 0 view .LVU11
  99 0002 0268     		ldr	r2, [r0]
 100              		.loc 1 214 6 view .LVU12
 101 0004 044B     		ldr	r3, .L11
 102 0006 9A42     		cmp	r2, r3
 103 0008 00D0     		beq	.L10
 104              	.LVL3:
 105              	.L7:
 215:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c **** }
 106              		.loc 1 217 1 view .LVU13
 107 000a 08BD     		pop	{r3, pc}
 108              	.LVL4:
 109              	.L10:
 215:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 110              		.loc 1 215 5 is_stmt 1 view .LVU14
 111 000c 0122     		movs	r2, #1
 112 000e 1021     		movs	r1, #16
 113 0010 0248     		ldr	r0, .L11+4
 114              	.LVL5:
 215:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 115              		.loc 1 215 5 is_stmt 0 view .LVU15
 116 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL6:
 118              		.loc 1 217 1 view .LVU16
 119 0016 F8E7     		b	.L7
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 0018 00000140 		.word	1073807360
 124 001c 000C0240 		.word	1073875968
 125              		.cfi_endproc
 126              	.LFE150:
 128              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 129              		.align	1
ARM GAS  /tmp/cc9RMdGn.s 			page 7


 130              		.global	HAL_TIM_OC_DelayElapsedCallback
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	HAL_TIM_OC_DelayElapsedCallback:
 136              	.LVL7:
 137              	.LFB151:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 220:Core/Src/main.c **** {
 138              		.loc 1 220 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		.loc 1 220 1 is_stmt 0 view .LVU18
 143 0000 10B5     		push	{r4, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 147 0002 0446     		mov	r4, r0
 221:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 148              		.loc 1 221 3 is_stmt 1 view .LVU19
 149              		.loc 1 221 11 is_stmt 0 view .LVU20
 150 0004 0268     		ldr	r2, [r0]
 151              		.loc 1 221 6 view .LVU21
 152 0006 254B     		ldr	r3, .L27
 153 0008 9A42     		cmp	r2, r3
 154 000a 04D0     		beq	.L21
 155              	.LVL8:
 156              	.L14:
 222:Core/Src/main.c ****     // Pulse the SystemStatus LED off
 223:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_RESET);
 224:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 225:Core/Src/main.c ****     unsigned char cc_val = getSystemStatusOCRValue(system_status_led_angle);
 226:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   if (htim->Instance == TIM8) {
 157              		.loc 1 228 3 is_stmt 1 view .LVU22
 158              		.loc 1 228 11 is_stmt 0 view .LVU23
 159 000c 2268     		ldr	r2, [r4]
 160              		.loc 1 228 6 view .LVU24
 161 000e 244B     		ldr	r3, .L27+4
 162 0010 9A42     		cmp	r2, r3
 163 0012 0DD0     		beq	.L22
 164              	.L13:
 229:Core/Src/main.c ****     if((nos.tx_buffer.p_array != NULL || nos.tx_buffer.size != 0) && nos.tx_inflight == 0) {
 230:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 231:Core/Src/main.c ****     }
 232:Core/Src/main.c ****     // Every 200ms check to see if the welcome display needs to be presented
 233:Core/Src/main.c ****     if(nos.exe == NYAN_EXE_IDLE) {
 234:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 235:Core/Src/main.c ****     }
 236:Core/Src/main.c ****     // Program Execution - Must be idle with no TXs inflight since we are modifying the ptr
 237:Core/Src/main.c ****     if(nos.exe != NYAN_EXE_IDLE && nos.tx_inflight == 0) {
 238:Core/Src/main.c ****       NyanExecute(&nos);
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c ****     // Turn off the RX CDC LED
ARM GAS  /tmp/cc9RMdGn.s 			page 8


 241:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED3_Pin, GPIO_PIN_RESET);
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c **** }
 165              		.loc 1 243 1 view .LVU25
 166 0014 10BD     		pop	{r4, pc}
 167              	.LVL9:
 168              	.L21:
 169              	.LBB4:
 223:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 170              		.loc 1 223 5 is_stmt 1 view .LVU26
 171 0016 0022     		movs	r2, #0
 172 0018 1021     		movs	r1, #16
 173 001a 2248     		ldr	r0, .L27+8
 174              	.LVL10:
 223:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 175              		.loc 1 223 5 is_stmt 0 view .LVU27
 176 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 177              	.LVL11:
 225:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 178              		.loc 1 225 5 is_stmt 1 view .LVU28
 225:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 179              		.loc 1 225 28 is_stmt 0 view .LVU29
 180 0020 214B     		ldr	r3, .L27+12
 181 0022 93ED000B 		vldr.64	d0, [r3]
 182 0026 FFF7FEFF 		bl	getSystemStatusOCRValue
 183              	.LVL12:
 226:Core/Src/main.c ****   }
 184              		.loc 1 226 5 is_stmt 1 view .LVU30
 185 002a 2368     		ldr	r3, [r4]
 186 002c 5863     		str	r0, [r3, #52]
 187 002e EDE7     		b	.L14
 188              	.LVL13:
 189              	.L22:
 226:Core/Src/main.c ****   }
 190              		.loc 1 226 5 is_stmt 0 view .LVU31
 191              	.LBE4:
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 192              		.loc 1 229 5 is_stmt 1 view .LVU32
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 193              		.loc 1 229 22 is_stmt 0 view .LVU33
 194 0030 1E4B     		ldr	r3, .L27+16
 195 0032 D3F8BC30 		ldr	r3, [r3, #188]
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 196              		.loc 1 229 7 view .LVU34
 197 0036 BBB1     		cbz	r3, .L23
 198              	.L16:
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 199              		.loc 1 229 73 discriminator 3 view .LVU35
 200 0038 1C4B     		ldr	r3, .L27+16
 201 003a 93F8BB30 		ldrb	r3, [r3, #187]	@ zero_extendqisi2
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 202              		.loc 1 229 67 discriminator 3 view .LVU36
 203 003e CBB1     		cbz	r3, .L24
 204              	.L17:
 233:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 205              		.loc 1 233 5 is_stmt 1 view .LVU37
 233:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
ARM GAS  /tmp/cc9RMdGn.s 			page 9


 206              		.loc 1 233 11 is_stmt 0 view .LVU38
 207 0040 1A4B     		ldr	r3, .L27+16
 208 0042 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 209 0044 DBB2     		uxtb	r3, r3
 233:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 210              		.loc 1 233 7 view .LVU39
 211 0046 042B     		cmp	r3, #4
 212 0048 1FD0     		beq	.L25
 213              	.L18:
 237:Core/Src/main.c ****       NyanExecute(&nos);
 214              		.loc 1 237 5 is_stmt 1 view .LVU40
 237:Core/Src/main.c ****       NyanExecute(&nos);
 215              		.loc 1 237 11 is_stmt 0 view .LVU41
 216 004a 184B     		ldr	r3, .L27+16
 217 004c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 218 004e DBB2     		uxtb	r3, r3
 237:Core/Src/main.c ****       NyanExecute(&nos);
 219              		.loc 1 237 7 view .LVU42
 220 0050 042B     		cmp	r3, #4
 221 0052 03D0     		beq	.L19
 237:Core/Src/main.c ****       NyanExecute(&nos);
 222              		.loc 1 237 39 discriminator 1 view .LVU43
 223 0054 154B     		ldr	r3, .L27+16
 224 0056 93F8BB30 		ldrb	r3, [r3, #187]	@ zero_extendqisi2
 237:Core/Src/main.c ****       NyanExecute(&nos);
 225              		.loc 1 237 33 discriminator 1 view .LVU44
 226 005a D3B1     		cbz	r3, .L26
 227              	.L19:
 241:Core/Src/main.c ****   }
 228              		.loc 1 241 5 is_stmt 1 view .LVU45
 229 005c 0022     		movs	r2, #0
 230 005e 0821     		movs	r1, #8
 231 0060 1048     		ldr	r0, .L27+8
 232 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 233              	.LVL14:
 234              		.loc 1 243 1 is_stmt 0 view .LVU46
 235 0066 D5E7     		b	.L13
 236              	.L23:
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 237              		.loc 1 229 55 discriminator 2 view .LVU47
 238 0068 104B     		ldr	r3, .L27+16
 239 006a D3F8C030 		ldr	r3, [r3, #192]
 229:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 240              		.loc 1 229 39 discriminator 2 view .LVU48
 241 006e 002B     		cmp	r3, #0
 242 0070 E6D0     		beq	.L17
 243 0072 E1E7     		b	.L16
 244              	.L24:
 230:Core/Src/main.c ****     }
 245              		.loc 1 230 7 is_stmt 1 view .LVU49
 230:Core/Src/main.c ****     }
 246              		.loc 1 230 23 is_stmt 0 view .LVU50
 247 0074 0D4B     		ldr	r3, .L27+16
 248 0076 93F8BA00 		ldrb	r0, [r3, #186]	@ zero_extendqisi2
 230:Core/Src/main.c ****     }
 249              		.loc 1 230 45 view .LVU51
 250 007a D3F8BC10 		ldr	r1, [r3, #188]
ARM GAS  /tmp/cc9RMdGn.s 			page 10


 230:Core/Src/main.c ****     }
 251              		.loc 1 230 68 view .LVU52
 252 007e D3F8C020 		ldr	r2, [r3, #192]
 230:Core/Src/main.c ****     }
 253              		.loc 1 230 7 view .LVU53
 254 0082 92B2     		uxth	r2, r2
 255 0084 FFF7FEFF 		bl	CDC_Transmit
 256              	.LVL15:
 257 0088 DAE7     		b	.L17
 258              	.L25:
 234:Core/Src/main.c ****     }
 259              		.loc 1 234 7 is_stmt 1 view .LVU54
 260 008a 0848     		ldr	r0, .L27+16
 261 008c FFF7FEFF 		bl	NyanWelcomeDisplay
 262              	.LVL16:
 263 0090 DBE7     		b	.L18
 264              	.L26:
 238:Core/Src/main.c ****     }
 265              		.loc 1 238 7 view .LVU55
 266 0092 0648     		ldr	r0, .L27+16
 267 0094 FFF7FEFF 		bl	NyanExecute
 268              	.LVL17:
 269 0098 E0E7     		b	.L19
 270              	.L28:
 271 009a 00BF     		.align	2
 272              	.L27:
 273 009c 00000140 		.word	1073807360
 274 00a0 00040140 		.word	1073808384
 275 00a4 000C0240 		.word	1073875968
 276 00a8 00000000 		.word	system_status_led_angle
 277 00ac 00000000 		.word	nos
 278              		.cfi_endproc
 279              	.LFE151:
 281              		.section	.text.Error_Handler,"ax",%progbits
 282              		.align	1
 283              		.global	Error_Handler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	Error_Handler:
 289              	.LFB152:
 244:Core/Src/main.c **** /* USER CODE END 4 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 248:Core/Src/main.c ****   * @retval None
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c **** void Error_Handler(void)
 251:Core/Src/main.c **** {
 290              		.loc 1 251 1 view -0
 291              		.cfi_startproc
 292              		@ Volatile: function does not return.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 3, -8
ARM GAS  /tmp/cc9RMdGn.s 			page 11


 298              		.cfi_offset 14, -4
 252:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 253:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 254:Core/Src/main.c ****   __disable_irq();
 299              		.loc 1 254 3 view .LVU57
 300              	.LBB5:
 301              	.LBI5:
 302              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/cc9RMdGn.s 			page 12


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/cc9RMdGn.s 			page 13


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 303              		.loc 2 140 27 view .LVU58
 304              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 305              		.loc 2 142 3 view .LVU59
 306              		.syntax unified
 307              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 308 0002 72B6     		cpsid i
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312              	.L30:
 313              	.LBE6:
 314              	.LBE5:
 255:Core/Src/main.c ****   while (1)
 315              		.loc 1 255 3 discriminator 1 view .LVU60
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     // Turn on all LEDs on hard error
 258:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED0_Pin, GPIO_PIN_SET);
 316              		.loc 1 258 5 discriminator 1 view .LVU61
 317 0004 0D4C     		ldr	r4, .L32
 318 0006 0122     		movs	r2, #1
 319 0008 1146     		mov	r1, r2
ARM GAS  /tmp/cc9RMdGn.s 			page 14


 320 000a 2046     		mov	r0, r4
 321 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 322              	.LVL18:
 259:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED1_Pin, GPIO_PIN_SET);
 323              		.loc 1 259 5 discriminator 1 view .LVU62
 324 0010 0122     		movs	r2, #1
 325 0012 0221     		movs	r1, #2
 326 0014 2046     		mov	r0, r4
 327 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 328              	.LVL19:
 260:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED2_Pin, GPIO_PIN_SET);
 329              		.loc 1 260 5 discriminator 1 view .LVU63
 330 001a 0122     		movs	r2, #1
 331 001c 0421     		movs	r1, #4
 332 001e 2046     		mov	r0, r4
 333 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL20:
 261:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED3_Pin, GPIO_PIN_SET);
 335              		.loc 1 261 5 discriminator 1 view .LVU64
 336 0024 0122     		movs	r2, #1
 337 0026 0821     		movs	r1, #8
 338 0028 2046     		mov	r0, r4
 339 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL21:
 262:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 341              		.loc 1 262 5 discriminator 1 view .LVU65
 342 002e 0122     		movs	r2, #1
 343 0030 1021     		movs	r1, #16
 344 0032 2046     		mov	r0, r4
 345 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL22:
 255:Core/Src/main.c ****   {
 347              		.loc 1 255 9 discriminator 1 view .LVU66
 348 0038 E4E7     		b	.L30
 349              	.L33:
 350 003a 00BF     		.align	2
 351              	.L32:
 352 003c 000C0240 		.word	1073875968
 353              		.cfi_endproc
 354              	.LFE152:
 356              		.section	.text.SystemClock_Config,"ax",%progbits
 357              		.align	1
 358              		.global	SystemClock_Config
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	SystemClock_Config:
 364              	.LFB146:
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 365              		.loc 1 143 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 80
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 00B5     		push	{lr}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 14, -4
 372 0002 95B0     		sub	sp, sp, #84
ARM GAS  /tmp/cc9RMdGn.s 			page 15


 373              		.cfi_def_cfa_offset 88
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 374              		.loc 1 144 3 view .LVU68
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 375              		.loc 1 144 22 is_stmt 0 view .LVU69
 376 0004 3022     		movs	r2, #48
 377 0006 0021     		movs	r1, #0
 378 0008 08A8     		add	r0, sp, #32
 379 000a FFF7FEFF 		bl	memset
 380              	.LVL23:
 145:Core/Src/main.c **** 
 381              		.loc 1 145 3 is_stmt 1 view .LVU70
 145:Core/Src/main.c **** 
 382              		.loc 1 145 22 is_stmt 0 view .LVU71
 383 000e 0023     		movs	r3, #0
 384 0010 0393     		str	r3, [sp, #12]
 385 0012 0493     		str	r3, [sp, #16]
 386 0014 0593     		str	r3, [sp, #20]
 387 0016 0693     		str	r3, [sp, #24]
 388 0018 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 389              		.loc 1 149 3 is_stmt 1 view .LVU72
 390              	.LBB7:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 391              		.loc 1 149 3 view .LVU73
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 392              		.loc 1 149 3 view .LVU74
 393 001a 234B     		ldr	r3, .L42
 394 001c 1A6C     		ldr	r2, [r3, #64]
 395 001e 42F08052 		orr	r2, r2, #268435456
 396 0022 1A64     		str	r2, [r3, #64]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 397              		.loc 1 149 3 view .LVU75
 398 0024 1B6C     		ldr	r3, [r3, #64]
 399 0026 03F08053 		and	r3, r3, #268435456
 400 002a 0193     		str	r3, [sp, #4]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 401              		.loc 1 149 3 view .LVU76
 402 002c 019B     		ldr	r3, [sp, #4]
 403              	.LBE7:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 404              		.loc 1 149 3 view .LVU77
 150:Core/Src/main.c **** 
 405              		.loc 1 150 3 view .LVU78
 406              	.LBB8:
 150:Core/Src/main.c **** 
 407              		.loc 1 150 3 view .LVU79
 150:Core/Src/main.c **** 
 408              		.loc 1 150 3 view .LVU80
 409 002e 1F4B     		ldr	r3, .L42+4
 410 0030 1A68     		ldr	r2, [r3]
 411 0032 42F44042 		orr	r2, r2, #49152
 412 0036 1A60     		str	r2, [r3]
 150:Core/Src/main.c **** 
 413              		.loc 1 150 3 view .LVU81
 414 0038 1B68     		ldr	r3, [r3]
 415 003a 03F44043 		and	r3, r3, #49152
ARM GAS  /tmp/cc9RMdGn.s 			page 16


 416 003e 0293     		str	r3, [sp, #8]
 150:Core/Src/main.c **** 
 417              		.loc 1 150 3 view .LVU82
 418 0040 029B     		ldr	r3, [sp, #8]
 419              	.LBE8:
 150:Core/Src/main.c **** 
 420              		.loc 1 150 3 view .LVU83
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 421              		.loc 1 155 3 view .LVU84
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 422              		.loc 1 155 36 is_stmt 0 view .LVU85
 423 0042 0123     		movs	r3, #1
 424 0044 0893     		str	r3, [sp, #32]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 425              		.loc 1 156 3 is_stmt 1 view .LVU86
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 426              		.loc 1 156 30 is_stmt 0 view .LVU87
 427 0046 4FF4A023 		mov	r3, #327680
 428 004a 0993     		str	r3, [sp, #36]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 429              		.loc 1 157 3 is_stmt 1 view .LVU88
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 430              		.loc 1 157 34 is_stmt 0 view .LVU89
 431 004c 0223     		movs	r3, #2
 432 004e 0E93     		str	r3, [sp, #56]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 433              		.loc 1 158 3 is_stmt 1 view .LVU90
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 434              		.loc 1 158 35 is_stmt 0 view .LVU91
 435 0050 4FF48002 		mov	r2, #4194304
 436 0054 0F92     		str	r2, [sp, #60]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 437              		.loc 1 159 3 is_stmt 1 view .LVU92
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 438              		.loc 1 159 30 is_stmt 0 view .LVU93
 439 0056 1922     		movs	r2, #25
 440 0058 1092     		str	r2, [sp, #64]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 441              		.loc 1 160 3 is_stmt 1 view .LVU94
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 442              		.loc 1 160 30 is_stmt 0 view .LVU95
 443 005a 4FF4D872 		mov	r2, #432
 444 005e 1192     		str	r2, [sp, #68]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 445              		.loc 1 161 3 is_stmt 1 view .LVU96
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 446              		.loc 1 161 30 is_stmt 0 view .LVU97
 447 0060 1293     		str	r3, [sp, #72]
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 448              		.loc 1 162 3 is_stmt 1 view .LVU98
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 449              		.loc 1 162 30 is_stmt 0 view .LVU99
 450 0062 0923     		movs	r3, #9
 451 0064 1393     		str	r3, [sp, #76]
 163:Core/Src/main.c ****   {
 452              		.loc 1 163 3 is_stmt 1 view .LVU100
 163:Core/Src/main.c ****   {
ARM GAS  /tmp/cc9RMdGn.s 			page 17


 453              		.loc 1 163 7 is_stmt 0 view .LVU101
 454 0066 08A8     		add	r0, sp, #32
 455 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 456              	.LVL24:
 163:Core/Src/main.c ****   {
 457              		.loc 1 163 6 view .LVU102
 458 006c B0B9     		cbnz	r0, .L39
 170:Core/Src/main.c ****   {
 459              		.loc 1 170 3 is_stmt 1 view .LVU103
 170:Core/Src/main.c ****   {
 460              		.loc 1 170 7 is_stmt 0 view .LVU104
 461 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 462              	.LVL25:
 170:Core/Src/main.c ****   {
 463              		.loc 1 170 6 view .LVU105
 464 0072 A8B9     		cbnz	r0, .L40
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 465              		.loc 1 177 3 is_stmt 1 view .LVU106
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 466              		.loc 1 177 31 is_stmt 0 view .LVU107
 467 0074 0F23     		movs	r3, #15
 468 0076 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 469              		.loc 1 179 3 is_stmt 1 view .LVU108
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 470              		.loc 1 179 34 is_stmt 0 view .LVU109
 471 0078 0223     		movs	r3, #2
 472 007a 0493     		str	r3, [sp, #16]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 473              		.loc 1 180 3 is_stmt 1 view .LVU110
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 474              		.loc 1 180 35 is_stmt 0 view .LVU111
 475 007c 0023     		movs	r3, #0
 476 007e 0593     		str	r3, [sp, #20]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 477              		.loc 1 181 3 is_stmt 1 view .LVU112
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 478              		.loc 1 181 36 is_stmt 0 view .LVU113
 479 0080 4FF4A053 		mov	r3, #5120
 480 0084 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c **** 
 481              		.loc 1 182 3 is_stmt 1 view .LVU114
 182:Core/Src/main.c **** 
 482              		.loc 1 182 36 is_stmt 0 view .LVU115
 483 0086 4FF48053 		mov	r3, #4096
 484 008a 0793     		str	r3, [sp, #28]
 184:Core/Src/main.c ****   {
 485              		.loc 1 184 3 is_stmt 1 view .LVU116
 184:Core/Src/main.c ****   {
 486              		.loc 1 184 7 is_stmt 0 view .LVU117
 487 008c 0721     		movs	r1, #7
 488 008e 03A8     		add	r0, sp, #12
 489 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 490              	.LVL26:
 184:Core/Src/main.c ****   {
 491              		.loc 1 184 6 view .LVU118
 492 0094 30B9     		cbnz	r0, .L41
ARM GAS  /tmp/cc9RMdGn.s 			page 18


 188:Core/Src/main.c **** 
 493              		.loc 1 188 1 view .LVU119
 494 0096 15B0     		add	sp, sp, #84
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 4
 497              		@ sp needed
 498 0098 5DF804FB 		ldr	pc, [sp], #4
 499              	.L39:
 500              		.cfi_restore_state
 165:Core/Src/main.c ****   }
 501              		.loc 1 165 5 is_stmt 1 view .LVU120
 502 009c FFF7FEFF 		bl	Error_Handler
 503              	.LVL27:
 504              	.L40:
 172:Core/Src/main.c ****   }
 505              		.loc 1 172 5 view .LVU121
 506 00a0 FFF7FEFF 		bl	Error_Handler
 507              	.LVL28:
 508              	.L41:
 186:Core/Src/main.c ****   }
 509              		.loc 1 186 5 view .LVU122
 510 00a4 FFF7FEFF 		bl	Error_Handler
 511              	.LVL29:
 512              	.L43:
 513              		.align	2
 514              	.L42:
 515 00a8 00380240 		.word	1073887232
 516 00ac 00700040 		.word	1073770496
 517              		.cfi_endproc
 518              	.LFE146:
 520              		.section	.text.main,"ax",%progbits
 521              		.align	1
 522              		.global	main
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 527              	main:
 528              	.LFB145:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 529              		.loc 1 80 1 view -0
 530              		.cfi_startproc
 531              		@ Volatile: function does not return.
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 08B5     		push	{r3, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 3, -8
 537              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 538              		.loc 1 87 3 view .LVU124
 539 0002 FFF7FEFF 		bl	HAL_Init
 540              	.LVL30:
  90:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
 541              		.loc 1 90 3 view .LVU125
  90:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
 542              		.loc 1 90 27 is_stmt 0 view .LVU126
 543 0006 1F4B     		ldr	r3, .L47
ARM GAS  /tmp/cc9RMdGn.s 			page 19


 544 0008 0020     		movs	r0, #0
 545 000a 0021     		movs	r1, #0
 546 000c C3E90001 		strd	r0, [r3]
  91:Core/Src/main.c ****   NyanOsInit(&nos, &nos_eeprom);
 547              		.loc 1 91 3 is_stmt 1 view .LVU127
 548 0010 1D4C     		ldr	r4, .L47+4
 549 0012 0122     		movs	r2, #1
 550 0014 1146     		mov	r1, r2
 551 0016 2046     		mov	r0, r4
 552 0018 FFF7FEFF 		bl	EepromInit
 553              	.LVL31:
  92:Core/Src/main.c **** 
 554              		.loc 1 92 3 view .LVU128
 555 001c 2146     		mov	r1, r4
 556 001e 1B48     		ldr	r0, .L47+8
 557 0020 FFF7FEFF 		bl	NyanOsInit
 558              	.LVL32:
  97:Core/Src/main.c **** 
 559              		.loc 1 97 3 view .LVU129
 560 0024 FFF7FEFF 		bl	SystemClock_Config
 561              	.LVL33:
 104:Core/Src/main.c ****   MX_DMA_Init();
 562              		.loc 1 104 3 view .LVU130
 563 0028 FFF7FEFF 		bl	MX_GPIO_Init
 564              	.LVL34:
 105:Core/Src/main.c ****   MX_SPI1_Init();
 565              		.loc 1 105 3 view .LVU131
 566 002c FFF7FEFF 		bl	MX_DMA_Init
 567              	.LVL35:
 106:Core/Src/main.c ****   MX_SPI2_Init();
 568              		.loc 1 106 3 view .LVU132
 569 0030 FFF7FEFF 		bl	MX_SPI1_Init
 570              	.LVL36:
 107:Core/Src/main.c ****   MX_SPI4_Init();
 571              		.loc 1 107 3 view .LVU133
 572 0034 FFF7FEFF 		bl	MX_SPI2_Init
 573              	.LVL37:
 108:Core/Src/main.c ****   MX_I2C1_Init();
 574              		.loc 1 108 3 view .LVU134
 575 0038 FFF7FEFF 		bl	MX_SPI4_Init
 576              	.LVL38:
 109:Core/Src/main.c ****   MX_TIM7_Init();
 577              		.loc 1 109 3 view .LVU135
 578 003c FFF7FEFF 		bl	MX_I2C1_Init
 579              	.LVL39:
 110:Core/Src/main.c ****   MX_TIM6_Init();
 580              		.loc 1 110 3 view .LVU136
 581 0040 FFF7FEFF 		bl	MX_TIM7_Init
 582              	.LVL40:
 111:Core/Src/main.c ****   MX_TIM1_Init();
 583              		.loc 1 111 3 view .LVU137
 584 0044 FFF7FEFF 		bl	MX_TIM6_Init
 585              	.LVL41:
 112:Core/Src/main.c ****   MX_USB_OTG_HS_PCD_Init();
 586              		.loc 1 112 3 view .LVU138
 587 0048 FFF7FEFF 		bl	MX_TIM1_Init
 588              	.LVL42:
ARM GAS  /tmp/cc9RMdGn.s 			page 20


 113:Core/Src/main.c ****   MX_RNG_Init();
 589              		.loc 1 113 3 view .LVU139
 590 004c FFF7FEFF 		bl	MX_USB_OTG_HS_PCD_Init
 591              	.LVL43:
 114:Core/Src/main.c ****   MX_TIM8_Init();
 592              		.loc 1 114 3 view .LVU140
 593 0050 FFF7FEFF 		bl	MX_RNG_Init
 594              	.LVL44:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 595              		.loc 1 115 3 view .LVU141
 596 0054 FFF7FEFF 		bl	MX_TIM8_Init
 597              	.LVL45:
 118:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 598              		.loc 1 118 3 view .LVU142
 599 0058 0D4C     		ldr	r4, .L47+12
 600 005a 2046     		mov	r0, r4
 601 005c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 602              	.LVL46:
 119:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 603              		.loc 1 119 3 view .LVU143
 604 0060 0C48     		ldr	r0, .L47+16
 605 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 606              	.LVL47:
 120:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 607              		.loc 1 120 3 view .LVU144
 608 0066 0C48     		ldr	r0, .L47+20
 609 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 610              	.LVL48:
 121:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 611              		.loc 1 121 3 view .LVU145
 612 006c 0021     		movs	r1, #0
 613 006e 2046     		mov	r0, r4
 614 0070 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 615              	.LVL49:
 122:Core/Src/main.c ****   // USB composite device creation
 616              		.loc 1 122 3 view .LVU146
 617 0074 0021     		movs	r1, #0
 618 0076 0948     		ldr	r0, .L47+24
 619 0078 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 620              	.LVL50:
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 621              		.loc 1 124 3 view .LVU147
 622 007c FFF7FEFF 		bl	MX_USB_DEVICE_Init
 623              	.LVL51:
 624              	.L45:
 129:Core/Src/main.c ****   {
 625              		.loc 1 129 3 discriminator 1 view .LVU148
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 626              		.loc 1 134 3 discriminator 1 view .LVU149
 129:Core/Src/main.c ****   {
 627              		.loc 1 129 9 discriminator 1 view .LVU150
 628 0080 FEE7     		b	.L45
 629              	.L48:
 630 0082 00BF     		.align	2
 631              	.L47:
 632 0084 00000000 		.word	system_status_led_angle
 633 0088 00000000 		.word	nos_eeprom
ARM GAS  /tmp/cc9RMdGn.s 			page 21


 634 008c 00000000 		.word	nos
 635 0090 00000000 		.word	htim1
 636 0094 00000000 		.word	htim7
 637 0098 00000000 		.word	htim6
 638 009c 00000000 		.word	htim8
 639              		.cfi_endproc
 640              	.LFE145:
 642              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 643              		.align	1
 644              		.global	HAL_I2C_ErrorCallback
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 649              	HAL_I2C_ErrorCallback:
 650              	.LVL52:
 651              	.LFB149:
 202:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
 652              		.loc 1 202 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
 656              		.loc 1 202 1 is_stmt 0 view .LVU152
 657 0000 08B5     		push	{r3, lr}
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 3, -8
 660              		.cfi_offset 14, -4
 203:Core/Src/main.c ****   switch (error)
 661              		.loc 1 203 3 is_stmt 1 view .LVU153
 203:Core/Src/main.c ****   switch (error)
 662              		.loc 1 203 19 is_stmt 0 view .LVU154
 663 0002 FFF7FEFF 		bl	HAL_I2C_GetError
 664              	.LVL53:
 204:Core/Src/main.c ****   {
 665              		.loc 1 204 3 is_stmt 1 view .LVU155
 208:Core/Src/main.c ****   }
 666              		.loc 1 208 7 view .LVU156
 667 0006 FFF7FEFF 		bl	Error_Handler
 668              	.LVL54:
 669              		.cfi_endproc
 670              	.LFE149:
 672              		.global	nos_eeprom
 673              		.section	.bss.nos_eeprom,"aw",%nobits
 674              		.align	2
 677              	nos_eeprom:
 678 0000 00000000 		.space	1156
 678      00000000 
 678      00000000 
 678      00000000 
 678      00000000 
 679              		.global	nos
 680              		.section	.bss.nos,"aw",%nobits
 681              		.align	2
 684              	nos:
 685 0000 00000000 		.space	212
 685      00000000 
 685      00000000 
ARM GAS  /tmp/cc9RMdGn.s 			page 22


 685      00000000 
 685      00000000 
 686              		.global	system_status_led_angle
 687              		.section	.bss.system_status_led_angle,"aw",%nobits
 688              		.align	3
 691              	system_status_led_angle:
 692 0000 00000000 		.space	8
 692      00000000 
 693              		.text
 694              	.Letext0:
 695              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 696              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 697              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 698              		.file 6 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 699              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 700              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 701              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 702              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 703              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 704              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 705              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 706              		.file 14 "Core/Inc/tim.h"
 707              		.file 15 "Core/Inc/24xx_eeprom.h"
 708              		.file 16 "Core/Inc/nyan_os.h"
 709              		.file 17 "Core/Inc/nyan_strings.h"
 710              		.file 18 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 711              		.file 19 "Core/Inc/nyan_leds.h"
 712              		.file 20 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usb_device.h"
 713              		.file 21 "Core/Inc/rng.h"
 714              		.file 22 "Core/Inc/usb_otg.h"
 715              		.file 23 "Core/Inc/i2c.h"
 716              		.file 24 "Core/Inc/spi.h"
 717              		.file 25 "Core/Inc/dma.h"
 718              		.file 26 "Core/Inc/gpio.h"
 719              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 720              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 721              		.file 29 "<built-in>"
ARM GAS  /tmp/cc9RMdGn.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc9RMdGn.s:21     .text.HAL_I2C_MemTxCpltCallback:00000000 $t
     /tmp/cc9RMdGn.s:27     .text.HAL_I2C_MemTxCpltCallback:00000000 HAL_I2C_MemTxCpltCallback
     /tmp/cc9RMdGn.s:45     .text.HAL_I2C_MemTxCpltCallback:00000008 $d
     /tmp/cc9RMdGn.s:677    .bss.nos_eeprom:00000000 nos_eeprom
     /tmp/cc9RMdGn.s:50     .text.HAL_I2C_MemRxCpltCallback:00000000 $t
     /tmp/cc9RMdGn.s:56     .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
     /tmp/cc9RMdGn.s:74     .text.HAL_I2C_MemRxCpltCallback:00000008 $d
     /tmp/cc9RMdGn.s:79     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cc9RMdGn.s:85     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc9RMdGn.s:123    .text.HAL_TIM_PeriodElapsedCallback:00000018 $d
     /tmp/cc9RMdGn.s:129    .text.HAL_TIM_OC_DelayElapsedCallback:00000000 $t
     /tmp/cc9RMdGn.s:135    .text.HAL_TIM_OC_DelayElapsedCallback:00000000 HAL_TIM_OC_DelayElapsedCallback
     /tmp/cc9RMdGn.s:273    .text.HAL_TIM_OC_DelayElapsedCallback:0000009c $d
     /tmp/cc9RMdGn.s:691    .bss.system_status_led_angle:00000000 system_status_led_angle
     /tmp/cc9RMdGn.s:684    .bss.nos:00000000 nos
     /tmp/cc9RMdGn.s:282    .text.Error_Handler:00000000 $t
     /tmp/cc9RMdGn.s:288    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc9RMdGn.s:352    .text.Error_Handler:0000003c $d
     /tmp/cc9RMdGn.s:357    .text.SystemClock_Config:00000000 $t
     /tmp/cc9RMdGn.s:363    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc9RMdGn.s:515    .text.SystemClock_Config:000000a8 $d
     /tmp/cc9RMdGn.s:521    .text.main:00000000 $t
     /tmp/cc9RMdGn.s:527    .text.main:00000000 main
     /tmp/cc9RMdGn.s:632    .text.main:00000084 $d
     /tmp/cc9RMdGn.s:643    .text.HAL_I2C_ErrorCallback:00000000 $t
     /tmp/cc9RMdGn.s:649    .text.HAL_I2C_ErrorCallback:00000000 HAL_I2C_ErrorCallback
     /tmp/cc9RMdGn.s:674    .bss.nos_eeprom:00000000 $d
     /tmp/cc9RMdGn.s:681    .bss.nos:00000000 $d
     /tmp/cc9RMdGn.s:688    .bss.system_status_led_angle:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
getSystemStatusOCRValue
CDC_Transmit
NyanWelcomeDisplay
NyanExecute
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
EepromInit
NyanOsInit
MX_GPIO_Init
MX_DMA_Init
MX_SPI1_Init
MX_SPI2_Init
MX_SPI4_Init
MX_I2C1_Init
MX_TIM7_Init
MX_TIM6_Init
MX_TIM1_Init
MX_USB_OTG_HS_PCD_Init
MX_RNG_Init
MX_TIM8_Init
ARM GAS  /tmp/cc9RMdGn.s 			page 24


HAL_TIM_Base_Start_IT
HAL_TIM_OC_Start_IT
MX_USB_DEVICE_Init
htim1
htim7
htim6
htim8
HAL_I2C_GetError
