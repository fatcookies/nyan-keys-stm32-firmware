ARM GAS  /tmp/ccuhSsP0.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_I2C_MemTxCpltCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_I2C_MemTxCpltCallback:
  27              	.LVL0:
  28              	.LFB147:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "rng.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "usb_otg.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/ccuhSsP0.s 			page 2


  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "usb_device.h"
  32:Core/Src/main.c **** #include "usbd_cdc_acm_if.h"
  33:Core/Src/main.c **** #include "24xx_eeprom.h"
  34:Core/Src/main.c **** #include "nyan_os.h"
  35:Core/Src/main.c **** #include "nyan_leds.h"
  36:Core/Src/main.c **** #include "nyan_strings.h"
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** double system_status_led_angle;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** volatile NyanOS nos;
  61:Core/Src/main.c **** Eeprom24xx nos_eeprom;
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccuhSsP0.s 			page 3


  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c ****   system_status_led_angle = 0;
  91:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
  92:Core/Src/main.c ****   NyanOsInit(&nos, &nos_eeprom);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_DMA_Init();
 106:Core/Src/main.c ****   MX_SPI1_Init();
 107:Core/Src/main.c ****   MX_SPI2_Init();
 108:Core/Src/main.c ****   MX_SPI4_Init();
 109:Core/Src/main.c ****   MX_I2C1_Init();
 110:Core/Src/main.c ****   MX_TIM7_Init();
 111:Core/Src/main.c ****   MX_TIM6_Init();
 112:Core/Src/main.c ****   MX_TIM1_Init();
 113:Core/Src/main.c ****   MX_USB_OTG_HS_PCD_Init();
 114:Core/Src/main.c ****   MX_RNG_Init();
 115:Core/Src/main.c ****   MX_TIM8_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   // Activate the STM32F7 timer interrupts
 118:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 119:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 120:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 121:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 122:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 123:Core/Src/main.c ****   // USB composite device creation
 124:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
ARM GAS  /tmp/ccuhSsP0.s 			page 4


 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 153:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Activate the Over-Drive mode
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 191:Core/Src/main.c **** void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *I2cHandle)
 192:Core/Src/main.c **** {
  30              		.loc 1 192 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 193:Core/Src/main.c ****   nos_eeprom.tx_inflight = false;
  35              		.loc 1 193 3 view .LVU1
  36              		.loc 1 193 26 is_stmt 0 view .LVU2
ARM GAS  /tmp/ccuhSsP0.s 			page 5


  37 0000 014B     		ldr	r3, .L2
  38 0002 0022     		movs	r2, #0
  39 0004 9A70     		strb	r2, [r3, #2]
 194:Core/Src/main.c **** }
  40              		.loc 1 194 1 view .LVU3
  41 0006 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0008 00000000 		.word	.LANCHOR0
  46              		.cfi_endproc
  47              	.LFE147:
  49              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
  50              		.align	1
  51              		.global	HAL_I2C_MemRxCpltCallback
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	HAL_I2C_MemRxCpltCallback:
  57              	.LVL1:
  58              	.LFB148:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *I2cHandle)
 197:Core/Src/main.c **** {
  59              		.loc 1 197 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 198:Core/Src/main.c ****   nos_eeprom.rx_inflight = false;
  64              		.loc 1 198 3 view .LVU5
  65              		.loc 1 198 26 is_stmt 0 view .LVU6
  66 0000 014B     		ldr	r3, .L5
  67 0002 0022     		movs	r2, #0
  68 0004 DA70     		strb	r2, [r3, #3]
 199:Core/Src/main.c **** }
  69              		.loc 1 199 1 view .LVU7
  70 0006 7047     		bx	lr
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0008 00000000 		.word	.LANCHOR0
  75              		.cfi_endproc
  76              	.LFE148:
  78              		.global	__aeabi_dadd
  79              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_TIM_PeriodElapsedCallback
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	HAL_TIM_PeriodElapsedCallback:
  87              	.LVL2:
  88              	.LFB150:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *I2cHandle)
 202:Core/Src/main.c **** {
ARM GAS  /tmp/ccuhSsP0.s 			page 6


 203:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
 204:Core/Src/main.c ****   switch (error)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     case HAL_I2C_ERROR_AF :
 207:Core/Src/main.c ****     default:
 208:Core/Src/main.c ****       Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 213:Core/Src/main.c **** {
  89              		.loc 1 213 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		.loc 1 213 1 is_stmt 0 view .LVU9
  94 0000 38B5     		push	{r3, r4, r5, lr}
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 3, -16
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
 100              		.cfi_offset 14, -4
 101 0002 0446     		mov	r4, r0
 214:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 102              		.loc 1 214 3 is_stmt 1 view .LVU10
 103              		.loc 1 214 11 is_stmt 0 view .LVU11
 104 0004 0268     		ldr	r2, [r0]
 105              		.loc 1 214 6 view .LVU12
 106 0006 164B     		ldr	r3, .L15
 107 0008 9A42     		cmp	r2, r3
 108 000a 08D0     		beq	.L12
 109              	.LVL3:
 110              	.L8:
 215:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 111              		.loc 1 217 3 is_stmt 1 view .LVU13
 112              		.loc 1 217 11 is_stmt 0 view .LVU14
 113 000c 2268     		ldr	r2, [r4]
 114              		.loc 1 217 6 view .LVU15
 115 000e 154B     		ldr	r3, .L15+4
 116 0010 9A42     		cmp	r2, r3
 117 0012 0AD0     		beq	.L13
 118              	.L9:
 218:Core/Src/main.c ****     // Increment the power on pulsing LED angle [sin^2(x) + cos^2(x) = 1]
 219:Core/Src/main.c ****     system_status_led_angle += SYSTEM_STATUS_DEGREE_INCREMENT;
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   if (htim->Instance == TIM7) {
 119              		.loc 1 221 3 is_stmt 1 view .LVU16
 120              		.loc 1 221 11 is_stmt 0 view .LVU17
 121 0014 2268     		ldr	r2, [r4]
 122              		.loc 1 221 6 view .LVU18
 123 0016 144B     		ldr	r3, .L15+8
 124 0018 9A42     		cmp	r2, r3
 125 001a 11D0     		beq	.L14
 126              	.L7:
ARM GAS  /tmp/ccuhSsP0.s 			page 7


 222:Core/Src/main.c ****     if(nos.send_welcome_screen_guard > 0) {
 223:Core/Src/main.c ****       if(++nos.send_welcome_screen_guard > 5) {
 224:Core/Src/main.c ****         nos.send_welcome_screen_guard = 0;
 225:Core/Src/main.c ****       }
 226:Core/Src/main.c ****     }
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c **** }
 127              		.loc 1 228 1 view .LVU19
 128 001c 38BD     		pop	{r3, r4, r5, pc}
 129              	.LVL4:
 130              	.L12:
 215:Core/Src/main.c ****   }
 131              		.loc 1 215 5 is_stmt 1 view .LVU20
 132 001e 0122     		movs	r2, #1
 133 0020 1021     		movs	r1, #16
 134 0022 1248     		ldr	r0, .L15+12
 135              	.LVL5:
 215:Core/Src/main.c ****   }
 136              		.loc 1 215 5 is_stmt 0 view .LVU21
 137 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL6:
 139 0028 F0E7     		b	.L8
 140              	.L13:
 219:Core/Src/main.c ****   }
 141              		.loc 1 219 5 is_stmt 1 view .LVU22
 219:Core/Src/main.c ****   }
 142              		.loc 1 219 29 is_stmt 0 view .LVU23
 143 002a 114D     		ldr	r5, .L15+16
 144 002c 114B     		ldr	r3, .L15+20
 145 002e D3E90023 		ldrd	r2, [r3]
 146 0032 D5E90001 		ldrd	r0, [r5]
 147 0036 FFF7FEFF 		bl	__aeabi_dadd
 148              	.LVL7:
 149 003a C5E90001 		strd	r0, [r5]
 150 003e E9E7     		b	.L9
 151              	.L14:
 222:Core/Src/main.c ****     if(nos.send_welcome_screen_guard > 0) {
 152              		.loc 1 222 5 is_stmt 1 view .LVU24
 222:Core/Src/main.c ****     if(nos.send_welcome_screen_guard > 0) {
 153              		.loc 1 222 11 is_stmt 0 view .LVU25
 154 0040 0D4B     		ldr	r3, .L15+24
 155 0042 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 222:Core/Src/main.c ****     if(nos.send_welcome_screen_guard > 0) {
 156              		.loc 1 222 7 view .LVU26
 157 0044 002B     		cmp	r3, #0
 158 0046 E9D0     		beq	.L7
 223:Core/Src/main.c ****         nos.send_welcome_screen_guard = 0;
 159              		.loc 1 223 7 is_stmt 1 view .LVU27
 223:Core/Src/main.c ****         nos.send_welcome_screen_guard = 0;
 160              		.loc 1 223 15 is_stmt 0 view .LVU28
 161 0048 0B4A     		ldr	r2, .L15+24
 162 004a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 223:Core/Src/main.c ****         nos.send_welcome_screen_guard = 0;
 163              		.loc 1 223 10 view .LVU29
 164 004c 0133     		adds	r3, r3, #1
 165 004e DBB2     		uxtb	r3, r3
 223:Core/Src/main.c ****         nos.send_welcome_screen_guard = 0;
ARM GAS  /tmp/ccuhSsP0.s 			page 8


 166              		.loc 1 223 9 view .LVU30
 167 0050 5370     		strb	r3, [r2, #1]
 168 0052 052B     		cmp	r3, #5
 169 0054 E2D9     		bls	.L7
 224:Core/Src/main.c ****       }
 170              		.loc 1 224 9 is_stmt 1 view .LVU31
 224:Core/Src/main.c ****       }
 171              		.loc 1 224 39 is_stmt 0 view .LVU32
 172 0056 1346     		mov	r3, r2
 173 0058 0022     		movs	r2, #0
 174 005a 5A70     		strb	r2, [r3, #1]
 175              		.loc 1 228 1 view .LVU33
 176 005c DEE7     		b	.L7
 177              	.L16:
 178 005e 00BF     		.align	2
 179              	.L15:
 180 0060 00000140 		.word	1073807360
 181 0064 00100040 		.word	1073745920
 182 0068 00140040 		.word	1073746944
 183 006c 000C0240 		.word	1073875968
 184 0070 00000000 		.word	.LANCHOR1
 185 0074 00000000 		.word	SYSTEM_STATUS_DEGREE_INCREMENT
 186 0078 00000000 		.word	.LANCHOR2
 187              		.cfi_endproc
 188              	.LFE150:
 190              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 191              		.align	1
 192              		.global	HAL_TIM_OC_DelayElapsedCallback
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	HAL_TIM_OC_DelayElapsedCallback:
 198              	.LVL8:
 199              	.LFB151:
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 231:Core/Src/main.c **** {
 200              		.loc 1 231 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		.loc 1 231 1 is_stmt 0 view .LVU35
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
 210 0002 0446     		mov	r4, r0
 232:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 211              		.loc 1 232 3 is_stmt 1 view .LVU36
 212              		.loc 1 232 11 is_stmt 0 view .LVU37
 213 0004 0268     		ldr	r2, [r0]
 214              		.loc 1 232 6 view .LVU38
 215 0006 254B     		ldr	r3, .L31
 216 0008 9A42     		cmp	r2, r3
 217 000a 04D0     		beq	.L25
 218              	.LVL9:
ARM GAS  /tmp/ccuhSsP0.s 			page 9


 219              	.L18:
 233:Core/Src/main.c ****     // Pulse the SystemStatus LED off
 234:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_RESET);
 235:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 236:Core/Src/main.c ****     unsigned char cc_val = getSystemStatusOCRValue(system_status_led_angle);
 237:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   if (htim->Instance == TIM8) {
 220              		.loc 1 239 3 is_stmt 1 view .LVU39
 221              		.loc 1 239 11 is_stmt 0 view .LVU40
 222 000c 2268     		ldr	r2, [r4]
 223              		.loc 1 239 6 view .LVU41
 224 000e 244B     		ldr	r3, .L31+4
 225 0010 9A42     		cmp	r2, r3
 226 0012 0DD0     		beq	.L26
 227              	.L17:
 240:Core/Src/main.c ****     if((nos.tx_buffer.p_array != NULL || nos.tx_buffer.size != 0) && nos.tx_inflight == 0) {
 241:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 242:Core/Src/main.c ****     }
 243:Core/Src/main.c ****     // Every 200ms check to see if the welcome display needs to be presented
 244:Core/Src/main.c ****     if(nos.exe == NYAN_EXE_IDLE) {
 245:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 246:Core/Src/main.c ****     }
 247:Core/Src/main.c ****     // Program Execution - Must be idle with no TXs inflight since we are modifying the ptr
 248:Core/Src/main.c ****     if(nos.exe != NYAN_EXE_IDLE && nos.tx_inflight == 0) {
 249:Core/Src/main.c ****       NyanExecute(&nos);
 250:Core/Src/main.c ****     }
 251:Core/Src/main.c ****     // Turn off the RX CDC LED
 252:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED3_Pin, GPIO_PIN_RESET);
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** }
 228              		.loc 1 254 1 view .LVU42
 229 0014 10BD     		pop	{r4, pc}
 230              	.LVL10:
 231              	.L25:
 232              	.LBB4:
 234:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 233              		.loc 1 234 5 is_stmt 1 view .LVU43
 234 0016 0022     		movs	r2, #0
 235 0018 1021     		movs	r1, #16
 236 001a 2248     		ldr	r0, .L31+8
 237              	.LVL11:
 234:Core/Src/main.c ****     // Now lets set the new capture compare register value.
 238              		.loc 1 234 5 is_stmt 0 view .LVU44
 239 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 240              	.LVL12:
 236:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 241              		.loc 1 236 5 is_stmt 1 view .LVU45
 236:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1, (unsigned int)cc_val);
 242              		.loc 1 236 28 is_stmt 0 view .LVU46
 243 0020 214B     		ldr	r3, .L31+12
 244 0022 93ED000B 		vldr.64	d0, [r3]
 245 0026 FFF7FEFF 		bl	getSystemStatusOCRValue
 246              	.LVL13:
 237:Core/Src/main.c ****   }
 247              		.loc 1 237 5 is_stmt 1 view .LVU47
 248 002a 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccuhSsP0.s 			page 10


 249 002c 5863     		str	r0, [r3, #52]
 250 002e EDE7     		b	.L18
 251              	.LVL14:
 252              	.L26:
 237:Core/Src/main.c ****   }
 253              		.loc 1 237 5 is_stmt 0 view .LVU48
 254              	.LBE4:
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 255              		.loc 1 240 5 is_stmt 1 view .LVU49
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 256              		.loc 1 240 22 is_stmt 0 view .LVU50
 257 0030 1E4B     		ldr	r3, .L31+16
 258 0032 D3F89030 		ldr	r3, [r3, #144]
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 259              		.loc 1 240 7 view .LVU51
 260 0036 BBB1     		cbz	r3, .L27
 261              	.L20:
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 262              		.loc 1 240 73 discriminator 3 view .LVU52
 263 0038 1C4B     		ldr	r3, .L31+16
 264 003a 93F88E30 		ldrb	r3, [r3, #142]	@ zero_extendqisi2
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 265              		.loc 1 240 67 discriminator 3 view .LVU53
 266 003e CBB1     		cbz	r3, .L28
 267              	.L21:
 244:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 268              		.loc 1 244 5 is_stmt 1 view .LVU54
 244:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 269              		.loc 1 244 11 is_stmt 0 view .LVU55
 270 0040 1A4B     		ldr	r3, .L31+16
 271 0042 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 272 0044 DBB2     		uxtb	r3, r3
 244:Core/Src/main.c ****       NyanWelcomeDisplay(&nos);
 273              		.loc 1 244 7 view .LVU56
 274 0046 042B     		cmp	r3, #4
 275 0048 1FD0     		beq	.L29
 276              	.L22:
 248:Core/Src/main.c ****       NyanExecute(&nos);
 277              		.loc 1 248 5 is_stmt 1 view .LVU57
 248:Core/Src/main.c ****       NyanExecute(&nos);
 278              		.loc 1 248 11 is_stmt 0 view .LVU58
 279 004a 184B     		ldr	r3, .L31+16
 280 004c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 281 004e DBB2     		uxtb	r3, r3
 248:Core/Src/main.c ****       NyanExecute(&nos);
 282              		.loc 1 248 7 view .LVU59
 283 0050 042B     		cmp	r3, #4
 284 0052 03D0     		beq	.L23
 248:Core/Src/main.c ****       NyanExecute(&nos);
 285              		.loc 1 248 39 discriminator 1 view .LVU60
 286 0054 154B     		ldr	r3, .L31+16
 287 0056 93F88E30 		ldrb	r3, [r3, #142]	@ zero_extendqisi2
 248:Core/Src/main.c ****       NyanExecute(&nos);
 288              		.loc 1 248 33 discriminator 1 view .LVU61
 289 005a D3B1     		cbz	r3, .L30
 290              	.L23:
 252:Core/Src/main.c ****   }
ARM GAS  /tmp/ccuhSsP0.s 			page 11


 291              		.loc 1 252 5 is_stmt 1 view .LVU62
 292 005c 0022     		movs	r2, #0
 293 005e 0821     		movs	r1, #8
 294 0060 1048     		ldr	r0, .L31+8
 295 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 296              	.LVL15:
 297              		.loc 1 254 1 is_stmt 0 view .LVU63
 298 0066 D5E7     		b	.L17
 299              	.L27:
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 300              		.loc 1 240 55 discriminator 2 view .LVU64
 301 0068 104B     		ldr	r3, .L31+16
 302 006a D3F89430 		ldr	r3, [r3, #148]
 240:Core/Src/main.c ****       CDC_Transmit(nos.cdc_ch, nos.tx_buffer.p_array, nos.tx_buffer.size);
 303              		.loc 1 240 39 discriminator 2 view .LVU65
 304 006e 002B     		cmp	r3, #0
 305 0070 E6D0     		beq	.L21
 306 0072 E1E7     		b	.L20
 307              	.L28:
 241:Core/Src/main.c ****     }
 308              		.loc 1 241 7 is_stmt 1 view .LVU66
 309 0074 0D4B     		ldr	r3, .L31+16
 310 0076 93F88D00 		ldrb	r0, [r3, #141]	@ zero_extendqisi2
 311 007a D3F89010 		ldr	r1, [r3, #144]
 241:Core/Src/main.c ****     }
 312              		.loc 1 241 68 is_stmt 0 view .LVU67
 313 007e D3F89420 		ldr	r2, [r3, #148]
 241:Core/Src/main.c ****     }
 314              		.loc 1 241 7 view .LVU68
 315 0082 92B2     		uxth	r2, r2
 316 0084 FFF7FEFF 		bl	CDC_Transmit
 317              	.LVL16:
 318 0088 DAE7     		b	.L21
 319              	.L29:
 245:Core/Src/main.c ****     }
 320              		.loc 1 245 7 is_stmt 1 view .LVU69
 321 008a 0848     		ldr	r0, .L31+16
 322 008c FFF7FEFF 		bl	NyanWelcomeDisplay
 323              	.LVL17:
 324 0090 DBE7     		b	.L22
 325              	.L30:
 249:Core/Src/main.c ****     }
 326              		.loc 1 249 7 view .LVU70
 327 0092 0648     		ldr	r0, .L31+16
 328 0094 FFF7FEFF 		bl	NyanExecute
 329              	.LVL18:
 330 0098 E0E7     		b	.L23
 331              	.L32:
 332 009a 00BF     		.align	2
 333              	.L31:
 334 009c 00000140 		.word	1073807360
 335 00a0 00040140 		.word	1073808384
 336 00a4 000C0240 		.word	1073875968
 337 00a8 00000000 		.word	.LANCHOR1
 338 00ac 00000000 		.word	.LANCHOR2
 339              		.cfi_endproc
 340              	.LFE151:
ARM GAS  /tmp/ccuhSsP0.s 			page 12


 342              		.section	.text.Error_Handler,"ax",%progbits
 343              		.align	1
 344              		.global	Error_Handler
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	Error_Handler:
 350              	.LFB152:
 255:Core/Src/main.c **** /* USER CODE END 4 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /**
 258:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 259:Core/Src/main.c ****   * @retval None
 260:Core/Src/main.c ****   */
 261:Core/Src/main.c **** void Error_Handler(void)
 262:Core/Src/main.c **** {
 351              		.loc 1 262 1 view -0
 352              		.cfi_startproc
 353              		@ Volatile: function does not return.
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 08B5     		push	{r3, lr}
 357              	.LCFI2:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 263:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 264:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 265:Core/Src/main.c ****   __disable_irq();
 361              		.loc 1 265 3 view .LVU72
 362              	.LBB5:
 363              	.LBI5:
 364              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccuhSsP0.s 			page 13


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccuhSsP0.s 			page 14


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/ccuhSsP0.s 			page 15


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 365              		.loc 2 140 27 view .LVU73
 366              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 367              		.loc 2 142 3 view .LVU74
 368              		.syntax unified
 369              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 370 0002 72B6     		cpsid i
 371              	@ 0 "" 2
 372              		.thumb
 373              		.syntax unified
 374              	.L34:
 375              	.LBE6:
 376              	.LBE5:
 266:Core/Src/main.c ****   while (1)
 377              		.loc 1 266 3 discriminator 1 view .LVU75
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     // Turn on all LEDs on hard error
 269:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED0_Pin, GPIO_PIN_SET);
 378              		.loc 1 269 5 discriminator 1 view .LVU76
 379 0004 0D4C     		ldr	r4, .L36
 380 0006 0122     		movs	r2, #1
 381 0008 1146     		mov	r1, r2
 382 000a 2046     		mov	r0, r4
 383 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 384              	.LVL19:
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED1_Pin, GPIO_PIN_SET);
 385              		.loc 1 270 5 discriminator 1 view .LVU77
 386 0010 0122     		movs	r2, #1
 387 0012 0221     		movs	r1, #2
 388 0014 2046     		mov	r0, r4
 389 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 390              	.LVL20:
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED2_Pin, GPIO_PIN_SET);
 391              		.loc 1 271 5 discriminator 1 view .LVU78
 392 001a 0122     		movs	r2, #1
 393 001c 0421     		movs	r1, #4
 394 001e 2046     		mov	r0, r4
 395 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL21:
 272:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED3_Pin, GPIO_PIN_SET);
 397              		.loc 1 272 5 discriminator 1 view .LVU79
 398 0024 0122     		movs	r2, #1
 399 0026 0821     		movs	r1, #8
 400 0028 2046     		mov	r0, r4
 401 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL22:
 273:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOD, Nyan_Keys_LED4_Pin, GPIO_PIN_SET);
 403              		.loc 1 273 5 discriminator 1 view .LVU80
 404 002e 0122     		movs	r2, #1
 405 0030 1021     		movs	r1, #16
 406 0032 2046     		mov	r0, r4
 407 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL23:
 266:Core/Src/main.c ****   {
ARM GAS  /tmp/ccuhSsP0.s 			page 16


 409              		.loc 1 266 9 discriminator 1 view .LVU81
 410 0038 E4E7     		b	.L34
 411              	.L37:
 412 003a 00BF     		.align	2
 413              	.L36:
 414 003c 000C0240 		.word	1073875968
 415              		.cfi_endproc
 416              	.LFE152:
 418              		.section	.text.SystemClock_Config,"ax",%progbits
 419              		.align	1
 420              		.global	SystemClock_Config
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	SystemClock_Config:
 426              	.LFB146:
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 427              		.loc 1 143 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 80
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 00B5     		push	{lr}
 432              	.LCFI3:
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 14, -4
 435 0002 95B0     		sub	sp, sp, #84
 436              	.LCFI4:
 437              		.cfi_def_cfa_offset 88
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 438              		.loc 1 144 3 view .LVU83
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 439              		.loc 1 144 22 is_stmt 0 view .LVU84
 440 0004 3022     		movs	r2, #48
 441 0006 0021     		movs	r1, #0
 442 0008 08A8     		add	r0, sp, #32
 443 000a FFF7FEFF 		bl	memset
 444              	.LVL24:
 145:Core/Src/main.c **** 
 445              		.loc 1 145 3 is_stmt 1 view .LVU85
 145:Core/Src/main.c **** 
 446              		.loc 1 145 22 is_stmt 0 view .LVU86
 447 000e 0023     		movs	r3, #0
 448 0010 0393     		str	r3, [sp, #12]
 449 0012 0493     		str	r3, [sp, #16]
 450 0014 0593     		str	r3, [sp, #20]
 451 0016 0693     		str	r3, [sp, #24]
 452 0018 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 453              		.loc 1 149 3 is_stmt 1 view .LVU87
 454              	.LBB7:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 455              		.loc 1 149 3 view .LVU88
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 456              		.loc 1 149 3 view .LVU89
 457 001a 234B     		ldr	r3, .L46
 458 001c 1A6C     		ldr	r2, [r3, #64]
 459 001e 42F08052 		orr	r2, r2, #268435456
ARM GAS  /tmp/ccuhSsP0.s 			page 17


 460 0022 1A64     		str	r2, [r3, #64]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 461              		.loc 1 149 3 view .LVU90
 462 0024 1B6C     		ldr	r3, [r3, #64]
 463 0026 03F08053 		and	r3, r3, #268435456
 464 002a 0193     		str	r3, [sp, #4]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 465              		.loc 1 149 3 view .LVU91
 466 002c 019B     		ldr	r3, [sp, #4]
 467              	.LBE7:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 468              		.loc 1 149 3 view .LVU92
 150:Core/Src/main.c **** 
 469              		.loc 1 150 3 view .LVU93
 470              	.LBB8:
 150:Core/Src/main.c **** 
 471              		.loc 1 150 3 view .LVU94
 150:Core/Src/main.c **** 
 472              		.loc 1 150 3 view .LVU95
 473 002e 1F4B     		ldr	r3, .L46+4
 474 0030 1A68     		ldr	r2, [r3]
 475 0032 42F44042 		orr	r2, r2, #49152
 476 0036 1A60     		str	r2, [r3]
 150:Core/Src/main.c **** 
 477              		.loc 1 150 3 view .LVU96
 478 0038 1B68     		ldr	r3, [r3]
 479 003a 03F44043 		and	r3, r3, #49152
 480 003e 0293     		str	r3, [sp, #8]
 150:Core/Src/main.c **** 
 481              		.loc 1 150 3 view .LVU97
 482 0040 029B     		ldr	r3, [sp, #8]
 483              	.LBE8:
 150:Core/Src/main.c **** 
 484              		.loc 1 150 3 view .LVU98
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 485              		.loc 1 155 3 view .LVU99
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 486              		.loc 1 155 36 is_stmt 0 view .LVU100
 487 0042 0123     		movs	r3, #1
 488 0044 0893     		str	r3, [sp, #32]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 489              		.loc 1 156 3 is_stmt 1 view .LVU101
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 490              		.loc 1 156 30 is_stmt 0 view .LVU102
 491 0046 4FF4A023 		mov	r3, #327680
 492 004a 0993     		str	r3, [sp, #36]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 493              		.loc 1 157 3 is_stmt 1 view .LVU103
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 494              		.loc 1 157 34 is_stmt 0 view .LVU104
 495 004c 0223     		movs	r3, #2
 496 004e 0E93     		str	r3, [sp, #56]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 497              		.loc 1 158 3 is_stmt 1 view .LVU105
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 498              		.loc 1 158 35 is_stmt 0 view .LVU106
 499 0050 4FF48002 		mov	r2, #4194304
ARM GAS  /tmp/ccuhSsP0.s 			page 18


 500 0054 0F92     		str	r2, [sp, #60]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 501              		.loc 1 159 3 is_stmt 1 view .LVU107
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 502              		.loc 1 159 30 is_stmt 0 view .LVU108
 503 0056 1922     		movs	r2, #25
 504 0058 1092     		str	r2, [sp, #64]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 505              		.loc 1 160 3 is_stmt 1 view .LVU109
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 506              		.loc 1 160 30 is_stmt 0 view .LVU110
 507 005a 4FF4D872 		mov	r2, #432
 508 005e 1192     		str	r2, [sp, #68]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 509              		.loc 1 161 3 is_stmt 1 view .LVU111
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 510              		.loc 1 161 30 is_stmt 0 view .LVU112
 511 0060 1293     		str	r3, [sp, #72]
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 512              		.loc 1 162 3 is_stmt 1 view .LVU113
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 513              		.loc 1 162 30 is_stmt 0 view .LVU114
 514 0062 0923     		movs	r3, #9
 515 0064 1393     		str	r3, [sp, #76]
 163:Core/Src/main.c ****   {
 516              		.loc 1 163 3 is_stmt 1 view .LVU115
 163:Core/Src/main.c ****   {
 517              		.loc 1 163 7 is_stmt 0 view .LVU116
 518 0066 08A8     		add	r0, sp, #32
 519 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 520              	.LVL25:
 163:Core/Src/main.c ****   {
 521              		.loc 1 163 6 view .LVU117
 522 006c B0B9     		cbnz	r0, .L43
 170:Core/Src/main.c ****   {
 523              		.loc 1 170 3 is_stmt 1 view .LVU118
 170:Core/Src/main.c ****   {
 524              		.loc 1 170 7 is_stmt 0 view .LVU119
 525 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 526              	.LVL26:
 170:Core/Src/main.c ****   {
 527              		.loc 1 170 6 view .LVU120
 528 0072 A8B9     		cbnz	r0, .L44
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 529              		.loc 1 177 3 is_stmt 1 view .LVU121
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 530              		.loc 1 177 31 is_stmt 0 view .LVU122
 531 0074 0F23     		movs	r3, #15
 532 0076 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 533              		.loc 1 179 3 is_stmt 1 view .LVU123
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 534              		.loc 1 179 34 is_stmt 0 view .LVU124
 535 0078 0223     		movs	r3, #2
 536 007a 0493     		str	r3, [sp, #16]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 537              		.loc 1 180 3 is_stmt 1 view .LVU125
ARM GAS  /tmp/ccuhSsP0.s 			page 19


 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 538              		.loc 1 180 35 is_stmt 0 view .LVU126
 539 007c 0023     		movs	r3, #0
 540 007e 0593     		str	r3, [sp, #20]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 541              		.loc 1 181 3 is_stmt 1 view .LVU127
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 542              		.loc 1 181 36 is_stmt 0 view .LVU128
 543 0080 4FF4A053 		mov	r3, #5120
 544 0084 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c **** 
 545              		.loc 1 182 3 is_stmt 1 view .LVU129
 182:Core/Src/main.c **** 
 546              		.loc 1 182 36 is_stmt 0 view .LVU130
 547 0086 4FF48053 		mov	r3, #4096
 548 008a 0793     		str	r3, [sp, #28]
 184:Core/Src/main.c ****   {
 549              		.loc 1 184 3 is_stmt 1 view .LVU131
 184:Core/Src/main.c ****   {
 550              		.loc 1 184 7 is_stmt 0 view .LVU132
 551 008c 0721     		movs	r1, #7
 552 008e 03A8     		add	r0, sp, #12
 553 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 554              	.LVL27:
 184:Core/Src/main.c ****   {
 555              		.loc 1 184 6 view .LVU133
 556 0094 30B9     		cbnz	r0, .L45
 188:Core/Src/main.c **** 
 557              		.loc 1 188 1 view .LVU134
 558 0096 15B0     		add	sp, sp, #84
 559              	.LCFI5:
 560              		.cfi_remember_state
 561              		.cfi_def_cfa_offset 4
 562              		@ sp needed
 563 0098 5DF804FB 		ldr	pc, [sp], #4
 564              	.L43:
 565              	.LCFI6:
 566              		.cfi_restore_state
 165:Core/Src/main.c ****   }
 567              		.loc 1 165 5 is_stmt 1 view .LVU135
 568 009c FFF7FEFF 		bl	Error_Handler
 569              	.LVL28:
 570              	.L44:
 172:Core/Src/main.c ****   }
 571              		.loc 1 172 5 view .LVU136
 572 00a0 FFF7FEFF 		bl	Error_Handler
 573              	.LVL29:
 574              	.L45:
 186:Core/Src/main.c ****   }
 575              		.loc 1 186 5 view .LVU137
 576 00a4 FFF7FEFF 		bl	Error_Handler
 577              	.LVL30:
 578              	.L47:
 579              		.align	2
 580              	.L46:
 581 00a8 00380240 		.word	1073887232
 582 00ac 00700040 		.word	1073770496
ARM GAS  /tmp/ccuhSsP0.s 			page 20


 583              		.cfi_endproc
 584              	.LFE146:
 586              		.section	.text.main,"ax",%progbits
 587              		.align	1
 588              		.global	main
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 593              	main:
 594              	.LFB145:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 595              		.loc 1 80 1 view -0
 596              		.cfi_startproc
 597              		@ Volatile: function does not return.
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI7:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 605              		.loc 1 87 3 view .LVU139
 606 0002 FFF7FEFF 		bl	HAL_Init
 607              	.LVL31:
  90:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
 608              		.loc 1 90 3 view .LVU140
  90:Core/Src/main.c ****   EepromInit(&nos_eeprom, true, true);
 609              		.loc 1 90 27 is_stmt 0 view .LVU141
 610 0006 1F4B     		ldr	r3, .L51
 611 0008 0020     		movs	r0, #0
 612 000a 0021     		movs	r1, #0
 613 000c C3E90001 		strd	r0, [r3]
  91:Core/Src/main.c ****   NyanOsInit(&nos, &nos_eeprom);
 614              		.loc 1 91 3 is_stmt 1 view .LVU142
 615 0010 1D4C     		ldr	r4, .L51+4
 616 0012 0122     		movs	r2, #1
 617 0014 1146     		mov	r1, r2
 618 0016 2046     		mov	r0, r4
 619 0018 FFF7FEFF 		bl	EepromInit
 620              	.LVL32:
  92:Core/Src/main.c **** 
 621              		.loc 1 92 3 view .LVU143
 622 001c 2146     		mov	r1, r4
 623 001e 1B48     		ldr	r0, .L51+8
 624 0020 FFF7FEFF 		bl	NyanOsInit
 625              	.LVL33:
  97:Core/Src/main.c **** 
 626              		.loc 1 97 3 view .LVU144
 627 0024 FFF7FEFF 		bl	SystemClock_Config
 628              	.LVL34:
 104:Core/Src/main.c ****   MX_DMA_Init();
 629              		.loc 1 104 3 view .LVU145
 630 0028 FFF7FEFF 		bl	MX_GPIO_Init
 631              	.LVL35:
 105:Core/Src/main.c ****   MX_SPI1_Init();
 632              		.loc 1 105 3 view .LVU146
ARM GAS  /tmp/ccuhSsP0.s 			page 21


 633 002c FFF7FEFF 		bl	MX_DMA_Init
 634              	.LVL36:
 106:Core/Src/main.c ****   MX_SPI2_Init();
 635              		.loc 1 106 3 view .LVU147
 636 0030 FFF7FEFF 		bl	MX_SPI1_Init
 637              	.LVL37:
 107:Core/Src/main.c ****   MX_SPI4_Init();
 638              		.loc 1 107 3 view .LVU148
 639 0034 FFF7FEFF 		bl	MX_SPI2_Init
 640              	.LVL38:
 108:Core/Src/main.c ****   MX_I2C1_Init();
 641              		.loc 1 108 3 view .LVU149
 642 0038 FFF7FEFF 		bl	MX_SPI4_Init
 643              	.LVL39:
 109:Core/Src/main.c ****   MX_TIM7_Init();
 644              		.loc 1 109 3 view .LVU150
 645 003c FFF7FEFF 		bl	MX_I2C1_Init
 646              	.LVL40:
 110:Core/Src/main.c ****   MX_TIM6_Init();
 647              		.loc 1 110 3 view .LVU151
 648 0040 FFF7FEFF 		bl	MX_TIM7_Init
 649              	.LVL41:
 111:Core/Src/main.c ****   MX_TIM1_Init();
 650              		.loc 1 111 3 view .LVU152
 651 0044 FFF7FEFF 		bl	MX_TIM6_Init
 652              	.LVL42:
 112:Core/Src/main.c ****   MX_USB_OTG_HS_PCD_Init();
 653              		.loc 1 112 3 view .LVU153
 654 0048 FFF7FEFF 		bl	MX_TIM1_Init
 655              	.LVL43:
 113:Core/Src/main.c ****   MX_RNG_Init();
 656              		.loc 1 113 3 view .LVU154
 657 004c FFF7FEFF 		bl	MX_USB_OTG_HS_PCD_Init
 658              	.LVL44:
 114:Core/Src/main.c ****   MX_TIM8_Init();
 659              		.loc 1 114 3 view .LVU155
 660 0050 FFF7FEFF 		bl	MX_RNG_Init
 661              	.LVL45:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 662              		.loc 1 115 3 view .LVU156
 663 0054 FFF7FEFF 		bl	MX_TIM8_Init
 664              	.LVL46:
 118:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 665              		.loc 1 118 3 view .LVU157
 666 0058 0D4C     		ldr	r4, .L51+12
 667 005a 2046     		mov	r0, r4
 668 005c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 669              	.LVL47:
 119:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 670              		.loc 1 119 3 view .LVU158
 671 0060 0C48     		ldr	r0, .L51+16
 672 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 673              	.LVL48:
 120:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 674              		.loc 1 120 3 view .LVU159
 675 0066 0C48     		ldr	r0, .L51+20
 676 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  /tmp/ccuhSsP0.s 			page 22


 677              	.LVL49:
 121:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 678              		.loc 1 121 3 view .LVU160
 679 006c 0021     		movs	r1, #0
 680 006e 2046     		mov	r0, r4
 681 0070 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 682              	.LVL50:
 122:Core/Src/main.c ****   // USB composite device creation
 683              		.loc 1 122 3 view .LVU161
 684 0074 0021     		movs	r1, #0
 685 0076 0948     		ldr	r0, .L51+24
 686 0078 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 687              	.LVL51:
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 688              		.loc 1 124 3 view .LVU162
 689 007c FFF7FEFF 		bl	MX_USB_DEVICE_Init
 690              	.LVL52:
 691              	.L49:
 129:Core/Src/main.c ****   {
 692              		.loc 1 129 3 discriminator 1 view .LVU163
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 693              		.loc 1 134 3 discriminator 1 view .LVU164
 129:Core/Src/main.c ****   {
 694              		.loc 1 129 9 discriminator 1 view .LVU165
 695 0080 FEE7     		b	.L49
 696              	.L52:
 697 0082 00BF     		.align	2
 698              	.L51:
 699 0084 00000000 		.word	.LANCHOR1
 700 0088 00000000 		.word	.LANCHOR0
 701 008c 00000000 		.word	.LANCHOR2
 702 0090 00000000 		.word	htim1
 703 0094 00000000 		.word	htim7
 704 0098 00000000 		.word	htim6
 705 009c 00000000 		.word	htim8
 706              		.cfi_endproc
 707              	.LFE145:
 709              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_I2C_ErrorCallback
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 716              	HAL_I2C_ErrorCallback:
 717              	.LVL53:
 718              	.LFB149:
 202:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
 719              		.loc 1 202 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Core/Src/main.c ****   uint8_t error = HAL_I2C_GetError(I2cHandle);
 723              		.loc 1 202 1 is_stmt 0 view .LVU167
 724 0000 08B5     		push	{r3, lr}
 725              	.LCFI8:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 3, -8
ARM GAS  /tmp/ccuhSsP0.s 			page 23


 728              		.cfi_offset 14, -4
 203:Core/Src/main.c ****   switch (error)
 729              		.loc 1 203 3 is_stmt 1 view .LVU168
 203:Core/Src/main.c ****   switch (error)
 730              		.loc 1 203 19 is_stmt 0 view .LVU169
 731 0002 FFF7FEFF 		bl	HAL_I2C_GetError
 732              	.LVL54:
 204:Core/Src/main.c ****   {
 733              		.loc 1 204 3 is_stmt 1 view .LVU170
 208:Core/Src/main.c ****   }
 734              		.loc 1 208 7 view .LVU171
 735 0006 FFF7FEFF 		bl	Error_Handler
 736              	.LVL55:
 737              		.cfi_endproc
 738              	.LFE149:
 740              		.global	nos_eeprom
 741              		.global	nos
 742              		.global	system_status_led_angle
 743              		.section	.bss.nos,"aw",%nobits
 744              		.align	2
 745              		.set	.LANCHOR2,. + 0
 748              	nos:
 749 0000 00000000 		.space	208
 749      00000000 
 749      00000000 
 749      00000000 
 749      00000000 
 750              		.section	.bss.nos_eeprom,"aw",%nobits
 751              		.align	2
 752              		.set	.LANCHOR0,. + 0
 755              	nos_eeprom:
 756 0000 00000000 		.space	1156
 756      00000000 
 756      00000000 
 756      00000000 
 756      00000000 
 757              		.section	.bss.system_status_led_angle,"aw",%nobits
 758              		.align	3
 759              		.set	.LANCHOR1,. + 0
 762              	system_status_led_angle:
 763 0000 00000000 		.space	8
 763      00000000 
 764              		.text
 765              	.Letext0:
 766              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 767              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 768              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 769              		.file 6 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 770              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 771              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 772              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 773              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 774              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 775              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 776              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 777              		.file 14 "Core/Inc/tim.h"
 778              		.file 15 "Core/Inc/24xx_eeprom.h"
ARM GAS  /tmp/ccuhSsP0.s 			page 24


 779              		.file 16 "Core/Inc/nyan_os.h"
 780              		.file 17 "Core/Inc/nyan_leds.h"
 781              		.file 18 "Core/Inc/nyan_strings.h"
 782              		.file 19 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 783              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 784              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 785              		.file 22 "Core/Inc/gpio.h"
 786              		.file 23 "Core/Inc/dma.h"
 787              		.file 24 "Core/Inc/spi.h"
 788              		.file 25 "Core/Inc/i2c.h"
 789              		.file 26 "Core/Inc/usb_otg.h"
 790              		.file 27 "Core/Inc/rng.h"
 791              		.file 28 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usb_device.h"
 792              		.file 29 "<built-in>"
ARM GAS  /tmp/ccuhSsP0.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccuhSsP0.s:20     .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/ccuhSsP0.s:26     .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/ccuhSsP0.s:45     .text.HAL_I2C_MemTxCpltCallback:0000000000000008 $d
     /tmp/ccuhSsP0.s:50     .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccuhSsP0.s:56     .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccuhSsP0.s:74     .text.HAL_I2C_MemRxCpltCallback:0000000000000008 $d
     /tmp/ccuhSsP0.s:80     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccuhSsP0.s:86     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccuhSsP0.s:180    .text.HAL_TIM_PeriodElapsedCallback:0000000000000060 $d
     /tmp/ccuhSsP0.s:191    .text.HAL_TIM_OC_DelayElapsedCallback:0000000000000000 $t
     /tmp/ccuhSsP0.s:197    .text.HAL_TIM_OC_DelayElapsedCallback:0000000000000000 HAL_TIM_OC_DelayElapsedCallback
     /tmp/ccuhSsP0.s:334    .text.HAL_TIM_OC_DelayElapsedCallback:000000000000009c $d
     /tmp/ccuhSsP0.s:343    .text.Error_Handler:0000000000000000 $t
     /tmp/ccuhSsP0.s:349    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuhSsP0.s:414    .text.Error_Handler:000000000000003c $d
     /tmp/ccuhSsP0.s:419    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccuhSsP0.s:425    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccuhSsP0.s:581    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccuhSsP0.s:587    .text.main:0000000000000000 $t
     /tmp/ccuhSsP0.s:593    .text.main:0000000000000000 main
     /tmp/ccuhSsP0.s:699    .text.main:0000000000000084 $d
     /tmp/ccuhSsP0.s:710    .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccuhSsP0.s:716    .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccuhSsP0.s:755    .bss.nos_eeprom:0000000000000000 nos_eeprom
     /tmp/ccuhSsP0.s:748    .bss.nos:0000000000000000 nos
     /tmp/ccuhSsP0.s:762    .bss.system_status_led_angle:0000000000000000 system_status_led_angle
     /tmp/ccuhSsP0.s:744    .bss.nos:0000000000000000 $d
     /tmp/ccuhSsP0.s:751    .bss.nos_eeprom:0000000000000000 $d
     /tmp/ccuhSsP0.s:758    .bss.system_status_led_angle:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_dadd
HAL_GPIO_WritePin
SYSTEM_STATUS_DEGREE_INCREMENT
getSystemStatusOCRValue
CDC_Transmit
NyanWelcomeDisplay
NyanExecute
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
EepromInit
NyanOsInit
MX_GPIO_Init
MX_DMA_Init
MX_SPI1_Init
MX_SPI2_Init
MX_SPI4_Init
MX_I2C1_Init
MX_TIM7_Init
MX_TIM6_Init
MX_TIM1_Init
MX_USB_OTG_HS_PCD_Init
ARM GAS  /tmp/ccuhSsP0.s 			page 26


MX_RNG_Init
MX_TIM8_Init
HAL_TIM_Base_Start_IT
HAL_TIM_OC_Start_IT
MX_USB_DEVICE_Init
htim1
htim7
htim6
htim8
HAL_I2C_GetError
