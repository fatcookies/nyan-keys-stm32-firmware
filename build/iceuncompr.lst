ARM GAS  /tmp/ccRZKjEk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"iceuncompr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.read_bit,"ax",%progbits
  20              		.align	1
  21              		.global	read_bit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	read_bit:
  27              	.LVL0:
  28              	.LFB144:
  29              		.file 1 "Core/Src/iceuncompr.c"
   1:Core/Src/iceuncompr.c **** /**
   2:Core/Src/iceuncompr.c ****  * @file iceuncompr.c
   3:Core/Src/iceuncompr.c ****  * @brief Implementation file for ICE decompression utility.
   4:Core/Src/iceuncompr.c ****  *
   5:Core/Src/iceuncompr.c ****  * This file contains the implementation of functions required for the ICE decompression utility.
   6:Core/Src/iceuncompr.c ****  */
   7:Core/Src/iceuncompr.c **** #include "iceuncompr.h"
   8:Core/Src/iceuncompr.c **** 
   9:Core/Src/iceuncompr.c **** // Function to read a bit from the input stream
  10:Core/Src/iceuncompr.c **** int read_bit(Iceuncompr *ice) {
  30              		.loc 1 10 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 10 31 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  11:Core/Src/iceuncompr.c ****     if (ice->read_bitcounter == 0) {
  41              		.loc 1 11 5 is_stmt 1 view .LVU2
  42              		.loc 1 11 12 is_stmt 0 view .LVU3
  43 0004 C368     		ldr	r3, [r0, #12]
  44              		.loc 1 11 8 view .LVU4
  45 0006 4BB9     		cbnz	r3, .L2
  12:Core/Src/iceuncompr.c ****         ice->read_bitcounter = 8;
  46              		.loc 1 12 9 is_stmt 1 view .LVU5
ARM GAS  /tmp/ccRZKjEk.s 			page 2


  47              		.loc 1 12 30 is_stmt 0 view .LVU6
  48 0008 0823     		movs	r3, #8
  49 000a C360     		str	r3, [r0, #12]
  13:Core/Src/iceuncompr.c ****         if (ice->input_data_fh != NULL) {
  50              		.loc 1 13 9 is_stmt 1 view .LVU7
  51              		.loc 1 13 16 is_stmt 0 view .LVU8
  52 000c 0068     		ldr	r0, [r0]
  53              	.LVL1:
  54              		.loc 1 13 12 view .LVU9
  55 000e 68B1     		cbz	r0, .L4
  56              	.LBB2:
  14:Core/Src/iceuncompr.c ****             int ch = fgetc(ice->input_data_fh);
  57              		.loc 1 14 13 is_stmt 1 view .LVU10
  58              		.loc 1 14 22 is_stmt 0 view .LVU11
  59 0010 FFF7FEFF 		bl	fgetc
  60              	.LVL2:
  15:Core/Src/iceuncompr.c ****             if (ch != EOF) {
  61              		.loc 1 15 13 is_stmt 1 view .LVU12
  62              		.loc 1 15 16 is_stmt 0 view .LVU13
  63 0014 B0F1FF3F 		cmp	r0, #-1
  64 0018 07D0     		beq	.L1
  16:Core/Src/iceuncompr.c ****                 ice->read_buffer = ch;
  65              		.loc 1 16 17 is_stmt 1 view .LVU14
  66              		.loc 1 16 34 is_stmt 0 view .LVU15
  67 001a 2061     		str	r0, [r4, #16]
  68              	.LVL3:
  69              	.L2:
  70              		.loc 1 16 34 view .LVU16
  71              	.LBE2:
  17:Core/Src/iceuncompr.c ****             } else {
  18:Core/Src/iceuncompr.c ****                 // Handle end of file or error
  19:Core/Src/iceuncompr.c ****                 return EOF;
  20:Core/Src/iceuncompr.c ****             }
  21:Core/Src/iceuncompr.c ****         } else {
  22:Core/Src/iceuncompr.c ****             // Handle error if file handle is NULL
  23:Core/Src/iceuncompr.c ****             return EOF;
  24:Core/Src/iceuncompr.c ****         }
  25:Core/Src/iceuncompr.c ****     }
  26:Core/Src/iceuncompr.c **** 
  27:Core/Src/iceuncompr.c ****     ice->read_bitcounter--;
  72              		.loc 1 27 5 is_stmt 1 view .LVU17
  73              		.loc 1 27 8 is_stmt 0 view .LVU18
  74 001c E068     		ldr	r0, [r4, #12]
  75              		.loc 1 27 25 view .LVU19
  76 001e 431E     		subs	r3, r0, #1
  77 0020 E360     		str	r3, [r4, #12]
  28:Core/Src/iceuncompr.c ****     return (ice->read_buffer >> ice->read_bitcounter) & 1;
  78              		.loc 1 28 5 is_stmt 1 view .LVU20
  79              		.loc 1 28 16 is_stmt 0 view .LVU21
  80 0022 2069     		ldr	r0, [r4, #16]
  81              		.loc 1 28 30 view .LVU22
  82 0024 D840     		lsrs	r0, r0, r3
  83              		.loc 1 28 55 view .LVU23
  84 0026 00F00100 		and	r0, r0, #1
  85              	.L1:
  29:Core/Src/iceuncompr.c **** }
  86              		.loc 1 29 1 view .LVU24
ARM GAS  /tmp/ccRZKjEk.s 			page 3


  87 002a 10BD     		pop	{r4, pc}
  88              	.LVL4:
  89              	.L4:
  23:Core/Src/iceuncompr.c ****         }
  90              		.loc 1 23 20 view .LVU25
  91 002c 4FF0FF30 		mov	r0, #-1
  92 0030 FBE7     		b	.L1
  93              		.cfi_endproc
  94              	.LFE144:
  96              		.section	.text.write_bit,"ax",%progbits
  97              		.align	1
  98              		.global	write_bit
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	write_bit:
 104              	.LVL5:
 105              	.LFB145:
  30:Core/Src/iceuncompr.c **** 
  31:Core/Src/iceuncompr.c **** // Function to write a bit to the output buffer
  32:Core/Src/iceuncompr.c **** void write_bit(Iceuncompr *ice, int value) {
 106              		.loc 1 32 44 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 32 44 is_stmt 0 view .LVU27
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116 0002 0446     		mov	r4, r0
  33:Core/Src/iceuncompr.c ****     ice->write_bitcounter--;
 117              		.loc 1 33 5 is_stmt 1 view .LVU28
 118              		.loc 1 33 8 is_stmt 0 view .LVU29
 119 0004 4369     		ldr	r3, [r0, #20]
 120              		.loc 1 33 26 view .LVU30
 121 0006 013B     		subs	r3, r3, #1
 122 0008 4361     		str	r3, [r0, #20]
  34:Core/Src/iceuncompr.c **** 
  35:Core/Src/iceuncompr.c ****     if (value)
 123              		.loc 1 35 5 is_stmt 1 view .LVU31
 124              		.loc 1 35 8 is_stmt 0 view .LVU32
 125 000a 29B1     		cbz	r1, .L7
  36:Core/Src/iceuncompr.c ****         ice->write_buffer |= 1 << ice->write_bitcounter;
 126              		.loc 1 36 9 is_stmt 1 view .LVU33
 127              		.loc 1 36 32 is_stmt 0 view .LVU34
 128 000c 0122     		movs	r2, #1
 129 000e 02FA03F1 		lsl	r1, r2, r3
 130              	.LVL6:
 131              		.loc 1 36 27 view .LVU35
 132 0012 027E     		ldrb	r2, [r0, #24]	@ zero_extendqisi2
 133 0014 0A43     		orrs	r2, r2, r1
 134 0016 0276     		strb	r2, [r0, #24]
 135              	.L7:
  37:Core/Src/iceuncompr.c **** 
  38:Core/Src/iceuncompr.c ****     if (ice->write_bitcounter == 0) {
ARM GAS  /tmp/ccRZKjEk.s 			page 4


 136              		.loc 1 38 5 is_stmt 1 view .LVU36
 137              		.loc 1 38 8 is_stmt 0 view .LVU37
 138 0018 03B1     		cbz	r3, .L10
 139              	.LVL7:
 140              	.L6:
  39:Core/Src/iceuncompr.c ****         // Write the byte to the SPI channel
  40:Core/Src/iceuncompr.c ****         HAL_SPI_Transmit(&hspi4, (uint8_t*)&ice->write_buffer, 1, 100);
  41:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
  42:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
  43:Core/Src/iceuncompr.c ****     }
  44:Core/Src/iceuncompr.c **** }
 141              		.loc 1 44 1 view .LVU38
 142 001a 10BD     		pop	{r4, pc}
 143              	.LVL8:
 144              	.L10:
  40:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
 145              		.loc 1 40 9 is_stmt 1 view .LVU39
 146 001c 6423     		movs	r3, #100
 147 001e 0122     		movs	r2, #1
 148 0020 04F11801 		add	r1, r4, #24
 149 0024 0348     		ldr	r0, .L11
 150              	.LVL9:
  40:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
 151              		.loc 1 40 9 is_stmt 0 view .LVU40
 152 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 153              	.LVL10:
  41:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
 154              		.loc 1 41 9 is_stmt 1 view .LVU41
  41:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
 155              		.loc 1 41 31 is_stmt 0 view .LVU42
 156 002a 0823     		movs	r3, #8
 157 002c 6361     		str	r3, [r4, #20]
  42:Core/Src/iceuncompr.c ****     }
 158              		.loc 1 42 9 is_stmt 1 view .LVU43
  42:Core/Src/iceuncompr.c ****     }
 159              		.loc 1 42 27 is_stmt 0 view .LVU44
 160 002e 0023     		movs	r3, #0
 161 0030 2376     		strb	r3, [r4, #24]
 162              		.loc 1 44 1 view .LVU45
 163 0032 F2E7     		b	.L6
 164              	.L12:
 165              		.align	2
 166              	.L11:
 167 0034 00000000 		.word	hspi4
 168              		.cfi_endproc
 169              	.LFE145:
 171              		.section	.text.read_int,"ax",%progbits
 172              		.align	1
 173              		.global	read_int
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	read_int:
 179              	.LVL11:
 180              	.LFB146:
  45:Core/Src/iceuncompr.c **** 
  46:Core/Src/iceuncompr.c **** // Function to read an integer from the input stream
ARM GAS  /tmp/ccRZKjEk.s 			page 5


  47:Core/Src/iceuncompr.c **** int read_int(Iceuncompr *ice, int bits) {
 181              		.loc 1 47 41 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		.loc 1 47 41 is_stmt 0 view .LVU47
 186 0000 70B5     		push	{r4, r5, r6, lr}
 187              	.LCFI2:
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 4, -16
 190              		.cfi_offset 5, -12
 191              		.cfi_offset 6, -8
 192              		.cfi_offset 14, -4
 193 0002 0546     		mov	r5, r0
  48:Core/Src/iceuncompr.c ****     int ret = 0;
 194              		.loc 1 48 5 is_stmt 1 view .LVU48
 195              	.LVL12:
  49:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 196              		.loc 1 49 5 view .LVU49
  48:Core/Src/iceuncompr.c ****     int ret = 0;
 197              		.loc 1 48 9 is_stmt 0 view .LVU50
 198 0004 0026     		movs	r6, #0
 199              		.loc 1 49 11 view .LVU51
 200 0006 00E0     		b	.L14
 201              	.LVL13:
 202              	.L16:
  47:Core/Src/iceuncompr.c ****     int ret = 0;
 203              		.loc 1 47 41 view .LVU52
 204 0008 2146     		mov	r1, r4
 205              	.LVL14:
 206              	.L14:
 207              		.loc 1 49 11 is_stmt 1 view .LVU53
 208              		.loc 1 49 16 is_stmt 0 view .LVU54
 209 000a 4C1E     		subs	r4, r1, #1
 210              	.LVL15:
 211              		.loc 1 49 11 view .LVU55
 212 000c 0029     		cmp	r1, #0
 213 000e 0CDD     		ble	.L13
 214              	.LBB3:
  50:Core/Src/iceuncompr.c ****         int bit = read_bit(ice);
 215              		.loc 1 50 9 is_stmt 1 view .LVU56
 216              		.loc 1 50 19 is_stmt 0 view .LVU57
 217 0010 2846     		mov	r0, r5
 218 0012 FFF7FEFF 		bl	read_bit
 219              	.LVL16:
  51:Core/Src/iceuncompr.c ****         if (bit == EOF) {
 220              		.loc 1 51 9 is_stmt 1 view .LVU58
 221              		.loc 1 51 12 is_stmt 0 view .LVU59
 222 0016 B0F1FF3F 		cmp	r0, #-1
 223 001a 05D0     		beq	.L18
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
  53:Core/Src/iceuncompr.c ****         }
  54:Core/Src/iceuncompr.c ****         if (bit) {
 224              		.loc 1 54 9 is_stmt 1 view .LVU60
 225              		.loc 1 54 12 is_stmt 0 view .LVU61
 226 001c 0028     		cmp	r0, #0
 227 001e F3D0     		beq	.L16
ARM GAS  /tmp/ccRZKjEk.s 			page 6


  55:Core/Src/iceuncompr.c ****             ret |= 1 << bits;
 228              		.loc 1 55 13 is_stmt 1 view .LVU62
 229              		.loc 1 55 22 is_stmt 0 view .LVU63
 230 0020 0123     		movs	r3, #1
 231 0022 A340     		lsls	r3, r3, r4
 232              		.loc 1 55 17 view .LVU64
 233 0024 1E43     		orrs	r6, r6, r3
 234              	.LVL17:
 235              		.loc 1 55 17 view .LVU65
 236 0026 EFE7     		b	.L16
 237              	.L18:
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
 238              		.loc 1 52 20 view .LVU66
 239 0028 0646     		mov	r6, r0
 240              	.LVL18:
 241              	.L13:
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
 242              		.loc 1 52 20 view .LVU67
 243              	.LBE3:
  56:Core/Src/iceuncompr.c ****         }
  57:Core/Src/iceuncompr.c ****     }
  58:Core/Src/iceuncompr.c ****     return ret;
  59:Core/Src/iceuncompr.c **** }
 244              		.loc 1 59 1 view .LVU68
 245 002a 3046     		mov	r0, r6
 246 002c 70BD     		pop	{r4, r5, r6, pc}
 247              		.loc 1 59 1 view .LVU69
 248              		.cfi_endproc
 249              	.LFE146:
 251              		.section	.text.write_zeros,"ax",%progbits
 252              		.align	1
 253              		.global	write_zeros
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	write_zeros:
 259              	.LVL19:
 260              	.LFB147:
  60:Core/Src/iceuncompr.c **** 
  61:Core/Src/iceuncompr.c **** // Function to write zeros to the output buffer
  62:Core/Src/iceuncompr.c **** void write_zeros(Iceuncompr *ice, int bits) {
 261              		.loc 1 62 45 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 62 45 is_stmt 0 view .LVU71
 266 0000 38B5     		push	{r3, r4, r5, lr}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 3, -16
 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
 273 0002 0546     		mov	r5, r0
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 274              		.loc 1 63 5 is_stmt 1 view .LVU72
 275              		.loc 1 63 11 is_stmt 0 view .LVU73
ARM GAS  /tmp/ccRZKjEk.s 			page 7


 276 0004 04E0     		b	.L21
 277              	.LVL20:
 278              	.L22:
  64:Core/Src/iceuncompr.c ****         write_bit(ice, 0);
 279              		.loc 1 64 9 is_stmt 1 view .LVU74
 280 0006 0021     		movs	r1, #0
 281 0008 2846     		mov	r0, r5
 282 000a FFF7FEFF 		bl	write_bit
 283              	.LVL21:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 284              		.loc 1 63 16 is_stmt 0 view .LVU75
 285 000e 2146     		mov	r1, r4
 286              	.LVL22:
 287              	.L21:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 288              		.loc 1 63 11 is_stmt 1 view .LVU76
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 289              		.loc 1 63 16 is_stmt 0 view .LVU77
 290 0010 4C1E     		subs	r4, r1, #1
 291              	.LVL23:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 292              		.loc 1 63 11 view .LVU78
 293 0012 0029     		cmp	r1, #0
 294 0014 F7DC     		bgt	.L22
  65:Core/Src/iceuncompr.c ****     }
  66:Core/Src/iceuncompr.c **** }
 295              		.loc 1 66 1 view .LVU79
 296 0016 38BD     		pop	{r3, r4, r5, pc}
 297              		.loc 1 66 1 view .LVU80
 298              		.cfi_endproc
 299              	.LFE147:
 301              		.section	.text.ice_uncompress,"ax",%progbits
 302              		.align	1
 303              		.global	ice_uncompress
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	ice_uncompress:
 309              	.LVL24:
 310              	.LFB148:
  67:Core/Src/iceuncompr.c **** 
  68:Core/Src/iceuncompr.c **** // Main decompression function
  69:Core/Src/iceuncompr.c **** int ice_uncompress(Iceuncompr *ice) {
 311              		.loc 1 69 37 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		.loc 1 69 37 is_stmt 0 view .LVU82
 316 0000 38B5     		push	{r3, r4, r5, lr}
 317              	.LCFI4:
 318              		.cfi_def_cfa_offset 16
 319              		.cfi_offset 3, -16
 320              		.cfi_offset 4, -12
 321              		.cfi_offset 5, -8
 322              		.cfi_offset 14, -4
 323 0002 0446     		mov	r4, r0
  70:Core/Src/iceuncompr.c ****     ice->read_bitcounter = 0;
ARM GAS  /tmp/ccRZKjEk.s 			page 8


 324              		.loc 1 70 5 is_stmt 1 view .LVU83
 325              		.loc 1 70 26 is_stmt 0 view .LVU84
 326 0004 0023     		movs	r3, #0
 327 0006 C360     		str	r3, [r0, #12]
  71:Core/Src/iceuncompr.c ****     ice->write_bitcounter = 8;
 328              		.loc 1 71 5 is_stmt 1 view .LVU85
 329              		.loc 1 71 27 is_stmt 0 view .LVU86
 330 0008 0822     		movs	r2, #8
 331 000a 4261     		str	r2, [r0, #20]
  72:Core/Src/iceuncompr.c ****     ice->write_buffer = 0;
 332              		.loc 1 72 5 is_stmt 1 view .LVU87
 333              		.loc 1 72 23 is_stmt 0 view .LVU88
 334 000c 0376     		strb	r3, [r0, #24]
  73:Core/Src/iceuncompr.c **** 
  74:Core/Src/iceuncompr.c ****     int magic1_ok = read_int(ice, 32) == 0x49434543;
 335              		.loc 1 74 5 is_stmt 1 view .LVU89
 336              		.loc 1 74 21 is_stmt 0 view .LVU90
 337 000e 2021     		movs	r1, #32
 338 0010 FFF7FEFF 		bl	read_int
 339              	.LVL25:
 340              		.loc 1 74 21 view .LVU91
 341 0014 0546     		mov	r5, r0
 342              	.LVL26:
  75:Core/Src/iceuncompr.c ****     int magic2_ok = read_int(ice, 32) == 0x4f4d5052;
 343              		.loc 1 75 5 is_stmt 1 view .LVU92
 344              		.loc 1 75 21 is_stmt 0 view .LVU93
 345 0016 2021     		movs	r1, #32
 346 0018 2046     		mov	r0, r4
 347              	.LVL27:
 348              		.loc 1 75 21 view .LVU94
 349 001a FFF7FEFF 		bl	read_int
 350              	.LVL28:
  76:Core/Src/iceuncompr.c **** 
  77:Core/Src/iceuncompr.c ****     if (!magic1_ok || !magic2_ok) {
 351              		.loc 1 77 5 is_stmt 1 view .LVU95
 352              		.loc 1 77 8 is_stmt 0 view .LVU96
 353 001e 384A     		ldr	r2, .L41
 354 0020 384B     		ldr	r3, .L41+4
 355 0022 9842     		cmp	r0, r3
 356 0024 08BF     		it	eq
 357 0026 9542     		cmpeq	r5, r2
 358 0028 0DD0     		beq	.L26
  78:Core/Src/iceuncompr.c ****         return 1;
 359              		.loc 1 78 16 view .LVU97
 360 002a 0125     		movs	r5, #1
 361              	.LVL29:
 362              		.loc 1 78 16 view .LVU98
 363 002c 65E0     		b	.L24
 364              	.LVL30:
 365              	.L37:
  79:Core/Src/iceuncompr.c ****     }
  80:Core/Src/iceuncompr.c **** 
  81:Core/Src/iceuncompr.c ****     while (1) {
  82:Core/Src/iceuncompr.c ****         if (read_bit(ice)) {
  83:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 366              		.loc 1 83 13 is_stmt 1 view .LVU99
 367 002e 0221     		movs	r1, #2
ARM GAS  /tmp/ccRZKjEk.s 			page 9


 368 0030 2046     		mov	r0, r4
 369 0032 FFF7FEFF 		bl	read_int
 370              	.LVL31:
 371 0036 0146     		mov	r1, r0
 372 0038 2046     		mov	r0, r4
 373 003a FFF7FEFF 		bl	write_zeros
 374              	.LVL32:
  84:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 375              		.loc 1 84 13 view .LVU100
 376 003e 0121     		movs	r1, #1
 377 0040 2046     		mov	r0, r4
 378 0042 FFF7FEFF 		bl	write_bit
 379              	.LVL33:
 380              	.L26:
  81:Core/Src/iceuncompr.c ****         if (read_bit(ice)) {
 381              		.loc 1 81 5 view .LVU101
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 382              		.loc 1 82 9 view .LVU102
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 383              		.loc 1 82 13 is_stmt 0 view .LVU103
 384 0046 2046     		mov	r0, r4
 385 0048 FFF7FEFF 		bl	read_bit
 386              	.LVL34:
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 387              		.loc 1 82 12 view .LVU104
 388 004c 0028     		cmp	r0, #0
 389 004e EED1     		bne	.L37
  85:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 390              		.loc 1 85 16 is_stmt 1 view .LVU105
 391              		.loc 1 85 20 is_stmt 0 view .LVU106
 392 0050 2046     		mov	r0, r4
 393 0052 FFF7FEFF 		bl	read_bit
 394              	.LVL35:
 395              		.loc 1 85 19 view .LVU107
 396 0056 C8B9     		cbnz	r0, .L38
  86:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 5));
  87:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
  88:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 397              		.loc 1 88 16 is_stmt 1 view .LVU108
 398              		.loc 1 88 20 is_stmt 0 view .LVU109
 399 0058 2046     		mov	r0, r4
 400 005a FFF7FEFF 		bl	read_bit
 401              	.LVL36:
 402              		.loc 1 88 19 view .LVU110
 403 005e 10BB     		cbnz	r0, .L39
  89:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 8));
  90:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
  91:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 404              		.loc 1 91 16 is_stmt 1 view .LVU111
 405              		.loc 1 91 20 is_stmt 0 view .LVU112
 406 0060 2046     		mov	r0, r4
 407 0062 FFF7FEFF 		bl	read_bit
 408              	.LVL37:
 409              		.loc 1 91 19 view .LVU113
 410 0066 58BB     		cbnz	r0, .L40
  92:Core/Src/iceuncompr.c ****             int n = read_int(ice, 6);
  93:Core/Src/iceuncompr.c ****             while (n--) {
ARM GAS  /tmp/ccRZKjEk.s 			page 10


  94:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
  95:Core/Src/iceuncompr.c ****             }
  96:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
  97:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 411              		.loc 1 97 16 is_stmt 1 view .LVU114
 412              		.loc 1 97 20 is_stmt 0 view .LVU115
 413 0068 2046     		mov	r0, r4
 414 006a FFF7FEFF 		bl	read_bit
 415              	.LVL38:
 416              		.loc 1 97 19 view .LVU116
 417 006e 0546     		mov	r5, r0
 418 0070 D8B3     		cbz	r0, .L34
  98:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 23));
 419              		.loc 1 98 13 is_stmt 1 view .LVU117
 420 0072 1721     		movs	r1, #23
 421 0074 2046     		mov	r0, r4
 422 0076 FFF7FEFF 		bl	read_int
 423              	.LVL39:
 424 007a 0146     		mov	r1, r0
 425 007c 2046     		mov	r0, r4
 426 007e FFF7FEFF 		bl	write_zeros
 427              	.LVL40:
  99:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 428              		.loc 1 99 13 view .LVU118
 429 0082 0121     		movs	r1, #1
 430 0084 2046     		mov	r0, r4
 431 0086 FFF7FEFF 		bl	write_bit
 432              	.LVL41:
 433 008a DCE7     		b	.L26
 434              	.L38:
  86:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 435              		.loc 1 86 13 view .LVU119
 436 008c 0521     		movs	r1, #5
 437 008e 2046     		mov	r0, r4
 438 0090 FFF7FEFF 		bl	read_int
 439              	.LVL42:
 440 0094 0146     		mov	r1, r0
 441 0096 2046     		mov	r0, r4
 442 0098 FFF7FEFF 		bl	write_zeros
 443              	.LVL43:
  87:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 444              		.loc 1 87 13 view .LVU120
 445 009c 0121     		movs	r1, #1
 446 009e 2046     		mov	r0, r4
 447 00a0 FFF7FEFF 		bl	write_bit
 448              	.LVL44:
 449 00a4 CFE7     		b	.L26
 450              	.L39:
  89:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 451              		.loc 1 89 13 view .LVU121
 452 00a6 0821     		movs	r1, #8
 453 00a8 2046     		mov	r0, r4
 454 00aa FFF7FEFF 		bl	read_int
 455              	.LVL45:
 456 00ae 0146     		mov	r1, r0
 457 00b0 2046     		mov	r0, r4
 458 00b2 FFF7FEFF 		bl	write_zeros
ARM GAS  /tmp/ccRZKjEk.s 			page 11


 459              	.LVL46:
  90:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 460              		.loc 1 90 13 view .LVU122
 461 00b6 0121     		movs	r1, #1
 462 00b8 2046     		mov	r0, r4
 463 00ba FFF7FEFF 		bl	write_bit
 464              	.LVL47:
 465 00be C2E7     		b	.L26
 466              	.L40:
 467              	.LBB4:
  92:Core/Src/iceuncompr.c ****             while (n--) {
 468              		.loc 1 92 13 view .LVU123
  92:Core/Src/iceuncompr.c ****             while (n--) {
 469              		.loc 1 92 21 is_stmt 0 view .LVU124
 470 00c0 0621     		movs	r1, #6
 471 00c2 2046     		mov	r0, r4
 472 00c4 FFF7FEFF 		bl	read_int
 473              	.LVL48:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 474              		.loc 1 93 13 is_stmt 1 view .LVU125
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 475              		.loc 1 93 19 is_stmt 0 view .LVU126
 476 00c8 07E0     		b	.L32
 477              	.LVL49:
 478              	.L33:
  94:Core/Src/iceuncompr.c ****             }
 479              		.loc 1 94 17 is_stmt 1 view .LVU127
 480 00ca 2046     		mov	r0, r4
 481 00cc FFF7FEFF 		bl	read_bit
 482              	.LVL50:
 483 00d0 0146     		mov	r1, r0
 484 00d2 2046     		mov	r0, r4
 485 00d4 FFF7FEFF 		bl	write_bit
 486              	.LVL51:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 487              		.loc 1 93 21 is_stmt 0 view .LVU128
 488 00d8 2846     		mov	r0, r5
 489              	.LVL52:
 490              	.L32:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 491              		.loc 1 93 19 is_stmt 1 view .LVU129
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 492              		.loc 1 93 21 is_stmt 0 view .LVU130
 493 00da 451E     		subs	r5, r0, #1
 494              	.LVL53:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 495              		.loc 1 93 19 view .LVU131
 496 00dc 0028     		cmp	r0, #0
 497 00de F4D1     		bne	.L33
  96:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 498              		.loc 1 96 13 is_stmt 1 view .LVU132
 499 00e0 0121     		movs	r1, #1
 500 00e2 2046     		mov	r0, r4
 501 00e4 FFF7FEFF 		bl	write_bit
 502              	.LVL54:
 503              	.LBE4:
 504 00e8 ADE7     		b	.L26
ARM GAS  /tmp/ccRZKjEk.s 			page 12


 505              	.LVL55:
 506              	.L34:
 100:Core/Src/iceuncompr.c ****         } else {
 101:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 23));
 507              		.loc 1 101 13 view .LVU133
 508 00ea 1721     		movs	r1, #23
 509 00ec 2046     		mov	r0, r4
 510 00ee FFF7FEFF 		bl	read_int
 511              	.LVL56:
 512 00f2 0146     		mov	r1, r0
 513 00f4 2046     		mov	r0, r4
 514 00f6 FFF7FEFF 		bl	write_zeros
 515              	.LVL57:
 102:Core/Src/iceuncompr.c ****             break;
 516              		.loc 1 102 13 view .LVU134
 103:Core/Src/iceuncompr.c ****         }
 104:Core/Src/iceuncompr.c ****     }
 105:Core/Src/iceuncompr.c **** 
 106:Core/Src/iceuncompr.c ****     return 0;
 517              		.loc 1 106 5 view .LVU135
 518              	.L24:
 107:Core/Src/iceuncompr.c **** }
 519              		.loc 1 107 1 is_stmt 0 view .LVU136
 520 00fa 2846     		mov	r0, r5
 521 00fc 38BD     		pop	{r3, r4, r5, pc}
 522              	.LVL58:
 523              	.L42:
 524              		.loc 1 107 1 view .LVU137
 525 00fe 00BF     		.align	2
 526              	.L41:
 527 0100 43454349 		.word	1229145411
 528 0104 52504D4F 		.word	1330466898
 529              		.cfi_endproc
 530              	.LFE148:
 532              		.section	.rodata.WriteUncomprBitstream.str1.4,"aMS",%progbits,1
 533              		.align	2
 534              	.LC0:
 535 0000 726200   		.ascii	"rb\000"
 536              		.section	.text.WriteUncomprBitstream,"ax",%progbits
 537              		.align	1
 538              		.global	WriteUncomprBitstream
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 543              	WriteUncomprBitstream:
 544              	.LVL59:
 545              	.LFB149:
 108:Core/Src/iceuncompr.c **** 
 109:Core/Src/iceuncompr.c **** bool WriteUncomprBitstream(Iceuncompr *ice, uint8_t *input_data, uint32_t size)
 110:Core/Src/iceuncompr.c **** {
 546              		.loc 1 110 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		.loc 1 110 1 is_stmt 0 view .LVU139
 551 0000 10B5     		push	{r4, lr}
 552              	.LCFI5:
ARM GAS  /tmp/ccRZKjEk.s 			page 13


 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 4, -8
 555              		.cfi_offset 14, -4
 556 0002 0446     		mov	r4, r0
 557 0004 0846     		mov	r0, r1
 558              	.LVL60:
 559              		.loc 1 110 1 view .LVU140
 560 0006 1146     		mov	r1, r2
 561              	.LVL61:
 111:Core/Src/iceuncompr.c ****     // Create a filehandle to work with for bitstream decompression.
 112:Core/Src/iceuncompr.c ****     ice->input_data_fh = fmemopen(input_data, size, "rb");
 562              		.loc 1 112 5 is_stmt 1 view .LVU141
 563              		.loc 1 112 26 is_stmt 0 view .LVU142
 564 0008 054A     		ldr	r2, .L47
 565              	.LVL62:
 566              		.loc 1 112 26 view .LVU143
 567 000a FFF7FEFF 		bl	fmemopen
 568              	.LVL63:
 569              		.loc 1 112 24 view .LVU144
 570 000e 2060     		str	r0, [r4]
 113:Core/Src/iceuncompr.c ****     // Flush the contents of the buffer
 114:Core/Src/iceuncompr.c ****     if(!ice->input_data_fh)
 571              		.loc 1 114 5 is_stmt 1 view .LVU145
 572              		.loc 1 114 7 is_stmt 0 view .LVU146
 573 0010 20B1     		cbz	r0, .L45
 115:Core/Src/iceuncompr.c ****         return false;
 116:Core/Src/iceuncompr.c ****     
 117:Core/Src/iceuncompr.c ****     ice_uncompress(ice);
 574              		.loc 1 117 5 is_stmt 1 view .LVU147
 575 0012 2046     		mov	r0, r4
 576 0014 FFF7FEFF 		bl	ice_uncompress
 577              	.LVL64:
 118:Core/Src/iceuncompr.c **** 
 119:Core/Src/iceuncompr.c ****     return true;
 578              		.loc 1 119 5 view .LVU148
 579              		.loc 1 119 12 is_stmt 0 view .LVU149
 580 0018 0120     		movs	r0, #1
 581              	.L44:
 120:Core/Src/iceuncompr.c **** }
 582              		.loc 1 120 1 view .LVU150
 583 001a 10BD     		pop	{r4, pc}
 584              	.LVL65:
 585              	.L45:
 115:Core/Src/iceuncompr.c ****         return false;
 586              		.loc 1 115 16 view .LVU151
 587 001c 0020     		movs	r0, #0
 588 001e FCE7     		b	.L44
 589              	.L48:
 590              		.align	2
 591              	.L47:
 592 0020 00000000 		.word	.LC0
 593              		.cfi_endproc
 594              	.LFE149:
 596              		.text
 597              	.Letext0:
 598              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 599              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccRZKjEk.s 			page 14


 600              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 601              		.file 5 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_types.h"
 602              		.file 6 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/reent.h"
 603              		.file 7 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/lock.h"
 604              		.file 8 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 605              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 606              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 607              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 608              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 609              		.file 13 "Core/Inc/iceuncompr.h"
 610              		.file 14 "Core/Inc/spi.h"
ARM GAS  /tmp/ccRZKjEk.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 iceuncompr.c
     /tmp/ccRZKjEk.s:20     .text.read_bit:0000000000000000 $t
     /tmp/ccRZKjEk.s:26     .text.read_bit:0000000000000000 read_bit
     /tmp/ccRZKjEk.s:97     .text.write_bit:0000000000000000 $t
     /tmp/ccRZKjEk.s:103    .text.write_bit:0000000000000000 write_bit
     /tmp/ccRZKjEk.s:167    .text.write_bit:0000000000000034 $d
     /tmp/ccRZKjEk.s:172    .text.read_int:0000000000000000 $t
     /tmp/ccRZKjEk.s:178    .text.read_int:0000000000000000 read_int
     /tmp/ccRZKjEk.s:252    .text.write_zeros:0000000000000000 $t
     /tmp/ccRZKjEk.s:258    .text.write_zeros:0000000000000000 write_zeros
     /tmp/ccRZKjEk.s:302    .text.ice_uncompress:0000000000000000 $t
     /tmp/ccRZKjEk.s:308    .text.ice_uncompress:0000000000000000 ice_uncompress
     /tmp/ccRZKjEk.s:527    .text.ice_uncompress:0000000000000100 $d
     /tmp/ccRZKjEk.s:533    .rodata.WriteUncomprBitstream.str1.4:0000000000000000 $d
     /tmp/ccRZKjEk.s:537    .text.WriteUncomprBitstream:0000000000000000 $t
     /tmp/ccRZKjEk.s:543    .text.WriteUncomprBitstream:0000000000000000 WriteUncomprBitstream
     /tmp/ccRZKjEk.s:592    .text.WriteUncomprBitstream:0000000000000020 $d

UNDEFINED SYMBOLS
fgetc
HAL_SPI_Transmit
hspi4
fmemopen
