ARM GAS  /tmp/ccW6Up5O.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"iceuncompr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/iceuncompr.c"
  20              		.section	.text.read_bit,"ax",%progbits
  21              		.align	1
  22              		.global	read_bit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	read_bit:
  28              	.LVL0:
  29              	.LFB144:
   1:Core/Src/iceuncompr.c **** /**
   2:Core/Src/iceuncompr.c ****  * @file iceuncompr.c
   3:Core/Src/iceuncompr.c ****  * @brief Implementation file for ICE decompression utility.
   4:Core/Src/iceuncompr.c ****  *
   5:Core/Src/iceuncompr.c ****  * This file contains the implementation of functions required for the ICE decompression utility.
   6:Core/Src/iceuncompr.c ****  */
   7:Core/Src/iceuncompr.c **** #include "iceuncompr.h"
   8:Core/Src/iceuncompr.c **** 
   9:Core/Src/iceuncompr.c **** // Function to read a bit from the input stream
  10:Core/Src/iceuncompr.c **** int read_bit(Iceuncompr *ice) {
  30              		.loc 1 10 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 10 31 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
  11:Core/Src/iceuncompr.c ****     if (ice->read_bitcounter == 0) {
  40              		.loc 1 11 5 is_stmt 1 view .LVU2
  41              		.loc 1 11 12 is_stmt 0 view .LVU3
  42 0004 C368     		ldr	r3, [r0, #12]
  43              		.loc 1 11 8 view .LVU4
  44 0006 4BB9     		cbnz	r3, .L2
  12:Core/Src/iceuncompr.c ****         ice->read_bitcounter = 8;
  45              		.loc 1 12 9 is_stmt 1 view .LVU5
  46              		.loc 1 12 30 is_stmt 0 view .LVU6
ARM GAS  /tmp/ccW6Up5O.s 			page 2


  47 0008 0823     		movs	r3, #8
  48 000a C360     		str	r3, [r0, #12]
  13:Core/Src/iceuncompr.c ****         if (ice->input_data_fh != NULL) {
  49              		.loc 1 13 9 is_stmt 1 view .LVU7
  50              		.loc 1 13 16 is_stmt 0 view .LVU8
  51 000c 0068     		ldr	r0, [r0]
  52              	.LVL1:
  53              		.loc 1 13 12 view .LVU9
  54 000e 68B1     		cbz	r0, .L4
  55              	.LBB2:
  14:Core/Src/iceuncompr.c ****             int ch = fgetc(ice->input_data_fh);
  56              		.loc 1 14 13 is_stmt 1 view .LVU10
  57              		.loc 1 14 22 is_stmt 0 view .LVU11
  58 0010 FFF7FEFF 		bl	fgetc
  59              	.LVL2:
  15:Core/Src/iceuncompr.c ****             if (ch != EOF) {
  60              		.loc 1 15 13 is_stmt 1 view .LVU12
  61              		.loc 1 15 16 is_stmt 0 view .LVU13
  62 0014 B0F1FF3F 		cmp	r0, #-1
  63 0018 07D0     		beq	.L1
  16:Core/Src/iceuncompr.c ****                 ice->read_buffer = ch;
  64              		.loc 1 16 17 is_stmt 1 view .LVU14
  65              		.loc 1 16 34 is_stmt 0 view .LVU15
  66 001a 2061     		str	r0, [r4, #16]
  67              	.LVL3:
  68              	.L2:
  69              		.loc 1 16 34 view .LVU16
  70              	.LBE2:
  17:Core/Src/iceuncompr.c ****             } else {
  18:Core/Src/iceuncompr.c ****                 // Handle end of file or error
  19:Core/Src/iceuncompr.c ****                 return EOF;
  20:Core/Src/iceuncompr.c ****             }
  21:Core/Src/iceuncompr.c ****         } else {
  22:Core/Src/iceuncompr.c ****             // Handle error if file handle is NULL
  23:Core/Src/iceuncompr.c ****             return EOF;
  24:Core/Src/iceuncompr.c ****         }
  25:Core/Src/iceuncompr.c ****     }
  26:Core/Src/iceuncompr.c **** 
  27:Core/Src/iceuncompr.c ****     ice->read_bitcounter--;
  71              		.loc 1 27 5 is_stmt 1 view .LVU17
  72              		.loc 1 27 8 is_stmt 0 view .LVU18
  73 001c E368     		ldr	r3, [r4, #12]
  74              		.loc 1 27 25 view .LVU19
  75 001e 013B     		subs	r3, r3, #1
  76 0020 E360     		str	r3, [r4, #12]
  28:Core/Src/iceuncompr.c ****     return (ice->read_buffer >> ice->read_bitcounter) & 1;
  77              		.loc 1 28 5 is_stmt 1 view .LVU20
  78              		.loc 1 28 16 is_stmt 0 view .LVU21
  79 0022 2069     		ldr	r0, [r4, #16]
  80              		.loc 1 28 30 view .LVU22
  81 0024 D840     		lsrs	r0, r0, r3
  82              		.loc 1 28 55 view .LVU23
  83 0026 00F00100 		and	r0, r0, #1
  84              	.L1:
  29:Core/Src/iceuncompr.c **** }
  85              		.loc 1 29 1 view .LVU24
  86 002a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccW6Up5O.s 			page 3


  87              	.LVL4:
  88              	.L4:
  23:Core/Src/iceuncompr.c ****         }
  89              		.loc 1 23 20 view .LVU25
  90 002c 4FF0FF30 		mov	r0, #-1
  91 0030 FBE7     		b	.L1
  92              		.cfi_endproc
  93              	.LFE144:
  95              		.section	.text.write_bit,"ax",%progbits
  96              		.align	1
  97              		.global	write_bit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	write_bit:
 103              	.LVL5:
 104              	.LFB145:
  30:Core/Src/iceuncompr.c **** 
  31:Core/Src/iceuncompr.c **** // Function to write a bit to the output buffer
  32:Core/Src/iceuncompr.c **** void write_bit(Iceuncompr *ice, int value) {
 105              		.loc 1 32 44 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 32 44 is_stmt 0 view .LVU27
 110 0000 10B5     		push	{r4, lr}
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 114 0002 0446     		mov	r4, r0
  33:Core/Src/iceuncompr.c ****     ice->write_bitcounter--;
 115              		.loc 1 33 5 is_stmt 1 view .LVU28
 116              		.loc 1 33 8 is_stmt 0 view .LVU29
 117 0004 4369     		ldr	r3, [r0, #20]
 118              		.loc 1 33 26 view .LVU30
 119 0006 013B     		subs	r3, r3, #1
 120 0008 4361     		str	r3, [r0, #20]
  34:Core/Src/iceuncompr.c **** 
  35:Core/Src/iceuncompr.c ****     if (value)
 121              		.loc 1 35 5 is_stmt 1 view .LVU31
 122              		.loc 1 35 8 is_stmt 0 view .LVU32
 123 000a 21B1     		cbz	r1, .L7
  36:Core/Src/iceuncompr.c ****         ice->write_buffer |= 1 << ice->write_bitcounter;
 124              		.loc 1 36 9 is_stmt 1 view .LVU33
 125              		.loc 1 36 12 is_stmt 0 view .LVU34
 126 000c 027E     		ldrb	r2, [r0, #24]	@ zero_extendqisi2
 127              		.loc 1 36 32 view .LVU35
 128 000e 0121     		movs	r1, #1
 129              	.LVL6:
 130              		.loc 1 36 32 view .LVU36
 131 0010 9940     		lsls	r1, r1, r3
 132              		.loc 1 36 27 view .LVU37
 133 0012 0A43     		orrs	r2, r2, r1
 134 0014 0276     		strb	r2, [r0, #24]
 135              	.L7:
  37:Core/Src/iceuncompr.c **** 
  38:Core/Src/iceuncompr.c ****     if (ice->write_bitcounter == 0) {
ARM GAS  /tmp/ccW6Up5O.s 			page 4


 136              		.loc 1 38 5 is_stmt 1 view .LVU38
 137              		.loc 1 38 8 is_stmt 0 view .LVU39
 138 0016 03B1     		cbz	r3, .L10
 139              	.LVL7:
 140              	.L6:
  39:Core/Src/iceuncompr.c ****         // Write the byte to the SPI channel
  40:Core/Src/iceuncompr.c ****         HAL_SPI_Transmit(&hspi4, (uint8_t*)&ice->write_buffer, 1, 100);
  41:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
  42:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
  43:Core/Src/iceuncompr.c ****     }
  44:Core/Src/iceuncompr.c **** }
 141              		.loc 1 44 1 view .LVU40
 142 0018 10BD     		pop	{r4, pc}
 143              	.LVL8:
 144              	.L10:
  40:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
 145              		.loc 1 40 9 is_stmt 1 view .LVU41
 146 001a 6423     		movs	r3, #100
 147 001c 0122     		movs	r2, #1
 148 001e 04F11801 		add	r1, r4, #24
 149 0022 0448     		ldr	r0, .L11
 150              	.LVL9:
  40:Core/Src/iceuncompr.c ****         ice->write_bitcounter = 8;
 151              		.loc 1 40 9 is_stmt 0 view .LVU42
 152 0024 FFF7FEFF 		bl	HAL_SPI_Transmit
 153              	.LVL10:
  41:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
 154              		.loc 1 41 9 is_stmt 1 view .LVU43
  41:Core/Src/iceuncompr.c ****         ice->write_buffer = 0;
 155              		.loc 1 41 31 is_stmt 0 view .LVU44
 156 0028 0823     		movs	r3, #8
 157 002a 6361     		str	r3, [r4, #20]
  42:Core/Src/iceuncompr.c ****     }
 158              		.loc 1 42 9 is_stmt 1 view .LVU45
  42:Core/Src/iceuncompr.c ****     }
 159              		.loc 1 42 27 is_stmt 0 view .LVU46
 160 002c 0023     		movs	r3, #0
 161 002e 2376     		strb	r3, [r4, #24]
 162              		.loc 1 44 1 view .LVU47
 163 0030 F2E7     		b	.L6
 164              	.L12:
 165 0032 00BF     		.align	2
 166              	.L11:
 167 0034 00000000 		.word	hspi4
 168              		.cfi_endproc
 169              	.LFE145:
 171              		.section	.text.read_int,"ax",%progbits
 172              		.align	1
 173              		.global	read_int
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	read_int:
 179              	.LVL11:
 180              	.LFB146:
  45:Core/Src/iceuncompr.c **** 
  46:Core/Src/iceuncompr.c **** // Function to read an integer from the input stream
ARM GAS  /tmp/ccW6Up5O.s 			page 5


  47:Core/Src/iceuncompr.c **** int read_int(Iceuncompr *ice, int bits) {
 181              		.loc 1 47 41 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		.loc 1 47 41 is_stmt 0 view .LVU49
 186 0000 70B5     		push	{r4, r5, r6, lr}
 187              		.cfi_def_cfa_offset 16
 188              		.cfi_offset 4, -16
 189              		.cfi_offset 5, -12
 190              		.cfi_offset 6, -8
 191              		.cfi_offset 14, -4
 192 0002 0546     		mov	r5, r0
  48:Core/Src/iceuncompr.c ****     int ret = 0;
 193              		.loc 1 48 5 is_stmt 1 view .LVU50
 194              	.LVL12:
  49:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 195              		.loc 1 49 5 view .LVU51
  48:Core/Src/iceuncompr.c ****     int ret = 0;
 196              		.loc 1 48 9 is_stmt 0 view .LVU52
 197 0004 0026     		movs	r6, #0
 198              		.loc 1 49 11 view .LVU53
 199 0006 00E0     		b	.L14
 200              	.LVL13:
 201              	.L16:
  47:Core/Src/iceuncompr.c ****     int ret = 0;
 202              		.loc 1 47 41 view .LVU54
 203 0008 2146     		mov	r1, r4
 204              	.LVL14:
 205              	.L14:
 206              		.loc 1 49 19 is_stmt 1 view .LVU55
 207              		.loc 1 49 16 is_stmt 0 view .LVU56
 208 000a 4C1E     		subs	r4, r1, #1
 209              	.LVL15:
 210              		.loc 1 49 19 view .LVU57
 211 000c 0029     		cmp	r1, #0
 212 000e 0CDD     		ble	.L13
 213              	.LBB3:
  50:Core/Src/iceuncompr.c ****         int bit = read_bit(ice);
 214              		.loc 1 50 9 is_stmt 1 view .LVU58
 215              		.loc 1 50 19 is_stmt 0 view .LVU59
 216 0010 2846     		mov	r0, r5
 217 0012 FFF7FEFF 		bl	read_bit
 218              	.LVL16:
  51:Core/Src/iceuncompr.c ****         if (bit == EOF) {
 219              		.loc 1 51 9 is_stmt 1 view .LVU60
 220              		.loc 1 51 12 is_stmt 0 view .LVU61
 221 0016 B0F1FF3F 		cmp	r0, #-1
 222 001a 05D0     		beq	.L18
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
  53:Core/Src/iceuncompr.c ****         }
  54:Core/Src/iceuncompr.c ****         if (bit) {
 223              		.loc 1 54 9 is_stmt 1 view .LVU62
 224              		.loc 1 54 12 is_stmt 0 view .LVU63
 225 001c 0028     		cmp	r0, #0
 226 001e F3D0     		beq	.L16
  55:Core/Src/iceuncompr.c ****             ret |= 1 << bits;
ARM GAS  /tmp/ccW6Up5O.s 			page 6


 227              		.loc 1 55 13 is_stmt 1 view .LVU64
 228              		.loc 1 55 22 is_stmt 0 view .LVU65
 229 0020 0123     		movs	r3, #1
 230 0022 A340     		lsls	r3, r3, r4
 231              		.loc 1 55 17 view .LVU66
 232 0024 1E43     		orrs	r6, r6, r3
 233              	.LVL17:
 234              		.loc 1 55 17 view .LVU67
 235 0026 EFE7     		b	.L16
 236              	.L18:
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
 237              		.loc 1 52 20 view .LVU68
 238 0028 0646     		mov	r6, r0
 239              	.LVL18:
 240              	.L13:
  52:Core/Src/iceuncompr.c ****             return EOF;  // Handle EOF or error
 241              		.loc 1 52 20 view .LVU69
 242              	.LBE3:
  56:Core/Src/iceuncompr.c ****         }
  57:Core/Src/iceuncompr.c ****     }
  58:Core/Src/iceuncompr.c ****     return ret;
  59:Core/Src/iceuncompr.c **** }
 243              		.loc 1 59 1 view .LVU70
 244 002a 3046     		mov	r0, r6
 245 002c 70BD     		pop	{r4, r5, r6, pc}
 246              		.loc 1 59 1 view .LVU71
 247              		.cfi_endproc
 248              	.LFE146:
 250              		.section	.text.write_zeros,"ax",%progbits
 251              		.align	1
 252              		.global	write_zeros
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	write_zeros:
 258              	.LVL19:
 259              	.LFB147:
  60:Core/Src/iceuncompr.c **** 
  61:Core/Src/iceuncompr.c **** // Function to write zeros to the output buffer
  62:Core/Src/iceuncompr.c **** void write_zeros(Iceuncompr *ice, int bits) {
 260              		.loc 1 62 45 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 62 45 is_stmt 0 view .LVU73
 265 0000 38B5     		push	{r3, r4, r5, lr}
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 3, -16
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 271 0002 0546     		mov	r5, r0
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 272              		.loc 1 63 5 is_stmt 1 view .LVU74
 273              		.loc 1 63 11 is_stmt 0 view .LVU75
 274 0004 04E0     		b	.L21
 275              	.LVL20:
ARM GAS  /tmp/ccW6Up5O.s 			page 7


 276              	.L22:
  64:Core/Src/iceuncompr.c ****         write_bit(ice, 0);
 277              		.loc 1 64 9 is_stmt 1 view .LVU76
 278 0006 0021     		movs	r1, #0
 279 0008 2846     		mov	r0, r5
 280 000a FFF7FEFF 		bl	write_bit
 281              	.LVL21:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 282              		.loc 1 63 16 is_stmt 0 view .LVU77
 283 000e 2146     		mov	r1, r4
 284              	.LVL22:
 285              	.L21:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 286              		.loc 1 63 19 is_stmt 1 view .LVU78
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 287              		.loc 1 63 16 is_stmt 0 view .LVU79
 288 0010 4C1E     		subs	r4, r1, #1
 289              	.LVL23:
  63:Core/Src/iceuncompr.c ****     while (bits-- > 0) {
 290              		.loc 1 63 19 view .LVU80
 291 0012 0029     		cmp	r1, #0
 292 0014 F7DC     		bgt	.L22
  65:Core/Src/iceuncompr.c ****     }
  66:Core/Src/iceuncompr.c **** }
 293              		.loc 1 66 1 view .LVU81
 294 0016 38BD     		pop	{r3, r4, r5, pc}
 295              		.loc 1 66 1 view .LVU82
 296              		.cfi_endproc
 297              	.LFE147:
 299              		.section	.text.ice_uncompress,"ax",%progbits
 300              		.align	1
 301              		.global	ice_uncompress
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	ice_uncompress:
 307              	.LVL24:
 308              	.LFB148:
  67:Core/Src/iceuncompr.c **** 
  68:Core/Src/iceuncompr.c **** // Main decompression function
  69:Core/Src/iceuncompr.c **** int ice_uncompress(Iceuncompr *ice) {
 309              		.loc 1 69 37 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		.loc 1 69 37 is_stmt 0 view .LVU84
 314 0000 38B5     		push	{r3, r4, r5, lr}
 315              		.cfi_def_cfa_offset 16
 316              		.cfi_offset 3, -16
 317              		.cfi_offset 4, -12
 318              		.cfi_offset 5, -8
 319              		.cfi_offset 14, -4
 320 0002 0446     		mov	r4, r0
  70:Core/Src/iceuncompr.c ****     ice->read_bitcounter = 0;
 321              		.loc 1 70 5 is_stmt 1 view .LVU85
 322              		.loc 1 70 26 is_stmt 0 view .LVU86
 323 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccW6Up5O.s 			page 8


 324 0006 C360     		str	r3, [r0, #12]
  71:Core/Src/iceuncompr.c ****     ice->write_bitcounter = 8;
 325              		.loc 1 71 5 is_stmt 1 view .LVU87
 326              		.loc 1 71 27 is_stmt 0 view .LVU88
 327 0008 0822     		movs	r2, #8
 328 000a 4261     		str	r2, [r0, #20]
  72:Core/Src/iceuncompr.c ****     ice->write_buffer = 0;
 329              		.loc 1 72 5 is_stmt 1 view .LVU89
 330              		.loc 1 72 23 is_stmt 0 view .LVU90
 331 000c 0376     		strb	r3, [r0, #24]
  73:Core/Src/iceuncompr.c **** 
  74:Core/Src/iceuncompr.c ****     int magic1_ok = read_int(ice, 32) == 0x49434543;
 332              		.loc 1 74 5 is_stmt 1 view .LVU91
 333              		.loc 1 74 21 is_stmt 0 view .LVU92
 334 000e 2021     		movs	r1, #32
 335 0010 FFF7FEFF 		bl	read_int
 336              	.LVL25:
 337              		.loc 1 74 21 view .LVU93
 338 0014 0546     		mov	r5, r0
 339              	.LVL26:
  75:Core/Src/iceuncompr.c ****     int magic2_ok = read_int(ice, 32) == 0x4f4d5052;
 340              		.loc 1 75 5 is_stmt 1 view .LVU94
 341              		.loc 1 75 21 is_stmt 0 view .LVU95
 342 0016 2021     		movs	r1, #32
 343 0018 2046     		mov	r0, r4
 344              	.LVL27:
 345              		.loc 1 75 21 view .LVU96
 346 001a FFF7FEFF 		bl	read_int
 347              	.LVL28:
  76:Core/Src/iceuncompr.c **** 
  77:Core/Src/iceuncompr.c ****     if (!magic1_ok || !magic2_ok) {
 348              		.loc 1 77 5 is_stmt 1 view .LVU97
 349              		.loc 1 77 8 is_stmt 0 view .LVU98
 350 001e 384A     		ldr	r2, .L41
 351 0020 384B     		ldr	r3, .L41+4
 352 0022 9842     		cmp	r0, r3
 353 0024 08BF     		it	eq
 354 0026 9542     		cmpeq	r5, r2
 355 0028 0DD0     		beq	.L26
  78:Core/Src/iceuncompr.c ****         return 1;
 356              		.loc 1 78 16 view .LVU99
 357 002a 0125     		movs	r5, #1
 358              	.LVL29:
 359              		.loc 1 78 16 view .LVU100
 360 002c 65E0     		b	.L24
 361              	.LVL30:
 362              	.L37:
  79:Core/Src/iceuncompr.c ****     }
  80:Core/Src/iceuncompr.c **** 
  81:Core/Src/iceuncompr.c ****     while (1) {
  82:Core/Src/iceuncompr.c ****         if (read_bit(ice)) {
  83:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 363              		.loc 1 83 13 is_stmt 1 view .LVU101
 364 002e 0221     		movs	r1, #2
 365 0030 2046     		mov	r0, r4
 366 0032 FFF7FEFF 		bl	read_int
 367              	.LVL31:
ARM GAS  /tmp/ccW6Up5O.s 			page 9


 368 0036 0146     		mov	r1, r0
 369 0038 2046     		mov	r0, r4
 370 003a FFF7FEFF 		bl	write_zeros
 371              	.LVL32:
  84:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 372              		.loc 1 84 13 view .LVU102
 373 003e 0121     		movs	r1, #1
 374 0040 2046     		mov	r0, r4
 375 0042 FFF7FEFF 		bl	write_bit
 376              	.LVL33:
 377              	.L26:
  81:Core/Src/iceuncompr.c ****         if (read_bit(ice)) {
 378              		.loc 1 81 5 view .LVU103
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 379              		.loc 1 82 9 view .LVU104
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 380              		.loc 1 82 13 is_stmt 0 view .LVU105
 381 0046 2046     		mov	r0, r4
 382 0048 FFF7FEFF 		bl	read_bit
 383              	.LVL34:
  82:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 2));
 384              		.loc 1 82 12 view .LVU106
 385 004c 0028     		cmp	r0, #0
 386 004e EED1     		bne	.L37
  85:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 387              		.loc 1 85 16 is_stmt 1 view .LVU107
 388              		.loc 1 85 20 is_stmt 0 view .LVU108
 389 0050 2046     		mov	r0, r4
 390 0052 FFF7FEFF 		bl	read_bit
 391              	.LVL35:
 392              		.loc 1 85 19 view .LVU109
 393 0056 C8B9     		cbnz	r0, .L38
  86:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 5));
  87:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
  88:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 394              		.loc 1 88 16 is_stmt 1 view .LVU110
 395              		.loc 1 88 20 is_stmt 0 view .LVU111
 396 0058 2046     		mov	r0, r4
 397 005a FFF7FEFF 		bl	read_bit
 398              	.LVL36:
 399              		.loc 1 88 19 view .LVU112
 400 005e 10BB     		cbnz	r0, .L39
  89:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 8));
  90:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
  91:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 401              		.loc 1 91 16 is_stmt 1 view .LVU113
 402              		.loc 1 91 20 is_stmt 0 view .LVU114
 403 0060 2046     		mov	r0, r4
 404 0062 FFF7FEFF 		bl	read_bit
 405              	.LVL37:
 406              		.loc 1 91 19 view .LVU115
 407 0066 58BB     		cbnz	r0, .L40
  92:Core/Src/iceuncompr.c ****             int n = read_int(ice, 6);
  93:Core/Src/iceuncompr.c ****             while (n--) {
  94:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
  95:Core/Src/iceuncompr.c ****             }
  96:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
ARM GAS  /tmp/ccW6Up5O.s 			page 10


  97:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 408              		.loc 1 97 16 is_stmt 1 view .LVU116
 409              		.loc 1 97 20 is_stmt 0 view .LVU117
 410 0068 2046     		mov	r0, r4
 411 006a FFF7FEFF 		bl	read_bit
 412              	.LVL38:
 413              		.loc 1 97 19 view .LVU118
 414 006e 0546     		mov	r5, r0
 415 0070 D8B3     		cbz	r0, .L34
  98:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 23));
 416              		.loc 1 98 13 is_stmt 1 view .LVU119
 417 0072 1721     		movs	r1, #23
 418 0074 2046     		mov	r0, r4
 419 0076 FFF7FEFF 		bl	read_int
 420              	.LVL39:
 421 007a 0146     		mov	r1, r0
 422 007c 2046     		mov	r0, r4
 423 007e FFF7FEFF 		bl	write_zeros
 424              	.LVL40:
  99:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 425              		.loc 1 99 13 view .LVU120
 426 0082 0121     		movs	r1, #1
 427 0084 2046     		mov	r0, r4
 428 0086 FFF7FEFF 		bl	write_bit
 429              	.LVL41:
 430 008a DCE7     		b	.L26
 431              	.L38:
  86:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 432              		.loc 1 86 13 view .LVU121
 433 008c 0521     		movs	r1, #5
 434 008e 2046     		mov	r0, r4
 435 0090 FFF7FEFF 		bl	read_int
 436              	.LVL42:
 437 0094 0146     		mov	r1, r0
 438 0096 2046     		mov	r0, r4
 439 0098 FFF7FEFF 		bl	write_zeros
 440              	.LVL43:
  87:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 441              		.loc 1 87 13 view .LVU122
 442 009c 0121     		movs	r1, #1
 443 009e 2046     		mov	r0, r4
 444 00a0 FFF7FEFF 		bl	write_bit
 445              	.LVL44:
 446 00a4 CFE7     		b	.L26
 447              	.L39:
  89:Core/Src/iceuncompr.c ****             write_bit(ice, 1);
 448              		.loc 1 89 13 view .LVU123
 449 00a6 0821     		movs	r1, #8
 450 00a8 2046     		mov	r0, r4
 451 00aa FFF7FEFF 		bl	read_int
 452              	.LVL45:
 453 00ae 0146     		mov	r1, r0
 454 00b0 2046     		mov	r0, r4
 455 00b2 FFF7FEFF 		bl	write_zeros
 456              	.LVL46:
  90:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 457              		.loc 1 90 13 view .LVU124
ARM GAS  /tmp/ccW6Up5O.s 			page 11


 458 00b6 0121     		movs	r1, #1
 459 00b8 2046     		mov	r0, r4
 460 00ba FFF7FEFF 		bl	write_bit
 461              	.LVL47:
 462 00be C2E7     		b	.L26
 463              	.L40:
 464              	.LBB4:
  92:Core/Src/iceuncompr.c ****             while (n--) {
 465              		.loc 1 92 13 view .LVU125
  92:Core/Src/iceuncompr.c ****             while (n--) {
 466              		.loc 1 92 21 is_stmt 0 view .LVU126
 467 00c0 0621     		movs	r1, #6
 468 00c2 2046     		mov	r0, r4
 469 00c4 FFF7FEFF 		bl	read_int
 470              	.LVL48:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 471              		.loc 1 93 13 is_stmt 1 view .LVU127
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 472              		.loc 1 93 19 is_stmt 0 view .LVU128
 473 00c8 07E0     		b	.L32
 474              	.LVL49:
 475              	.L33:
  94:Core/Src/iceuncompr.c ****             }
 476              		.loc 1 94 17 is_stmt 1 view .LVU129
 477 00ca 2046     		mov	r0, r4
 478 00cc FFF7FEFF 		bl	read_bit
 479              	.LVL50:
 480 00d0 0146     		mov	r1, r0
 481 00d2 2046     		mov	r0, r4
 482 00d4 FFF7FEFF 		bl	write_bit
 483              	.LVL51:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 484              		.loc 1 93 21 is_stmt 0 view .LVU130
 485 00d8 2846     		mov	r0, r5
 486              	.LVL52:
 487              	.L32:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 488              		.loc 1 93 20 is_stmt 1 view .LVU131
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 489              		.loc 1 93 21 is_stmt 0 view .LVU132
 490 00da 451E     		subs	r5, r0, #1
 491              	.LVL53:
  93:Core/Src/iceuncompr.c ****                 write_bit(ice, read_bit(ice));
 492              		.loc 1 93 20 view .LVU133
 493 00dc 0028     		cmp	r0, #0
 494 00de F4D1     		bne	.L33
  96:Core/Src/iceuncompr.c ****         } else if (read_bit(ice)) {
 495              		.loc 1 96 13 is_stmt 1 view .LVU134
 496 00e0 0121     		movs	r1, #1
 497 00e2 2046     		mov	r0, r4
 498 00e4 FFF7FEFF 		bl	write_bit
 499              	.LVL54:
 500              	.LBE4:
 501 00e8 ADE7     		b	.L26
 502              	.LVL55:
 503              	.L34:
 100:Core/Src/iceuncompr.c ****         } else {
ARM GAS  /tmp/ccW6Up5O.s 			page 12


 101:Core/Src/iceuncompr.c ****             write_zeros(ice, read_int(ice, 23));
 504              		.loc 1 101 13 view .LVU135
 505 00ea 1721     		movs	r1, #23
 506 00ec 2046     		mov	r0, r4
 507 00ee FFF7FEFF 		bl	read_int
 508              	.LVL56:
 509 00f2 0146     		mov	r1, r0
 510 00f4 2046     		mov	r0, r4
 511 00f6 FFF7FEFF 		bl	write_zeros
 512              	.LVL57:
 102:Core/Src/iceuncompr.c ****             break;
 513              		.loc 1 102 13 view .LVU136
 103:Core/Src/iceuncompr.c ****         }
 104:Core/Src/iceuncompr.c ****     }
 105:Core/Src/iceuncompr.c **** 
 106:Core/Src/iceuncompr.c ****     return 0;
 514              		.loc 1 106 5 view .LVU137
 515              	.L24:
 107:Core/Src/iceuncompr.c **** }
 516              		.loc 1 107 1 is_stmt 0 view .LVU138
 517 00fa 2846     		mov	r0, r5
 518 00fc 38BD     		pop	{r3, r4, r5, pc}
 519              	.LVL58:
 520              	.L42:
 521              		.loc 1 107 1 view .LVU139
 522 00fe 00BF     		.align	2
 523              	.L41:
 524 0100 43454349 		.word	1229145411
 525 0104 52504D4F 		.word	1330466898
 526              		.cfi_endproc
 527              	.LFE148:
 529              		.section	.rodata.WriteUncomprBitstream.str1.4,"aMS",%progbits,1
 530              		.align	2
 531              	.LC0:
 532 0000 726200   		.ascii	"rb\000"
 533              		.section	.text.WriteUncomprBitstream,"ax",%progbits
 534              		.align	1
 535              		.global	WriteUncomprBitstream
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	WriteUncomprBitstream:
 541              	.LVL59:
 542              	.LFB149:
 108:Core/Src/iceuncompr.c **** 
 109:Core/Src/iceuncompr.c **** bool WriteUncomprBitstream(Iceuncompr *ice, uint8_t *input_data, uint32_t size)
 110:Core/Src/iceuncompr.c **** {
 543              		.loc 1 110 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		.loc 1 110 1 is_stmt 0 view .LVU141
 548 0000 10B5     		push	{r4, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccW6Up5O.s 			page 13


 553 0004 0846     		mov	r0, r1
 554              	.LVL60:
 555              		.loc 1 110 1 view .LVU142
 556 0006 1146     		mov	r1, r2
 557              	.LVL61:
 111:Core/Src/iceuncompr.c ****     // Create a filehandle to work with for bitstream decompression.
 112:Core/Src/iceuncompr.c ****     ice->input_data_fh = fmemopen(input_data, size, "rb");
 558              		.loc 1 112 5 is_stmt 1 view .LVU143
 559              		.loc 1 112 26 is_stmt 0 view .LVU144
 560 0008 054A     		ldr	r2, .L47
 561              	.LVL62:
 562              		.loc 1 112 26 view .LVU145
 563 000a FFF7FEFF 		bl	fmemopen
 564              	.LVL63:
 565              		.loc 1 112 24 view .LVU146
 566 000e 2060     		str	r0, [r4]
 113:Core/Src/iceuncompr.c ****     // Flush the contents of the buffer
 114:Core/Src/iceuncompr.c ****     if(!ice->input_data_fh)
 567              		.loc 1 114 5 is_stmt 1 view .LVU147
 568              		.loc 1 114 7 is_stmt 0 view .LVU148
 569 0010 20B1     		cbz	r0, .L45
 115:Core/Src/iceuncompr.c ****         return false;
 116:Core/Src/iceuncompr.c ****     
 117:Core/Src/iceuncompr.c ****     ice_uncompress(ice);
 570              		.loc 1 117 5 is_stmt 1 view .LVU149
 571 0012 2046     		mov	r0, r4
 572 0014 FFF7FEFF 		bl	ice_uncompress
 573              	.LVL64:
 118:Core/Src/iceuncompr.c **** 
 119:Core/Src/iceuncompr.c ****     return true;
 574              		.loc 1 119 5 view .LVU150
 575              		.loc 1 119 12 is_stmt 0 view .LVU151
 576 0018 0120     		movs	r0, #1
 577              	.L44:
 120:Core/Src/iceuncompr.c **** }
 578              		.loc 1 120 1 view .LVU152
 579 001a 10BD     		pop	{r4, pc}
 580              	.LVL65:
 581              	.L45:
 115:Core/Src/iceuncompr.c ****         return false;
 582              		.loc 1 115 16 view .LVU153
 583 001c 0020     		movs	r0, #0
 584 001e FCE7     		b	.L44
 585              	.L48:
 586              		.align	2
 587              	.L47:
 588 0020 00000000 		.word	.LC0
 589              		.cfi_endproc
 590              	.LFE149:
 592              		.text
 593              	.Letext0:
 594              		.file 2 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 595              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 596              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 597              		.file 5 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 598              		.file 6 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 599              		.file 7 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
ARM GAS  /tmp/ccW6Up5O.s 			page 14


 600              		.file 8 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 601              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 602              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 603              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 604              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 605              		.file 13 "Core/Inc/iceuncompr.h"
 606              		.file 14 "Core/Inc/spi.h"
ARM GAS  /tmp/ccW6Up5O.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 iceuncompr.c
     /tmp/ccW6Up5O.s:21     .text.read_bit:00000000 $t
     /tmp/ccW6Up5O.s:27     .text.read_bit:00000000 read_bit
     /tmp/ccW6Up5O.s:96     .text.write_bit:00000000 $t
     /tmp/ccW6Up5O.s:102    .text.write_bit:00000000 write_bit
     /tmp/ccW6Up5O.s:167    .text.write_bit:00000034 $d
     /tmp/ccW6Up5O.s:172    .text.read_int:00000000 $t
     /tmp/ccW6Up5O.s:178    .text.read_int:00000000 read_int
     /tmp/ccW6Up5O.s:251    .text.write_zeros:00000000 $t
     /tmp/ccW6Up5O.s:257    .text.write_zeros:00000000 write_zeros
     /tmp/ccW6Up5O.s:300    .text.ice_uncompress:00000000 $t
     /tmp/ccW6Up5O.s:306    .text.ice_uncompress:00000000 ice_uncompress
     /tmp/ccW6Up5O.s:524    .text.ice_uncompress:00000100 $d
     /tmp/ccW6Up5O.s:530    .rodata.WriteUncomprBitstream.str1.4:00000000 $d
     /tmp/ccW6Up5O.s:534    .text.WriteUncomprBitstream:00000000 $t
     /tmp/ccW6Up5O.s:540    .text.WriteUncomprBitstream:00000000 WriteUncomprBitstream
     /tmp/ccW6Up5O.s:588    .text.WriteUncomprBitstream:00000020 $d

UNDEFINED SYMBOLS
fgetc
HAL_SPI_Transmit
hspi4
fmemopen
