ARM GAS  /tmp/cciKVt4B.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_os.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NyanPrint,"ax",%progbits
  20              		.align	1
  21              		.global	NyanPrint
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NyanPrint:
  27              	.LVL0:
  28              	.LFB149:
  29              		.file 1 "Core/Src/nyan_os.c"
   1:Core/Src/nyan_os.c **** /**
   2:Core/Src/nyan_os.c ****  * NyanOS (NOS) v0.01
   3:Core/Src/nyan_os.c ****  * Reese Russell
   4:Core/Src/nyan_os.c ****  * MIT License
   5:Core/Src/nyan_os.c ****  */
   6:Core/Src/nyan_os.c **** 
   7:Core/Src/nyan_os.c **** #include <ctype.h>
   8:Core/Src/nyan_os.c **** #include <stdio.h>
   9:Core/Src/nyan_os.c **** #include <stdlib.h> 
  10:Core/Src/nyan_os.c **** #include <string.h>
  11:Core/Src/nyan_os.c **** 
  12:Core/Src/nyan_os.c **** #include "main.h"
  13:Core/Src/nyan_os.c **** #include "24xx_eeprom.h"
  14:Core/Src/nyan_os.c **** #include "nyan_os.h"
  15:Core/Src/nyan_os.c **** #include "nyan_sha256.h"
  16:Core/Src/nyan_os.c **** #include "nyan_strings.h"
  17:Core/Src/nyan_os.c **** #include "tim.h"
  18:Core/Src/nyan_os.c **** #include "usbd_cdc_acm_if.h"
  19:Core/Src/nyan_os.c **** 
  20:Core/Src/nyan_os.c **** NyanReturn NyanOsInit(volatile NyanOS* nos, Eeprom24xx* eeprom)
  21:Core/Src/nyan_os.c **** {
  22:Core/Src/nyan_os.c ****     // Set the operational state
  23:Core/Src/nyan_os.c ****     nos->state = READY;
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
  25:Core/Src/nyan_os.c **** 
  26:Core/Src/nyan_os.c ****     // Default init the OS vars
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
ARM GAS  /tmp/cciKVt4B.s 			page 2


  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
  34:Core/Src/nyan_os.c **** 
  35:Core/Src/nyan_os.c ****     // EEPROM Driver access
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
  37:Core/Src/nyan_os.c **** 
  38:Core/Src/nyan_os.c ****     // Manual Setting of the memory because of the volatile qualifier.
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
  40:Core/Src/nyan_os.c **** 
  41:Core/Src/nyan_os.c ****     // Set the arg pointer to a zero value
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
  44:Core/Src/nyan_os.c ****     }
  45:Core/Src/nyan_os.c **** 
  46:Core/Src/nyan_os.c ****     // Output Buffer Creation
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
  49:Core/Src/nyan_os.c ****     
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  51:Core/Src/nyan_os.c **** }
  52:Core/Src/nyan_os.c **** 
  53:Core/Src/nyan_os.c **** NyanReturn NyanWelcomeDisplay(volatile NyanOS *nos)
  54:Core/Src/nyan_os.c **** {
  55:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
  57:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
  59:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
  60:Core/Src/nyan_os.c ****         }
  61:Core/Src/nyan_os.c ****     }
  62:Core/Src/nyan_os.c **** 
  63:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  64:Core/Src/nyan_os.c **** };
  65:Core/Src/nyan_os.c **** 
  66:Core/Src/nyan_os.c **** NyanReturn NyanAddInputBuffer(volatile NyanOS *nos, uint8_t *pbuf, uint32_t *Len)
  67:Core/Src/nyan_os.c **** {
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
  72:Core/Src/nyan_os.c **** 
  73:Core/Src/nyan_os.c ****     // Lets copy the RX Buffer so that it doesn't get freed by an interrupt !!!FIXME!!! This can be
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
  78:Core/Src/nyan_os.c ****     }
  79:Core/Src/nyan_os.c **** 
  80:Core/Src/nyan_os.c ****     // Check which state we are in.
  81:Core/Src/nyan_os.c ****     switch(nos->state){
  82:Core/Src/nyan_os.c ****         case READY: {
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
  85:Core/Src/nyan_os.c ****                     // Handle backspace
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
ARM GAS  /tmp/cciKVt4B.s 			page 3


  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
  91:Core/Src/nyan_os.c ****                     // Handle the action of executing a command by pressing enter
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
  95:Core/Src/nyan_os.c ****                     break;
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
  97:Core/Src/nyan_os.c ****                     // Handle out of command buffer space on next char
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 101:Core/Src/nyan_os.c ****                 }
 102:Core/Src/nyan_os.c ****             }
 103:Core/Src/nyan_os.c ****             break;
 104:Core/Src/nyan_os.c ****         }
 105:Core/Src/nyan_os.c ****         case DIRECT_BUFFER_ACCESS: {
 106:Core/Src/nyan_os.c ****             // In this state all signals are written directly to the buffer until the buffer is ful
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 110:Core/Src/nyan_os.c ****             }
 111:Core/Src/nyan_os.c ****         }
 112:Core/Src/nyan_os.c ****         default: 
 113:Core/Src/nyan_os.c ****             break;
 114:Core/Src/nyan_os.c ****     }
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 116:Core/Src/nyan_os.c **** }
 117:Core/Src/nyan_os.c **** 
 118:Core/Src/nyan_os.c **** NyanReturn NyanPrint(volatile NyanOS *nos, char* data, size_t len)
 119:Core/Src/nyan_os.c **** {
  30              		.loc 1 119 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/nyan_os.c ****     if (!nos || !data)
  34              		.loc 1 120 5 view .LVU1
  35              		.loc 1 120 8 is_stmt 0 view .LVU2
  36 0000 0029     		cmp	r1, #0
  37 0002 18BF     		it	ne
  38 0004 0028     		cmpne	r0, #0
  39 0006 43D0     		beq	.L5
 119:Core/Src/nyan_os.c ****     if (!nos || !data)
  40              		.loc 1 119 1 view .LVU3
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 16
  44              		.cfi_offset 4, -16
  45              		.cfi_offset 5, -12
  46              		.cfi_offset 6, -8
  47              		.cfi_offset 14, -4
  48 000a 1546     		mov	r5, r2
  49 000c 0446     		mov	r4, r0
  50 000e 0E46     		mov	r6, r1
 121:Core/Src/nyan_os.c ****         return NOS_FAILURE;
ARM GAS  /tmp/cciKVt4B.s 			page 4


 122:Core/Src/nyan_os.c **** 
 123:Core/Src/nyan_os.c ****     if (nos->tx_buffer.size + len > 2048) {
  51              		.loc 1 123 5 is_stmt 1 view .LVU4
  52              		.loc 1 123 23 is_stmt 0 view .LVU5
  53 0010 D0F89830 		ldr	r3, [r0, #152]
  54              		.loc 1 123 29 view .LVU6
  55 0014 1344     		add	r3, r3, r2
  56              		.loc 1 123 8 view .LVU7
  57 0016 B3F5006F 		cmp	r3, #2048
  58 001a 3BD8     		bhi	.L6
 124:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 125:Core/Src/nyan_os.c ****     }
 126:Core/Src/nyan_os.c ****     if (nos->tx_buffer.p_array == NULL) {
  59              		.loc 1 126 5 is_stmt 1 view .LVU8
  60              		.loc 1 126 23 is_stmt 0 view .LVU9
  61 001c D0F89430 		ldr	r3, [r0, #148]
  62              		.loc 1 126 8 view .LVU10
  63 0020 2BB3     		cbz	r3, .L13
  64              	.LBB2:
 127:Core/Src/nyan_os.c ****         // Since the pointer is null we need to create a new one to hold our new data!
 128:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = (uint8_t *)malloc(len);
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 131:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 132:Core/Src/nyan_os.c ****         }
 133:Core/Src/nyan_os.c ****         nos->tx_buffer.size = len;
 134:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 135:Core/Src/nyan_os.c ****     } else {
 136:Core/Src/nyan_os.c ****         
 137:Core/Src/nyan_os.c ****         // The pointer is not null, so we realloc and then add the contents of data to it
 138:Core/Src/nyan_os.c ****         uint8_t *new_buffer = (uint8_t *)realloc(nos->tx_buffer.p_array, nos->tx_buffer.size + len)
  65              		.loc 1 138 9 is_stmt 1 view .LVU11
  66              		.loc 1 138 64 is_stmt 0 view .LVU12
  67 0022 D0F89400 		ldr	r0, [r0, #148]
  68              	.LVL1:
  69              		.loc 1 138 88 view .LVU13
  70 0026 D4F89810 		ldr	r1, [r4, #152]
  71              	.LVL2:
  72              		.loc 1 138 42 view .LVU14
  73 002a 1144     		add	r1, r1, r2
  74 002c FFF7FEFF 		bl	realloc
  75              	.LVL3:
 139:Core/Src/nyan_os.c ****         if (new_buffer == NULL) {
  76              		.loc 1 139 9 is_stmt 1 view .LVU15
  77              		.loc 1 139 12 is_stmt 0 view .LVU16
  78 0030 A0B3     		cbz	r0, .L8
 140:Core/Src/nyan_os.c ****             // Handle failed memory reallocation
 141:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 142:Core/Src/nyan_os.c ****         }
 143:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = new_buffer;
  79              		.loc 1 143 9 is_stmt 1 view .LVU17
  80              		.loc 1 143 32 is_stmt 0 view .LVU18
  81 0032 C4F89400 		str	r0, [r4, #148]
 144:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array + nos->tx_buffer.size, data, len); // Append the new data
  82              		.loc 1 144 9 is_stmt 1 view .LVU19
  83              		.loc 1 144 30 is_stmt 0 view .LVU20
  84 0036 D4F89400 		ldr	r0, [r4, #148]
ARM GAS  /tmp/cciKVt4B.s 			page 5


  85              	.LVL4:
  86              		.loc 1 144 55 view .LVU21
  87 003a D4F89830 		ldr	r3, [r4, #152]
  88              		.loc 1 144 9 view .LVU22
  89 003e 2A46     		mov	r2, r5
  90 0040 3146     		mov	r1, r6
  91 0042 1844     		add	r0, r0, r3
  92 0044 FFF7FEFF 		bl	memcpy
  93              	.LVL5:
 145:Core/Src/nyan_os.c ****         nos->tx_buffer.size += len; // Increase the size to reflect the new total size
  94              		.loc 1 145 9 is_stmt 1 view .LVU23
  95              		.loc 1 145 29 is_stmt 0 view .LVU24
  96 0048 D4F89820 		ldr	r2, [r4, #152]
  97 004c 1544     		add	r5, r5, r2
  98              	.LVL6:
  99              		.loc 1 145 29 view .LVU25
 100 004e C4F89850 		str	r5, [r4, #152]
 101              	.L4:
 102              		.loc 1 145 29 view .LVU26
 103              	.LBE2:
 146:Core/Src/nyan_os.c ****     }
 147:Core/Src/nyan_os.c **** 
 148:Core/Src/nyan_os.c ****     // Now calculate the chunks
 149:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = nos->tx_buffer.size / _NYAN_CDC_TX_MAX_LEN;
 104              		.loc 1 149 5 is_stmt 1 view .LVU27
 105              		.loc 1 149 42 is_stmt 0 view .LVU28
 106 0052 D4F89830 		ldr	r3, [r4, #152]
 107              		.loc 1 149 26 view .LVU29
 108 0056 C3F3C713 		ubfx	r3, r3, #7, #8
 109 005a 84F89130 		strb	r3, [r4, #145]
 150:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = nos->tx_buffer.size % _NYAN_CDC_TX_MAX_LEN;
 110              		.loc 1 150 5 is_stmt 1 view .LVU30
 111              		.loc 1 150 50 is_stmt 0 view .LVU31
 112 005e D4F89830 		ldr	r3, [r4, #152]
 113              		.loc 1 150 56 view .LVU32
 114 0062 03F07F03 		and	r3, r3, #127
 115              		.loc 1 150 34 view .LVU33
 116 0066 84F89230 		strb	r3, [r4, #146]
 151:Core/Src/nyan_os.c **** 
 152:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 117              		.loc 1 152 5 is_stmt 1 view .LVU34
 118              		.loc 1 152 12 is_stmt 0 view .LVU35
 119 006a 0120     		movs	r0, #1
 120              	.L2:
 153:Core/Src/nyan_os.c **** }
 121              		.loc 1 153 1 view .LVU36
 122 006c 70BD     		pop	{r4, r5, r6, pc}
 123              	.LVL7:
 124              	.L13:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 125              		.loc 1 128 9 is_stmt 1 view .LVU37
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 126              		.loc 1 128 45 is_stmt 0 view .LVU38
 127 006e 1046     		mov	r0, r2
 128              	.LVL8:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 129              		.loc 1 128 45 view .LVU39
ARM GAS  /tmp/cciKVt4B.s 			page 6


 130 0070 FFF7FEFF 		bl	malloc
 131              	.LVL9:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 132              		.loc 1 128 32 view .LVU40
 133 0074 C4F89400 		str	r0, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 134              		.loc 1 129 9 is_stmt 1 view .LVU41
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 135              		.loc 1 129 27 is_stmt 0 view .LVU42
 136 0078 D4F89430 		ldr	r3, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 137              		.loc 1 129 12 view .LVU43
 138 007c 63B1     		cbz	r3, .L7
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 139              		.loc 1 133 9 is_stmt 1 view .LVU44
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 140              		.loc 1 133 29 is_stmt 0 view .LVU45
 141 007e C4F89850 		str	r5, [r4, #152]
 134:Core/Src/nyan_os.c ****     } else {
 142              		.loc 1 134 9 is_stmt 1 view .LVU46
 134:Core/Src/nyan_os.c ****     } else {
 143              		.loc 1 134 30 is_stmt 0 view .LVU47
 144 0082 D4F89400 		ldr	r0, [r4, #148]
 134:Core/Src/nyan_os.c ****     } else {
 145              		.loc 1 134 9 view .LVU48
 146 0086 2A46     		mov	r2, r5
 147 0088 3146     		mov	r1, r6
 148 008a FFF7FEFF 		bl	memcpy
 149              	.LVL10:
 150 008e E0E7     		b	.L4
 151              	.LVL11:
 152              	.L5:
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 0
 155              		.cfi_restore 4
 156              		.cfi_restore 5
 157              		.cfi_restore 6
 158              		.cfi_restore 14
 121:Core/Src/nyan_os.c **** 
 159              		.loc 1 121 16 view .LVU49
 160 0090 0020     		movs	r0, #0
 161              	.LVL12:
 162              		.loc 1 153 1 view .LVU50
 163 0092 7047     		bx	lr
 164              	.LVL13:
 165              	.L6:
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 124:Core/Src/nyan_os.c ****     }
 172              		.loc 1 124 20 view .LVU51
 173 0094 0020     		movs	r0, #0
 174              	.LVL14:
 124:Core/Src/nyan_os.c ****     }
ARM GAS  /tmp/cciKVt4B.s 			page 7


 175              		.loc 1 124 20 view .LVU52
 176 0096 E9E7     		b	.L2
 177              	.LVL15:
 178              	.L7:
 131:Core/Src/nyan_os.c ****         }
 179              		.loc 1 131 20 view .LVU53
 180 0098 0020     		movs	r0, #0
 181 009a E7E7     		b	.L2
 182              	.LVL16:
 183              	.L8:
 184              	.LBB3:
 141:Core/Src/nyan_os.c ****         }
 185              		.loc 1 141 20 view .LVU54
 186 009c 0020     		movs	r0, #0
 187              	.LVL17:
 141:Core/Src/nyan_os.c ****         }
 188              		.loc 1 141 20 view .LVU55
 189 009e E5E7     		b	.L2
 190              	.LBE3:
 191              		.cfi_endproc
 192              	.LFE149:
 194              		.section	.text.NyanWelcomeDisplay,"ax",%progbits
 195              		.align	1
 196              		.global	NyanWelcomeDisplay
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	NyanWelcomeDisplay:
 202              	.LVL18:
 203              	.LFB147:
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 204              		.loc 1 54 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 208              		.loc 1 55 5 view .LVU57
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 209              		.loc 1 55 11 is_stmt 0 view .LVU58
 210 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 211              		.loc 1 55 7 view .LVU59
 212 0002 A3B1     		cbz	r3, .L17
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 213              		.loc 1 54 1 view .LVU60
 214 0004 10B5     		push	{r4, lr}
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 14, -4
 219 0006 0446     		mov	r4, r0
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 220              		.loc 1 56 9 is_stmt 1 view .LVU61
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 221              		.loc 1 56 34 is_stmt 0 view .LVU62
 222 0008 0023     		movs	r3, #0
 223 000a 0370     		strb	r3, [r0]
ARM GAS  /tmp/cciKVt4B.s 			page 8


  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 224              		.loc 1 57 9 is_stmt 1 view .LVU63
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 225              		.loc 1 57 15 is_stmt 0 view .LVU64
 226 000c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 227              		.loc 1 57 42 view .LVU65
 228 000e 531C     		adds	r3, r2, #1
 229 0010 DBB2     		uxtb	r3, r3
 230 0012 4370     		strb	r3, [r0, #1]
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 231              		.loc 1 57 11 view .LVU66
 232 0014 0AB1     		cbz	r2, .L20
 233              	.LVL19:
 234              	.L15:
  63:Core/Src/nyan_os.c **** };
 235              		.loc 1 63 5 is_stmt 1 view .LVU67
  64:Core/Src/nyan_os.c **** 
 236              		.loc 1 64 1 is_stmt 0 view .LVU68
 237 0016 0120     		movs	r0, #1
 238 0018 10BD     		pop	{r4, pc}
 239              	.LVL20:
 240              	.L20:
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241              		.loc 1 58 13 is_stmt 1 view .LVU69
 242 001a 4222     		movs	r2, #66
 243 001c 0549     		ldr	r1, .L21
 244 001e FFF7FEFF 		bl	NyanPrint
 245              	.LVL21:
  59:Core/Src/nyan_os.c ****         }
 246              		.loc 1 59 13 view .LVU70
 247 0022 0F22     		movs	r2, #15
 248 0024 0449     		ldr	r1, .L21+4
 249 0026 2046     		mov	r0, r4
 250 0028 FFF7FEFF 		bl	NyanPrint
 251              	.LVL22:
 252 002c F3E7     		b	.L15
 253              	.LVL23:
 254              	.L17:
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 0
 257              		.cfi_restore 4
 258              		.cfi_restore 14
  63:Core/Src/nyan_os.c **** };
 259              		.loc 1 63 5 view .LVU71
  64:Core/Src/nyan_os.c **** 
 260              		.loc 1 64 1 is_stmt 0 view .LVU72
 261 002e 0120     		movs	r0, #1
 262              	.LVL24:
  64:Core/Src/nyan_os.c **** 
 263              		.loc 1 64 1 view .LVU73
 264 0030 7047     		bx	lr
 265              	.L22:
 266 0032 00BF     		.align	2
 267              	.L21:
 268 0034 00000000 		.word	.LANCHOR0
 269 0038 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cciKVt4B.s 			page 9


 270              		.cfi_endproc
 271              	.LFE147:
 273              		.section	.text.NyanCdcTX,"ax",%progbits
 274              		.align	1
 275              		.global	NyanCdcTX
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	NyanCdcTX:
 281              	.LVL25:
 282              	.LFB150:
 154:Core/Src/nyan_os.c **** 
 155:Core/Src/nyan_os.c **** NyanReturn NyanCdcTX(volatile NyanOS* nos)
 156:Core/Src/nyan_os.c **** {
 283              		.loc 1 156 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 156 1 is_stmt 0 view .LVU75
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 293 0002 0346     		mov	r3, r0
 157:Core/Src/nyan_os.c ****     // First we need to determine how many chunks we need to send
 158:Core/Src/nyan_os.c ****     uint8_t total_chunks = nos->tx_chunks_solid;
 294              		.loc 1 158 5 is_stmt 1 view .LVU76
 295              		.loc 1 158 13 is_stmt 0 view .LVU77
 296 0004 90F89100 		ldrb	r0, [r0, #145]	@ zero_extendqisi2
 297              	.LVL26:
 298              		.loc 1 158 13 view .LVU78
 299 0008 C0B2     		uxtb	r0, r0
 300              	.LVL27:
 159:Core/Src/nyan_os.c ****     uint8_t length = 0;
 301              		.loc 1 159 5 is_stmt 1 view .LVU79
 160:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 302              		.loc 1 160 5 view .LVU80
 303              		.loc 1 160 34 is_stmt 0 view .LVU81
 304 000a 93F89310 		ldrb	r1, [r3, #147]	@ zero_extendqisi2
 305              		.loc 1 160 45 view .LVU82
 306 000e C901     		lsls	r1, r1, #7
 307              	.LVL28:
 161:Core/Src/nyan_os.c **** 
 162:Core/Src/nyan_os.c ****     // If there are partial bytes we need to increment the send chunks by 1
 163:Core/Src/nyan_os.c ****     if(nos->tx_chunks_partial_bytes) {
 308              		.loc 1 163 5 is_stmt 1 view .LVU83
 309              		.loc 1 163 11 is_stmt 0 view .LVU84
 310 0010 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 311              		.loc 1 163 7 view .LVU85
 312 0014 0AB1     		cbz	r2, .L24
 164:Core/Src/nyan_os.c ****         total_chunks++;
 313              		.loc 1 164 9 is_stmt 1 view .LVU86
 314              		.loc 1 164 21 is_stmt 0 view .LVU87
 315 0016 0130     		adds	r0, r0, #1
 316              	.LVL29:
 317              		.loc 1 164 21 view .LVU88
ARM GAS  /tmp/cciKVt4B.s 			page 10


 318 0018 C0B2     		uxtb	r0, r0
 319              	.LVL30:
 320              	.L24:
 165:Core/Src/nyan_os.c ****     }
 166:Core/Src/nyan_os.c **** 
 167:Core/Src/nyan_os.c ****     // If there are no chunks to send than just return a failure
 168:Core/Src/nyan_os.c ****     if(total_chunks == 0) {
 321              		.loc 1 168 5 is_stmt 1 view .LVU89
 322              		.loc 1 168 7 is_stmt 0 view .LVU90
 323 001a 0028     		cmp	r0, #0
 324 001c 49D0     		beq	.L25
 169:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 170:Core/Src/nyan_os.c ****     }
 171:Core/Src/nyan_os.c ****     
 172:Core/Src/nyan_os.c ****     // Do checks and transmit data;
 173:Core/Src/nyan_os.c ****     if((nos->tx_buffer.p_array != NULL || nos->tx_buffer.size != 0) && nos->tx_inflight == 0) {
 325              		.loc 1 173 5 is_stmt 1 view .LVU91
 326              		.loc 1 173 23 is_stmt 0 view .LVU92
 327 001e D3F89420 		ldr	r2, [r3, #148]
 328              		.loc 1 173 7 view .LVU93
 329 0022 E2B1     		cbz	r2, .L34
 330              	.L26:
 331              		.loc 1 173 75 discriminator 3 view .LVU94
 332 0024 93F88F20 		ldrb	r2, [r3, #143]	@ zero_extendqisi2
 333              		.loc 1 173 69 discriminator 3 view .LVU95
 334 0028 002A     		cmp	r2, #0
 335 002a 41D1     		bne	.L31
 174:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 336              		.loc 1 174 9 is_stmt 1 view .LVU96
 337              		.loc 1 174 43 is_stmt 0 view .LVU97
 338 002c 83F89020 		strb	r2, [r3, #144]
 175:Core/Src/nyan_os.c ****         
 176:Core/Src/nyan_os.c ****         // Lets begin to process the chunks
 177:Core/Src/nyan_os.c ****         if(nos->tx_chunk == total_chunks - 1) { // This would be the processing of the last chunk
 339              		.loc 1 177 9 is_stmt 1 view .LVU98
 340              		.loc 1 177 15 is_stmt 0 view .LVU99
 341 0030 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 342 0034 D2B2     		uxtb	r2, r2
 343              		.loc 1 177 42 view .LVU100
 344 0036 00F1FF3C 		add	ip, r0, #-1
 345              		.loc 1 177 11 view .LVU101
 346 003a 6245     		cmp	r2, ip
 347 003c 15D0     		beq	.L35
 178:Core/Src/nyan_os.c ****             length = nos->tx_chunks_partial_bytes;
 179:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 348              		.loc 1 180 16 is_stmt 1 view .LVU102
 349              		.loc 1 180 23 is_stmt 0 view .LVU103
 350 003e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 351 0042 D2B2     		uxtb	r2, r2
 352              		.loc 1 180 19 view .LVU104
 353 0044 9445     		cmp	ip, r2
 354 0046 31DD     		ble	.L32
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 355              		.loc 1 181 13 is_stmt 1 view .LVU105
 356              	.LVL31:
 182:Core/Src/nyan_os.c ****             nos->tx_bulk_transfer_in_progress = true;
ARM GAS  /tmp/cciKVt4B.s 			page 11


 357              		.loc 1 182 13 view .LVU106
 358              		.loc 1 182 47 is_stmt 0 view .LVU107
 359 0048 0122     		movs	r2, #1
 360 004a 83F89020 		strb	r2, [r3, #144]
 183:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 361              		.loc 1 183 13 is_stmt 1 view .LVU108
 362              		.loc 1 183 18 is_stmt 0 view .LVU109
 363 004e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 364              		.loc 1 183 13 view .LVU110
 365 0052 0132     		adds	r2, r2, #1
 366 0054 D2B2     		uxtb	r2, r2
 367 0056 83F89320 		strb	r2, [r3, #147]
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 368              		.loc 1 181 20 view .LVU111
 369 005a 8022     		movs	r2, #128
 370 005c 10E0     		b	.L28
 371              	.LVL32:
 372              	.L34:
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 373              		.loc 1 173 57 discriminator 2 view .LVU112
 374 005e D3F89820 		ldr	r2, [r3, #152]
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 375              		.loc 1 173 40 discriminator 2 view .LVU113
 376 0062 002A     		cmp	r2, #0
 377 0064 DED1     		bne	.L26
 184:Core/Src/nyan_os.c ****         }
 185:Core/Src/nyan_os.c **** 
 186:Core/Src/nyan_os.c ****         // If we have reach the end reset everything
 187:Core/Src/nyan_os.c ****         if (nos->tx_chunk > total_chunks - 1) {
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_solid = 0;
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 191:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 192:Core/Src/nyan_os.c ****         }
 193:Core/Src/nyan_os.c **** 
 194:Core/Src/nyan_os.c ****         CDC_Transmit(nos->cdc_ch, nos->tx_buffer.p_array + address_offset, length);
 195:Core/Src/nyan_os.c ****     }
 196:Core/Src/nyan_os.c ****     
 197:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 378              		.loc 1 197 12 view .LVU114
 379 0066 0120     		movs	r0, #1
 380              	.LVL33:
 381              		.loc 1 197 12 view .LVU115
 382 0068 23E0     		b	.L25
 383              	.LVL34:
 384              	.L35:
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 385              		.loc 1 178 13 is_stmt 1 view .LVU116
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 386              		.loc 1 178 20 is_stmt 0 view .LVU117
 387 006a 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 388 006e D2B2     		uxtb	r2, r2
 389              	.LVL35:
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 390              		.loc 1 179 13 is_stmt 1 view .LVU118
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 391              		.loc 1 179 18 is_stmt 0 view .LVU119
ARM GAS  /tmp/cciKVt4B.s 			page 12


 392 0070 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 393              		.loc 1 179 13 view .LVU120
 394 0074 0CF1010C 		add	ip, ip, #1
 395 0078 5FFA8CFC 		uxtb	ip, ip
 396 007c 83F893C0 		strb	ip, [r3, #147]
 397              	.LVL36:
 398              	.L28:
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 399              		.loc 1 187 9 is_stmt 1 view .LVU121
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 400              		.loc 1 187 16 is_stmt 0 view .LVU122
 401 0080 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 402 0084 5FFA8CFC 		uxtb	ip, ip
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 403              		.loc 1 187 12 view .LVU123
 404 0088 8445     		cmp	ip, r0
 405 008a 06D3     		bcc	.L29
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 406              		.loc 1 189 13 is_stmt 1 view .LVU124
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 407              		.loc 1 189 34 is_stmt 0 view .LVU125
 408 008c 0020     		movs	r0, #0
 409              	.LVL37:
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 410              		.loc 1 189 34 view .LVU126
 411 008e 83F89100 		strb	r0, [r3, #145]
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 412              		.loc 1 190 13 is_stmt 1 view .LVU127
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 413              		.loc 1 190 42 is_stmt 0 view .LVU128
 414 0092 83F89200 		strb	r0, [r3, #146]
 191:Core/Src/nyan_os.c ****         }
 415              		.loc 1 191 13 is_stmt 1 view .LVU129
 191:Core/Src/nyan_os.c ****         }
 416              		.loc 1 191 27 is_stmt 0 view .LVU130
 417 0096 83F89300 		strb	r0, [r3, #147]
 418              	.L29:
 194:Core/Src/nyan_os.c ****     }
 419              		.loc 1 194 9 is_stmt 1 view .LVU131
 420 009a 93F88E00 		ldrb	r0, [r3, #142]	@ zero_extendqisi2
 194:Core/Src/nyan_os.c ****     }
 421              		.loc 1 194 49 is_stmt 0 view .LVU132
 422 009e D3F89430 		ldr	r3, [r3, #148]
 423              	.LVL38:
 194:Core/Src/nyan_os.c ****     }
 424              		.loc 1 194 9 view .LVU133
 425 00a2 1944     		add	r1, r1, r3
 426              	.LVL39:
 194:Core/Src/nyan_os.c ****     }
 427              		.loc 1 194 9 view .LVU134
 428 00a4 FFF7FEFF 		bl	CDC_Transmit
 429              	.LVL40:
 430              		.loc 1 197 12 view .LVU135
 431 00a8 0120     		movs	r0, #1
 432 00aa 02E0     		b	.L25
 433              	.LVL41:
ARM GAS  /tmp/cciKVt4B.s 			page 13


 434              	.L32:
 159:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 435              		.loc 1 159 13 view .LVU136
 436 00ac 0022     		movs	r2, #0
 437 00ae E7E7     		b	.L28
 438              	.L31:
 439              		.loc 1 197 12 view .LVU137
 440 00b0 0120     		movs	r0, #1
 441              	.LVL42:
 442              	.L25:
 198:Core/Src/nyan_os.c **** }
 443              		.loc 1 198 1 view .LVU138
 444 00b2 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE150:
 448              		.section	.text.NyanExeGetinfo,"ax",%progbits
 449              		.align	1
 450              		.global	NyanExeGetinfo
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	NyanExeGetinfo:
 456              	.LVL43:
 457              	.LFB154:
 199:Core/Src/nyan_os.c **** 
 200:Core/Src/nyan_os.c **** NyanReturn NyanDecode(volatile NyanOS* nos)
 201:Core/Src/nyan_os.c **** {
 202:Core/Src/nyan_os.c ****     // First set the nos state to idle
 203:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 204:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 205:Core/Src/nyan_os.c ****     for (uint8_t cmd_idx = 0; cmd_idx < _NYAN_NUM_COMMANDS; ++cmd_idx) {
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 207:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 208:Core/Src/nyan_os.c ****         if (_NYAN_CMD_BUF_LEN >= command_len && memcmp((const char*)nos->command_buffer, nyan_comma
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 210:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 211:Core/Src/nyan_os.c ****             nos->exe = (NyanExe)cmd_idx;
 212:Core/Src/nyan_os.c ****             break;
 213:Core/Src/nyan_os.c ****         } else {
 214:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_COMMAND_NOT_SUPPORTED;
 215:Core/Src/nyan_os.c ****         }
 216:Core/Src/nyan_os.c ****     }
 217:Core/Src/nyan_os.c **** 
 218:Core/Src/nyan_os.c ****     // If no command is matched, return some indication (e.g., NULL or a specific error string)
 219:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 220:Core/Src/nyan_os.c **** }
 221:Core/Src/nyan_os.c **** 
 222:Core/Src/nyan_os.c **** NyanReturn NyanExecute(volatile NyanOS* nos) {
 223:Core/Src/nyan_os.c ****     switch(nos->exe) {
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 225:Core/Src/nyan_os.c ****             NyanExeGetinfo(nos);
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 227:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 228:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 229:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 230:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 231:Core/Src/nyan_os.c ****             NyanExeSetOwner(nos);
ARM GAS  /tmp/cciKVt4B.s 			page 14


 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 233:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 234:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 235:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 236:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 237:Core/Src/nyan_os.c ****             HAL_TIM_OC_Stop_IT(&htim8, TIM_CHANNEL_1);
 238:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 239:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 240:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 242:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 243:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 244:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 245:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 246:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 247:Core/Src/nyan_os.c ****         case NYAN_EXE_COMMAND_NOT_SUPPORTED :
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_unknown_command[0], sizeof(nyan_keys_unknown_command))
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 250:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 251:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 252:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 253:Core/Src/nyan_os.c ****         default:
 254:Core/Src/nyan_os.c ****             // The execution state is out of bounds correct this.
 255:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 256:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 257:Core/Src/nyan_os.c ****     }
 258:Core/Src/nyan_os.c **** }
 259:Core/Src/nyan_os.c **** 
 260:Core/Src/nyan_os.c **** NyanReturn NyanDecodeArgs(volatile NyanOS* nos)
 261:Core/Src/nyan_os.c **** {
 262:Core/Src/nyan_os.c ****     if (!nos) {
 263:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 264:Core/Src/nyan_os.c ****     }
 265:Core/Src/nyan_os.c **** 
 266:Core/Src/nyan_os.c ****     // Destroy any previous allocated arguments
 267:Core/Src/nyan_os.c ****     FreeNyanCommandArgs(nos);
 268:Core/Src/nyan_os.c **** 
 269:Core/Src/nyan_os.c ****     nos->command_buffer[_NYAN_CMD_BUF_LEN] = '\0';
 270:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 271:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 272:Core/Src/nyan_os.c **** 
 273:Core/Src/nyan_os.c ****     int arg_count = 0;
 274:Core/Src/nyan_os.c ****     while (token != NULL) {
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 276:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 280:Core/Src/nyan_os.c ****                 for (int i = 0; i < arg_count; ++i) {
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 282:Core/Src/nyan_os.c ****                 }
 283:Core/Src/nyan_os.c ****                 return NOS_FAILURE;
 284:Core/Src/nyan_os.c ****             }
 285:Core/Src/nyan_os.c ****             strcpy((char *)nos->command_arg_buffer[arg_count], token);
 286:Core/Src/nyan_os.c ****             arg_count++;
 287:Core/Src/nyan_os.c ****         }
 288:Core/Src/nyan_os.c ****         token = strtok(NULL, delimiter);
ARM GAS  /tmp/cciKVt4B.s 			page 15


 289:Core/Src/nyan_os.c ****     }
 290:Core/Src/nyan_os.c **** 
 291:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = arg_count;
 292:Core/Src/nyan_os.c **** 
 293:Core/Src/nyan_os.c ****     // Nullify the command buffer
 294:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 295:Core/Src/nyan_os.c **** 
 296:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 297:Core/Src/nyan_os.c **** }
 298:Core/Src/nyan_os.c **** 
 299:Core/Src/nyan_os.c **** NyanReturn NyanExeGetinfo(volatile NyanOS* nos)
 300:Core/Src/nyan_os.c **** {
 458              		.loc 1 300 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 64
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 300 1 is_stmt 0 view .LVU140
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI6:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 90B0     		sub	sp, sp, #64
 469              	.LCFI7:
 470              		.cfi_def_cfa_offset 72
 471 0004 0446     		mov	r4, r0
 301:Core/Src/nyan_os.c ****     // We need to fetch the owners name from the eeprom
 302:Core/Src/nyan_os.c ****     EepromRead(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 472              		.loc 1 302 5 is_stmt 1 view .LVU141
 473 0006 4068     		ldr	r0, [r0, #4]
 474              	.LVL44:
 475              		.loc 1 302 5 is_stmt 0 view .LVU142
 476 0008 4023     		movs	r3, #64
 477 000a 2022     		movs	r2, #32
 478 000c 0021     		movs	r1, #0
 479 000e FFF7FEFF 		bl	EepromRead
 480              	.LVL45:
 303:Core/Src/nyan_os.c **** 
 304:Core/Src/nyan_os.c ****     // This has to be polling until callbacks are improved
 305:Core/Src/nyan_os.c ****     while(nos->eeprom->rx_inflight){}
 481              		.loc 1 305 5 is_stmt 1 view .LVU143
 482              	.L37:
 483              		.loc 1 305 37 discriminator 1 view .LVU144
 484              		.loc 1 305 10 discriminator 1 view .LVU145
 485              		.loc 1 305 14 is_stmt 0 discriminator 1 view .LVU146
 486 0012 6368     		ldr	r3, [r4, #4]
 487              		.loc 1 305 22 discriminator 1 view .LVU147
 488 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 489              		.loc 1 305 10 discriminator 1 view .LVU148
 490 0016 002B     		cmp	r3, #0
 491 0018 FBD1     		bne	.L37
 306:Core/Src/nyan_os.c **** 
 307:Core/Src/nyan_os.c ****     // Ensure data from EEPROM is null-terminated
 308:Core/Src/nyan_os.c ****     nos->eeprom->rx_buf[SIZE_BOARD_OWNER - 1] = '\0';
 492              		.loc 1 308 5 is_stmt 1 view .LVU149
 493              		.loc 1 308 8 is_stmt 0 view .LVU150
 494 001a 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cciKVt4B.s 			page 16


 495              		.loc 1 308 47 view .LVU151
 496 001c 0022     		movs	r2, #0
 497 001e 83F8C420 		strb	r2, [r3, #196]
 309:Core/Src/nyan_os.c **** 
 310:Core/Src/nyan_os.c ****     char owner[SIZE_BOARD_OWNER];
 498              		.loc 1 310 5 is_stmt 1 view .LVU152
 311:Core/Src/nyan_os.c ****     strncpy(owner, (const char *)nos->eeprom->rx_buf, SIZE_BOARD_OWNER);
 499              		.loc 1 311 5 view .LVU153
 500              		.loc 1 311 37 is_stmt 0 view .LVU154
 501 0022 6168     		ldr	r1, [r4, #4]
 502              		.loc 1 311 5 view .LVU155
 503 0024 4022     		movs	r2, #64
 504 0026 8531     		adds	r1, r1, #133
 505 0028 6846     		mov	r0, sp
 506 002a FFF7FEFF 		bl	strncpy
 507              	.LVL46:
 312:Core/Src/nyan_os.c **** 
 313:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo[0], sizeof(nyan_keys_getinfo));
 508              		.loc 1 313 5 is_stmt 1 view .LVU156
 509 002e 3822     		movs	r2, #56
 510 0030 0C49     		ldr	r1, .L39
 511 0032 2046     		mov	r0, r4
 512 0034 FFF7FEFF 		bl	NyanPrint
 513              	.LVL47:
 314:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo_owner[0], sizeof(nyan_keys_getinfo_owner));
 514              		.loc 1 314 5 view .LVU157
 515 0038 0822     		movs	r2, #8
 516 003a 0B49     		ldr	r1, .L39+4
 517 003c 2046     		mov	r0, r4
 518 003e FFF7FEFF 		bl	NyanPrint
 519              	.LVL48:
 315:Core/Src/nyan_os.c ****     NyanPrint(nos, owner, strlen(owner));
 520              		.loc 1 315 5 view .LVU158
 521 0042 6846     		mov	r0, sp
 522 0044 FFF7FEFF 		bl	strlen
 523              	.LVL49:
 524 0048 0246     		mov	r2, r0
 525 004a 6946     		mov	r1, sp
 526 004c 2046     		mov	r0, r4
 527 004e FFF7FEFF 		bl	NyanPrint
 528              	.LVL50:
 316:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 529              		.loc 1 316 5 view .LVU159
 530 0052 0322     		movs	r2, #3
 531 0054 0549     		ldr	r1, .L39+8
 532 0056 2046     		mov	r0, r4
 533 0058 FFF7FEFF 		bl	NyanPrint
 534              	.LVL51:
 317:Core/Src/nyan_os.c **** 
 318:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 535              		.loc 1 318 5 view .LVU160
 319:Core/Src/nyan_os.c **** }
 536              		.loc 1 319 1 is_stmt 0 view .LVU161
 537 005c 0120     		movs	r0, #1
 538 005e 10B0     		add	sp, sp, #64
 539              	.LCFI8:
 540              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cciKVt4B.s 			page 17


 541              		@ sp needed
 542 0060 10BD     		pop	{r4, pc}
 543              	.LVL52:
 544              	.L40:
 545              		.loc 1 319 1 view .LVU162
 546 0062 00BF     		.align	2
 547              	.L39:
 548 0064 00000000 		.word	.LANCHOR2
 549 0068 00000000 		.word	.LANCHOR3
 550 006c 00000000 		.word	.LANCHOR4
 551              		.cfi_endproc
 552              	.LFE154:
 554              		.section	.text.NyanExeSetOwner,"ax",%progbits
 555              		.align	1
 556              		.global	NyanExeSetOwner
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 561              	NyanExeSetOwner:
 562              	.LVL53:
 563              	.LFB155:
 320:Core/Src/nyan_os.c **** 
 321:Core/Src/nyan_os.c **** NyanReturn NyanExeSetOwner(volatile NyanOS* nos) 
 322:Core/Src/nyan_os.c **** {
 564              		.loc 1 322 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		.loc 1 322 1 is_stmt 0 view .LVU164
 569 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 570              	.LCFI9:
 571              		.cfi_def_cfa_offset 24
 572              		.cfi_offset 4, -24
 573              		.cfi_offset 5, -20
 574              		.cfi_offset 6, -16
 575              		.cfi_offset 7, -12
 576              		.cfi_offset 8, -8
 577              		.cfi_offset 14, -4
 323:Core/Src/nyan_os.c ****     if (!nos) {
 578              		.loc 1 323 5 is_stmt 1 view .LVU165
 579              		.loc 1 323 8 is_stmt 0 view .LVU166
 580 0004 0028     		cmp	r0, #0
 581 0006 78D0     		beq	.L54
 582 0008 0446     		mov	r4, r0
 324:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle null pointer
 325:Core/Src/nyan_os.c ****     }
 326:Core/Src/nyan_os.c **** 
 327:Core/Src/nyan_os.c ****     if (nos->command_buffer_num_args < 2) {
 583              		.loc 1 327 5 is_stmt 1 view .LVU167
 584              		.loc 1 327 12 is_stmt 0 view .LVU168
 585 000a 90F88D30 		ldrb	r3, [r0, #141]	@ zero_extendqisi2
 586 000e DBB2     		uxtb	r3, r3
 587              		.loc 1 327 8 view .LVU169
 588 0010 012B     		cmp	r3, #1
 589 0012 74D9     		bls	.L55
 590              	.LBB4:
 328:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Not enough args
ARM GAS  /tmp/cciKVt4B.s 			page 18


 329:Core/Src/nyan_os.c ****     }
 330:Core/Src/nyan_os.c **** 
 331:Core/Src/nyan_os.c ****     size_t total_chars = 0;
 332:Core/Src/nyan_os.c **** 
 333:Core/Src/nyan_os.c ****     // Calculate total length needed, including spaces between arguments
 334:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 591              		.loc 1 334 14 view .LVU170
 592 0014 0125     		movs	r5, #1
 593              	.LBE4:
 331:Core/Src/nyan_os.c **** 
 594              		.loc 1 331 12 view .LVU171
 595 0016 0026     		movs	r6, #0
 596 0018 09E0     		b	.L43
 597              	.LVL54:
 598              	.L45:
 599              	.LBB5:
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 600              		.loc 1 335 9 is_stmt 1 discriminator 4 view .LVU172
 601              		.loc 1 335 62 is_stmt 0 discriminator 4 view .LVU173
 602 001a 05F1AA03 		add	r3, r5, #170
 603 001e 04EB8303 		add	r3, r4, r3, lsl #2
 604 0022 5868     		ldr	r0, [r3, #4]
 605              		.loc 1 335 24 discriminator 4 view .LVU174
 606 0024 FFF7FEFF 		bl	strlen
 607              	.LVL55:
 608              		.loc 1 335 67 discriminator 4 view .LVU175
 609 0028 0130     		adds	r0, r0, #1
 610              		.loc 1 335 21 discriminator 4 view .LVU176
 611 002a 0644     		add	r6, r6, r0
 612              	.LVL56:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 613              		.loc 1 334 93 is_stmt 1 discriminator 4 view .LVU177
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 614              		.loc 1 334 94 is_stmt 0 discriminator 4 view .LVU178
 615 002c 0135     		adds	r5, r5, #1
 616              	.LVL57:
 617              	.L43:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 618              		.loc 1 334 21 is_stmt 1 discriminator 1 view .LVU179
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 619              		.loc 1 334 28 is_stmt 0 discriminator 1 view .LVU180
 620 002e 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 621 0032 DBB2     		uxtb	r3, r3
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 622              		.loc 1 334 5 discriminator 1 view .LVU181
 623 0034 AB42     		cmp	r3, r5
 624 0036 06DD     		ble	.L44
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 625              		.loc 1 334 80 discriminator 3 view .LVU182
 626 0038 05F1AA03 		add	r3, r5, #170
 627 003c 04EB8303 		add	r3, r4, r3, lsl #2
 628 0040 5B68     		ldr	r3, [r3, #4]
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 629              		.loc 1 334 54 discriminator 3 view .LVU183
 630 0042 002B     		cmp	r3, #0
 631 0044 E9D1     		bne	.L45
 632              	.L44:
ARM GAS  /tmp/cciKVt4B.s 			page 19


 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 633              		.loc 1 334 54 discriminator 3 view .LVU184
 634              	.LBE5:
 336:Core/Src/nyan_os.c ****     }
 337:Core/Src/nyan_os.c **** 
 338:Core/Src/nyan_os.c ****     // Since the size cant exceed 63 chars with null terminator 
 339:Core/Src/nyan_os.c ****     if (total_chars > SIZE_BOARD_OWNER - nos->command_buffer_num_args - 1  || total_chars == 0) {
 635              		.loc 1 339 5 is_stmt 1 view .LVU185
 636              		.loc 1 339 45 is_stmt 0 view .LVU186
 637 0046 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 638              		.loc 1 339 71 view .LVU187
 639 004a C3F13F03 		rsb	r3, r3, #63
 640              		.loc 1 339 8 view .LVU188
 641 004e B342     		cmp	r3, r6
 642 0050 59D3     		bcc	.L56
 643              		.loc 1 339 76 discriminator 1 view .LVU189
 644 0052 0EB9     		cbnz	r6, .L61
 340:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Would overflow memory boundaries 
 645              		.loc 1 340 16 view .LVU190
 646 0054 0026     		movs	r6, #0
 647              	.LVL58:
 648              		.loc 1 340 16 view .LVU191
 649 0056 53E0     		b	.L42
 650              	.LVL59:
 651              	.L61:
 341:Core/Src/nyan_os.c ****     }
 342:Core/Src/nyan_os.c **** 
 343:Core/Src/nyan_os.c ****     // Allocate memory for the new owner name
 344:Core/Src/nyan_os.c ****     char* owners_name = (char*)malloc(SIZE_BOARD_OWNER);
 652              		.loc 1 344 5 is_stmt 1 view .LVU192
 653              		.loc 1 344 32 is_stmt 0 view .LVU193
 654 0058 4020     		movs	r0, #64
 655 005a FFF7FEFF 		bl	malloc
 656              	.LVL60:
 345:Core/Src/nyan_os.c ****     if (!owners_name) {
 657              		.loc 1 345 5 is_stmt 1 view .LVU194
 658              		.loc 1 345 8 is_stmt 0 view .LVU195
 659 005e 0546     		mov	r5, r0
 660              	.LVL61:
 661              		.loc 1 345 8 view .LVU196
 662 0060 0028     		cmp	r0, #0
 663 0062 52D0     		beq	.L58
 664              	.LBB6:
 346:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle allocation failure
 347:Core/Src/nyan_os.c ****     }
 348:Core/Src/nyan_os.c **** 
 349:Core/Src/nyan_os.c ****     // Zero out the SIZE_BOARD_OWNER bytes
 350:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i) {
 665              		.loc 1 350 14 view .LVU197
 666 0064 0023     		movs	r3, #0
 667 0066 02E0     		b	.L46
 668              	.LVL62:
 669              	.L47:
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 670              		.loc 1 351 9 is_stmt 1 discriminator 3 view .LVU198
 671              		.loc 1 351 24 is_stmt 0 discriminator 3 view .LVU199
 672 0068 0022     		movs	r2, #0
ARM GAS  /tmp/cciKVt4B.s 			page 20


 673 006a EA54     		strb	r2, [r5, r3]
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 674              		.loc 1 350 43 is_stmt 1 discriminator 3 view .LVU200
 675 006c 0133     		adds	r3, r3, #1
 676              	.LVL63:
 677              	.L46:
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 678              		.loc 1 350 21 discriminator 1 view .LVU201
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 679              		.loc 1 350 5 is_stmt 0 discriminator 1 view .LVU202
 680 006e 3F2B     		cmp	r3, #63
 681 0070 FADD     		ble	.L47
 682              	.LBE6:
 352:Core/Src/nyan_os.c ****     }
 353:Core/Src/nyan_os.c **** 
 354:Core/Src/nyan_os.c ****     // Concatenate arguments with spaces
 355:Core/Src/nyan_os.c ****     char* current_pos = owners_name;
 683              		.loc 1 355 11 view .LVU203
 684 0072 A846     		mov	r8, r5
 685              	.LBB7:
 356:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 686              		.loc 1 356 14 view .LVU204
 687 0074 0126     		movs	r6, #1
 688              	.LVL64:
 689              		.loc 1 356 14 view .LVU205
 690 0076 00E0     		b	.L48
 691              	.LVL65:
 692              	.L49:
 693              		.loc 1 356 93 is_stmt 1 discriminator 2 view .LVU206
 694              		.loc 1 356 94 is_stmt 0 discriminator 2 view .LVU207
 695 0078 0136     		adds	r6, r6, #1
 696              	.LVL66:
 697              	.L48:
 698              		.loc 1 356 21 is_stmt 1 discriminator 1 view .LVU208
 699              		.loc 1 356 28 is_stmt 0 discriminator 1 view .LVU209
 700 007a 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 701 007e DBB2     		uxtb	r3, r3
 702              		.loc 1 356 5 discriminator 1 view .LVU210
 703 0080 B342     		cmp	r3, r6
 704 0082 21DD     		ble	.L50
 705              		.loc 1 356 80 discriminator 3 view .LVU211
 706 0084 06F1AA03 		add	r3, r6, #170
 707 0088 04EB8303 		add	r3, r4, r3, lsl #2
 708 008c 5B68     		ldr	r3, [r3, #4]
 709              		.loc 1 356 54 discriminator 3 view .LVU212
 710 008e DBB1     		cbz	r3, .L50
 357:Core/Src/nyan_os.c ****         strcpy(current_pos, (char *)nos->command_arg_buffer[i]);
 711              		.loc 1 357 9 is_stmt 1 view .LVU213
 712              		.loc 1 357 60 is_stmt 0 view .LVU214
 713 0090 06F1AA07 		add	r7, r6, #170
 714 0094 04EB8707 		add	r7, r4, r7, lsl #2
 715 0098 7968     		ldr	r1, [r7, #4]
 716              		.loc 1 357 9 view .LVU215
 717 009a 4046     		mov	r0, r8
 718 009c FFF7FEFF 		bl	strcpy
 719              	.LVL67:
 358:Core/Src/nyan_os.c ****         current_pos += strlen((char *)nos->command_arg_buffer[i]);
ARM GAS  /tmp/cciKVt4B.s 			page 21


 720              		.loc 1 358 9 is_stmt 1 view .LVU216
 721              		.loc 1 358 62 is_stmt 0 view .LVU217
 722 00a0 7868     		ldr	r0, [r7, #4]
 723              		.loc 1 358 24 view .LVU218
 724 00a2 FFF7FEFF 		bl	strlen
 725              	.LVL68:
 726              		.loc 1 358 21 view .LVU219
 727 00a6 8044     		add	r8, r8, r0
 728              	.LVL69:
 359:Core/Src/nyan_os.c **** 
 360:Core/Src/nyan_os.c ****         // Add a space after each argument, except the last one
 361:Core/Src/nyan_os.c ****         if (i < nos->command_buffer_num_args - 1 && nos->command_arg_buffer[i + 1] != NULL) {
 729              		.loc 1 361 9 is_stmt 1 view .LVU220
 730              		.loc 1 361 20 is_stmt 0 view .LVU221
 731 00a8 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 732              		.loc 1 361 46 view .LVU222
 733 00ac 013B     		subs	r3, r3, #1
 734              		.loc 1 361 12 view .LVU223
 735 00ae B342     		cmp	r3, r6
 736 00b0 E2DD     		ble	.L49
 737              		.loc 1 361 76 discriminator 1 view .LVU224
 738 00b2 06F1AB03 		add	r3, r6, #171
 739 00b6 04EB8303 		add	r3, r4, r3, lsl #2
 740 00ba 5B68     		ldr	r3, [r3, #4]
 741              		.loc 1 361 50 discriminator 1 view .LVU225
 742 00bc 002B     		cmp	r3, #0
 743 00be DBD0     		beq	.L49
 362:Core/Src/nyan_os.c ****             *current_pos = ' ';
 744              		.loc 1 362 13 is_stmt 1 view .LVU226
 745              		.loc 1 362 26 is_stmt 0 view .LVU227
 746 00c0 2023     		movs	r3, #32
 747 00c2 08F8013B 		strb	r3, [r8], #1
 748              	.LVL70:
 363:Core/Src/nyan_os.c ****             current_pos++;
 749              		.loc 1 363 13 is_stmt 1 view .LVU228
 750              		.loc 1 363 13 is_stmt 0 view .LVU229
 751 00c6 D7E7     		b	.L49
 752              	.L50:
 753              		.loc 1 363 13 view .LVU230
 754              	.LBE7:
 364:Core/Src/nyan_os.c ****         }
 365:Core/Src/nyan_os.c ****     }
 366:Core/Src/nyan_os.c **** 
 367:Core/Src/nyan_os.c ****     // First lets clear out the TX buff
 368:Core/Src/nyan_os.c ****     if(EepromFlushTxBuff(nos->eeprom) != EEPROM_SUCCESS){
 755              		.loc 1 368 5 is_stmt 1 view .LVU231
 756              		.loc 1 368 8 is_stmt 0 view .LVU232
 757 00c8 6068     		ldr	r0, [r4, #4]
 758 00ca FFF7FEFF 		bl	EepromFlushTxBuff
 759              	.LVL71:
 760 00ce 0646     		mov	r6, r0
 761              	.LVL72:
 762              		.loc 1 368 7 view .LVU233
 763 00d0 0128     		cmp	r0, #1
 764 00d2 1CD1     		bne	.L59
 765              	.LBB8:
 369:Core/Src/nyan_os.c ****         return NOS_FAILURE;
ARM GAS  /tmp/cciKVt4B.s 			page 22


 370:Core/Src/nyan_os.c ****     }
 371:Core/Src/nyan_os.c **** 
 372:Core/Src/nyan_os.c ****     // Second lets copy our new buffer over to the EEPROM driver
 373:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i){
 766              		.loc 1 373 14 view .LVU234
 767 00d4 0023     		movs	r3, #0
 768              	.L52:
 769              	.LVL73:
 770              		.loc 1 373 21 is_stmt 1 discriminator 1 view .LVU235
 771              		.loc 1 373 5 is_stmt 0 discriminator 1 view .LVU236
 772 00d6 3F2B     		cmp	r3, #63
 773 00d8 05DC     		bgt	.L62
 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 774              		.loc 1 374 9 is_stmt 1 discriminator 3 view .LVU237
 775              		.loc 1 374 12 is_stmt 0 discriminator 3 view .LVU238
 776 00da 6268     		ldr	r2, [r4, #4]
 777              		.loc 1 374 46 discriminator 3 view .LVU239
 778 00dc E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 779              		.loc 1 374 33 discriminator 3 view .LVU240
 780 00de 1A44     		add	r2, r2, r3
 781 00e0 5171     		strb	r1, [r2, #5]
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 782              		.loc 1 373 43 is_stmt 1 discriminator 3 view .LVU241
 783 00e2 0133     		adds	r3, r3, #1
 784              	.LVL74:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 785              		.loc 1 373 43 is_stmt 0 discriminator 3 view .LVU242
 786 00e4 F7E7     		b	.L52
 787              	.L62:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 788              		.loc 1 373 43 discriminator 3 view .LVU243
 789              	.LBE8:
 375:Core/Src/nyan_os.c ****     }
 376:Core/Src/nyan_os.c **** 
 377:Core/Src/nyan_os.c ****     // Free up the allocated memory
 378:Core/Src/nyan_os.c ****     free(owners_name);
 790              		.loc 1 378 5 is_stmt 1 view .LVU244
 791 00e6 2846     		mov	r0, r5
 792 00e8 FFF7FEFF 		bl	free
 793              	.LVL75:
 379:Core/Src/nyan_os.c **** 
 380:Core/Src/nyan_os.c ****     // Write the name to the eeprom, the delay exists to ensure the write, later the callback can b
 381:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 794              		.loc 1 381 5 view .LVU245
 795 00ec 6068     		ldr	r0, [r4, #4]
 796 00ee 4023     		movs	r3, #64
 797 00f0 2022     		movs	r2, #32
 798 00f2 0021     		movs	r1, #0
 799 00f4 FFF7FEFF 		bl	EepromWrite
 800              	.LVL76:
 382:Core/Src/nyan_os.c **** 
 383:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 801              		.loc 1 383 5 view .LVU246
 802              		.loc 1 383 12 is_stmt 0 view .LVU247
 803 00f8 02E0     		b	.L42
 804              	.LVL77:
 805              	.L54:
ARM GAS  /tmp/cciKVt4B.s 			page 23


 324:Core/Src/nyan_os.c ****     }
 806              		.loc 1 324 16 view .LVU248
 807 00fa 0026     		movs	r6, #0
 808 00fc 00E0     		b	.L42
 809              	.L55:
 328:Core/Src/nyan_os.c ****     }
 810              		.loc 1 328 16 view .LVU249
 811 00fe 0026     		movs	r6, #0
 812              	.LVL78:
 813              	.L42:
 384:Core/Src/nyan_os.c **** }
 814              		.loc 1 384 1 view .LVU250
 815 0100 3046     		mov	r0, r6
 816 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 817              	.LVL79:
 818              	.L56:
 340:Core/Src/nyan_os.c ****     }
 819              		.loc 1 340 16 view .LVU251
 820 0106 0026     		movs	r6, #0
 821              	.LVL80:
 340:Core/Src/nyan_os.c ****     }
 822              		.loc 1 340 16 view .LVU252
 823 0108 FAE7     		b	.L42
 824              	.LVL81:
 825              	.L58:
 346:Core/Src/nyan_os.c ****     }
 826              		.loc 1 346 16 view .LVU253
 827 010a 0026     		movs	r6, #0
 828              	.LVL82:
 346:Core/Src/nyan_os.c ****     }
 829              		.loc 1 346 16 view .LVU254
 830 010c F8E7     		b	.L42
 831              	.LVL83:
 832              	.L59:
 369:Core/Src/nyan_os.c ****     }
 833              		.loc 1 369 16 view .LVU255
 834 010e 0026     		movs	r6, #0
 835 0110 F6E7     		b	.L42
 836              		.cfi_endproc
 837              	.LFE155:
 839              		.section	.rodata.NyanExeWriteFpgaBitstream.str1.4,"aMS",%progbits,1
 840              		.align	2
 841              	.LC0:
 842 0000 25303278 		.ascii	"%02x\000"
 842      00
 843              		.section	.text.NyanExeWriteFpgaBitstream,"ax",%progbits
 844              		.align	1
 845              		.global	NyanExeWriteFpgaBitstream
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 850              	NyanExeWriteFpgaBitstream:
 851              	.LVL84:
 852              	.LFB156:
 385:Core/Src/nyan_os.c **** 
 386:Core/Src/nyan_os.c **** NyanReturn NyanExeWriteFpgaBitstream(volatile NyanOS* nos)
 387:Core/Src/nyan_os.c **** {
ARM GAS  /tmp/cciKVt4B.s 			page 24


 853              		.loc 1 387 1 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 232
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 389:Core/Src/nyan_os.c ****     if(nos->state == DIRECT_BUFFER_ACCESS)
 857              		.loc 1 389 5 view .LVU257
 858              		.loc 1 389 11 is_stmt 0 view .LVU258
 859 0000 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 860 0002 DBB2     		uxtb	r3, r3
 861              		.loc 1 389 7 view .LVU259
 862 0004 022B     		cmp	r3, #2
 863 0006 00F0E180 		beq	.L85
 387:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 864              		.loc 1 387 1 view .LVU260
 865 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 866              	.LCFI10:
 867              		.cfi_def_cfa_offset 28
 868              		.cfi_offset 4, -28
 869              		.cfi_offset 5, -24
 870              		.cfi_offset 6, -20
 871              		.cfi_offset 7, -16
 872              		.cfi_offset 8, -12
 873              		.cfi_offset 9, -8
 874              		.cfi_offset 14, -4
 875 000e BBB0     		sub	sp, sp, #236
 876              	.LCFI11:
 877              		.cfi_def_cfa_offset 264
 878 0010 0446     		mov	r4, r0
 390:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 391:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 392:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 879              		.loc 1 392 5 is_stmt 1 view .LVU261
 880              		.loc 1 392 14 is_stmt 0 view .LVU262
 881 0012 0423     		movs	r3, #4
 882 0014 4372     		strb	r3, [r0, #9]
 393:Core/Src/nyan_os.c **** 
 394:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 883              		.loc 1 394 5 is_stmt 1 view .LVU263
 884              		.loc 1 394 27 is_stmt 0 view .LVU264
 885 0016 0023     		movs	r3, #0
 886 0018 C0F8A432 		str	r3, [r0, #676]
 395:Core/Src/nyan_os.c ****     // Now we need to convert the arg 1 into an int - skip arg 0 because that is the command.
 396:Core/Src/nyan_os.c ****     nos->bytes_array_size = atoi((char *)nos->command_arg_buffer[1]);
 887              		.loc 1 396 5 is_stmt 1 view .LVU265
 888              		.loc 1 396 65 is_stmt 0 view .LVU266
 889 001c D0F8B002 		ldr	r0, [r0, #688]
 890              	.LVL85:
 891              		.loc 1 396 29 view .LVU267
 892 0020 FFF7FEFF 		bl	atoi
 893              	.LVL86:
 894              		.loc 1 396 27 view .LVU268
 895 0024 C4F8A402 		str	r0, [r4, #676]
 397:Core/Src/nyan_os.c ****     // Safety the size of the buffer to ensure that it doesn't exceed the size of a block 
 398:Core/Src/nyan_os.c ****     if(nos->bytes_array_size  > 0xFFFF) {
 896              		.loc 1 398 5 is_stmt 1 view .LVU269
 897              		.loc 1 398 11 is_stmt 0 view .LVU270
ARM GAS  /tmp/cciKVt4B.s 			page 25


 898 0028 D4F8A432 		ldr	r3, [r4, #676]
 899              		.loc 1 398 7 view .LVU271
 900 002c B3F5803F 		cmp	r3, #65536
 901 0030 18D2     		bcs	.L93
 399:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 400:Core/Src/nyan_os.c ****         nos->bytes_array_size = 0;
 401:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 402:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 403:Core/Src/nyan_os.c ****     }
 404:Core/Src/nyan_os.c ****     // Write the length of the bitstream we are accepting to the EEPROM - 16 bytes - 
 405:Core/Src/nyan_os.c ****     uint32_t size_array[4] = { 0x00, 0x00, 0x00, nos->bytes_array_size };
 902              		.loc 1 405 5 is_stmt 1 view .LVU272
 903              		.loc 1 405 14 is_stmt 0 view .LVU273
 904 0032 0023     		movs	r3, #0
 905 0034 3693     		str	r3, [sp, #216]
 906 0036 3793     		str	r3, [sp, #220]
 907 0038 3893     		str	r3, [sp, #224]
 908              		.loc 1 405 53 view .LVU274
 909 003a D4F8A432 		ldr	r3, [r4, #676]
 910              		.loc 1 405 14 view .LVU275
 911 003e 3993     		str	r3, [sp, #228]
 406:Core/Src/nyan_os.c ****     if(nos->eeprom->tx_inflight) {
 912              		.loc 1 406 5 is_stmt 1 view .LVU276
 913              		.loc 1 406 11 is_stmt 0 view .LVU277
 914 0040 6368     		ldr	r3, [r4, #4]
 915              		.loc 1 406 19 view .LVU278
 916 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 917              		.loc 1 406 7 view .LVU279
 918 0044 C3B9     		cbnz	r3, .L94
 919              	.LBB9:
 407:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 408:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size_tx_busy[0], sizeof(nyan_keys_wr
 409:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 410:Core/Src/nyan_os.c ****     }
 411:Core/Src/nyan_os.c ****     // Copy the data to the EEPROM buffer for writing
 412:Core/Src/nyan_os.c ****     for(short i = 0; i < sizeof(size_array); ++i) {
 920              		.loc 1 412 15 view .LVU280
 921 0046 0022     		movs	r2, #0
 922              	.L66:
 923              	.LVL87:
 924              		.loc 1 412 22 is_stmt 1 discriminator 1 view .LVU281
 925              		.loc 1 412 24 is_stmt 0 discriminator 1 view .LVU282
 926 0048 93B2     		uxth	r3, r2
 927              		.loc 1 412 5 discriminator 1 view .LVU283
 928 004a 0F2B     		cmp	r3, #15
 929 004c 1BD8     		bhi	.L95
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 930              		.loc 1 413 9 is_stmt 1 discriminator 3 view .LVU284
 931              		.loc 1 413 12 is_stmt 0 discriminator 3 view .LVU285
 932 004e 6168     		ldr	r1, [r4, #4]
 933              		.loc 1 413 56 discriminator 3 view .LVU286
 934 0050 02F1E800 		add	r0, r2, #232
 935 0054 6844     		add	r0, sp, r0
 936 0056 10F8100C 		ldrb	r0, [r0, #-16]	@ zero_extendqisi2
 937              		.loc 1 413 32 discriminator 3 view .LVU287
 938 005a 0A44     		add	r2, r2, r1
 939              	.LVL88:
ARM GAS  /tmp/cciKVt4B.s 			page 26


 940              		.loc 1 413 32 discriminator 3 view .LVU288
 941 005c 5071     		strb	r0, [r2, #5]
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 942              		.loc 1 412 46 is_stmt 1 discriminator 3 view .LVU289
 943 005e 0133     		adds	r3, r3, #1
 944              	.LVL89:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 945              		.loc 1 412 46 is_stmt 0 discriminator 3 view .LVU290
 946 0060 1AB2     		sxth	r2, r3
 947              	.LVL90:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 948              		.loc 1 412 46 discriminator 3 view .LVU291
 949 0062 F1E7     		b	.L66
 950              	.LVL91:
 951              	.L93:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 952              		.loc 1 412 46 discriminator 3 view .LVU292
 953              	.LBE9:
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 954              		.loc 1 400 9 is_stmt 1 view .LVU293
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 955              		.loc 1 400 31 is_stmt 0 view .LVU294
 956 0064 0025     		movs	r5, #0
 957 0066 C4F8A452 		str	r5, [r4, #676]
 401:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 958              		.loc 1 401 9 is_stmt 1 view .LVU295
 959 006a 4822     		movs	r2, #72
 960 006c 5949     		ldr	r1, .L99
 961 006e 2046     		mov	r0, r4
 962 0070 FFF7FEFF 		bl	NyanPrint
 963              	.LVL92:
 402:Core/Src/nyan_os.c ****     }
 964              		.loc 1 402 9 view .LVU296
 402:Core/Src/nyan_os.c ****     }
 965              		.loc 1 402 16 is_stmt 0 view .LVU297
 966 0074 2846     		mov	r0, r5
 967 0076 A6E0     		b	.L64
 968              	.L94:
 408:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 969              		.loc 1 408 9 is_stmt 1 view .LVU298
 970 0078 3722     		movs	r2, #55
 971 007a 5749     		ldr	r1, .L99+4
 972 007c 2046     		mov	r0, r4
 973 007e FFF7FEFF 		bl	NyanPrint
 974              	.LVL93:
 409:Core/Src/nyan_os.c ****     }
 975              		.loc 1 409 9 view .LVU299
 409:Core/Src/nyan_os.c ****     }
 976              		.loc 1 409 16 is_stmt 0 view .LVU300
 977 0082 0020     		movs	r0, #0
 978 0084 9FE0     		b	.L64
 979              	.LVL94:
 980              	.L95:
 414:Core/Src/nyan_os.c ****     }
 415:Core/Src/nyan_os.c ****     // Write the data to the eeprom - wait for the write to complete since this is DMA and order ma
 416:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_FPGA_BITSTREAM_LEN, SIZE_FPGA_BITSTREAM_LEN);
 981              		.loc 1 416 5 is_stmt 1 view .LVU301
ARM GAS  /tmp/cciKVt4B.s 			page 27


 982 0086 6068     		ldr	r0, [r4, #4]
 983 0088 1023     		movs	r3, #16
 984 008a B022     		movs	r2, #176
 985              	.LVL95:
 986              		.loc 1 416 5 is_stmt 0 view .LVU302
 987 008c 0021     		movs	r1, #0
 988 008e FFF7FEFF 		bl	EepromWrite
 989              	.LVL96:
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 990              		.loc 1 417 5 is_stmt 1 view .LVU303
 991              	.L68:
 418:Core/Src/nyan_os.c ****         // Wait while the TX is in flight as to avoid bogus writes;
 419:Core/Src/nyan_os.c ****     }
 992              		.loc 1 419 5 discriminator 1 view .LVU304
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 993              		.loc 1 417 10 discriminator 1 view .LVU305
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 994              		.loc 1 417 14 is_stmt 0 discriminator 1 view .LVU306
 995 0092 6368     		ldr	r3, [r4, #4]
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 996              		.loc 1 417 22 discriminator 1 view .LVU307
 997 0094 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 998              		.loc 1 417 10 discriminator 1 view .LVU308
 999 0096 002E     		cmp	r6, #0
 1000 0098 FBD1     		bne	.L68
 420:Core/Src/nyan_os.c **** 
 421:Core/Src/nyan_os.c ****     // Print the ready to accept bytes confirmation message - This does nothing because it's execut
 422:Core/Src/nyan_os.c ****     // NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_start[0], sizeof(nyan_keys_write_bitst
 423:Core/Src/nyan_os.c **** 
 424:Core/Src/nyan_os.c ****     // Lets allocate some memory to save this bitstream we are importing
 425:Core/Src/nyan_os.c ****     nos->bytes_array = (uint8_t*)malloc(nos->bytes_array_size * sizeof(uint8_t));
 1001              		.loc 1 425 5 is_stmt 1 view .LVU309
 1002              		.loc 1 425 44 is_stmt 0 view .LVU310
 1003 009a D4F8A402 		ldr	r0, [r4, #676]
 1004              		.loc 1 425 34 view .LVU311
 1005 009e FFF7FEFF 		bl	malloc
 1006              	.LVL97:
 1007              		.loc 1 425 22 view .LVU312
 1008 00a2 C4F8A802 		str	r0, [r4, #680]
 426:Core/Src/nyan_os.c ****     if(nos->bytes_array == NULL) {
 1009              		.loc 1 426 5 is_stmt 1 view .LVU313
 1010              		.loc 1 426 11 is_stmt 0 view .LVU314
 1011 00a6 D4F8A832 		ldr	r3, [r4, #680]
 1012              		.loc 1 426 7 view .LVU315
 1013 00aa BBB1     		cbz	r3, .L96
 427:Core/Src/nyan_os.c ****         // Handle memory allocation failure
 428:Core/Src/nyan_os.c ****         nos->state = READY; // or appropriate error state
 429:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 430:Core/Src/nyan_os.c ****     }
 431:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 432:Core/Src/nyan_os.c ****     nos->state = DIRECT_BUFFER_ACCESS;
 1014              		.loc 1 432 5 is_stmt 1 view .LVU316
 1015              		.loc 1 432 16 is_stmt 0 view .LVU317
 1016 00ac 0223     		movs	r3, #2
 1017 00ae 2372     		strb	r3, [r4, #8]
 433:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/cciKVt4B.s 			page 28


 434:Core/Src/nyan_os.c ****     while(nos->bytes_received != nos->bytes_array_size){
 1018              		.loc 1 434 5 is_stmt 1 view .LVU318
 1019              	.L70:
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 436:Core/Src/nyan_os.c ****         // The user can exit this loop by just filling the buffer up for now.
 437:Core/Src/nyan_os.c ****         // Enabling am abort sequence would be a next step
 438:Core/Src/nyan_os.c ****     }
 1020              		.loc 1 438 5 discriminator 1 view .LVU319
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1021              		.loc 1 434 10 discriminator 1 view .LVU320
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1022              		.loc 1 434 14 is_stmt 0 discriminator 1 view .LVU321
 1023 00b0 D4F8A022 		ldr	r2, [r4, #672]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1024              		.loc 1 434 37 discriminator 1 view .LVU322
 1025 00b4 D4F8A432 		ldr	r3, [r4, #676]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1026              		.loc 1 434 10 discriminator 1 view .LVU323
 1027 00b8 9A42     		cmp	r2, r3
 1028 00ba F9D1     		bne	.L70
 439:Core/Src/nyan_os.c **** 
 440:Core/Src/nyan_os.c ****     // Take a Sha256 Hash of the inputs for the user display
 441:Core/Src/nyan_os.c ****     BYTE buf[SHA256_BLOCK_SIZE];
 1029              		.loc 1 441 5 is_stmt 1 view .LVU324
 442:Core/Src/nyan_os.c ****     SHA256_CTX ctx;
 1030              		.loc 1 442 5 view .LVU325
 443:Core/Src/nyan_os.c ****     
 444:Core/Src/nyan_os.c ****     sha256_init(&ctx);
 1031              		.loc 1 444 5 view .LVU326
 1032 00bc 12A8     		add	r0, sp, #72
 1033 00be FFF7FEFF 		bl	sha256_init
 1034              	.LVL98:
 445:Core/Src/nyan_os.c ****     sha256_update(&ctx, nos->bytes_array, nos->bytes_array_size);
 1035              		.loc 1 445 5 view .LVU327
 1036              		.loc 1 445 28 is_stmt 0 view .LVU328
 1037 00c2 D4F8A812 		ldr	r1, [r4, #680]
 1038              		.loc 1 445 46 view .LVU329
 1039 00c6 D4F8A422 		ldr	r2, [r4, #676]
 1040              		.loc 1 445 5 view .LVU330
 1041 00ca 12A8     		add	r0, sp, #72
 1042 00cc FFF7FEFF 		bl	sha256_update
 1043              	.LVL99:
 446:Core/Src/nyan_os.c ****     sha256_final(&ctx, buf);
 1044              		.loc 1 446 5 is_stmt 1 view .LVU331
 1045 00d0 2EA9     		add	r1, sp, #184
 1046 00d2 12A8     		add	r0, sp, #72
 1047 00d4 FFF7FEFF 		bl	sha256_final
 1048              	.LVL100:
 447:Core/Src/nyan_os.c **** 
 448:Core/Src/nyan_os.c ****     // Print the sha256 output for the user to verify their bitstream
 449:Core/Src/nyan_os.c ****     char hexString[SHA256_BLOCK_SIZE * 2 + 1];
 1049              		.loc 1 449 5 view .LVU332
 450:Core/Src/nyan_os.c ****     for (int i = 0; i < SHA256_BLOCK_SIZE; i++) {
 1050              		.loc 1 450 5 view .LVU333
 1051              	.LBB10:
 1052              		.loc 1 450 10 view .LVU334
 1053              		.loc 1 450 14 is_stmt 0 view .LVU335
ARM GAS  /tmp/cciKVt4B.s 			page 29


 1054 00d8 0025     		movs	r5, #0
 1055              		.loc 1 450 5 view .LVU336
 1056 00da 0FE0     		b	.L71
 1057              	.LVL101:
 1058              	.L96:
 1059              		.loc 1 450 5 view .LVU337
 1060              	.LBE10:
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1061              		.loc 1 428 9 is_stmt 1 view .LVU338
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1062              		.loc 1 428 20 is_stmt 0 view .LVU339
 1063 00dc 0123     		movs	r3, #1
 1064 00de 2372     		strb	r3, [r4, #8]
 429:Core/Src/nyan_os.c ****     }
 1065              		.loc 1 429 9 is_stmt 1 view .LVU340
 429:Core/Src/nyan_os.c ****     }
 1066              		.loc 1 429 16 is_stmt 0 view .LVU341
 1067 00e0 0020     		movs	r0, #0
 1068 00e2 70E0     		b	.L64
 1069              	.LVL102:
 1070              	.L72:
 1071              	.LBB11:
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1072              		.loc 1 451 9 is_stmt 1 discriminator 3 view .LVU342
 1073              		.loc 1 451 47 is_stmt 0 discriminator 3 view .LVU343
 1074 00e4 05F1E803 		add	r3, r5, #232
 1075 00e8 6B44     		add	r3, sp, r3
 1076              		.loc 1 451 9 discriminator 3 view .LVU344
 1077 00ea 13F8302C 		ldrb	r2, [r3, #-48]	@ zero_extendqisi2
 1078 00ee 3B49     		ldr	r1, .L99+8
 1079 00f0 01AB     		add	r3, sp, #4
 1080 00f2 03EB4500 		add	r0, r3, r5, lsl #1
 1081 00f6 FFF7FEFF 		bl	sprintf
 1082              	.LVL103:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1083              		.loc 1 450 44 is_stmt 1 discriminator 3 view .LVU345
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1084              		.loc 1 450 45 is_stmt 0 discriminator 3 view .LVU346
 1085 00fa 0135     		adds	r5, r5, #1
 1086              	.LVL104:
 1087              	.L71:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1088              		.loc 1 450 21 is_stmt 1 discriminator 1 view .LVU347
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1089              		.loc 1 450 5 is_stmt 0 discriminator 1 view .LVU348
 1090 00fc 1F2D     		cmp	r5, #31
 1091 00fe F1DD     		ble	.L72
 1092              	.LBE11:
 452:Core/Src/nyan_os.c ****     }
 453:Core/Src/nyan_os.c ****     hexString[SHA256_BLOCK_SIZE * 2] = '\0';
 1093              		.loc 1 453 5 is_stmt 1 view .LVU349
 1094              		.loc 1 453 38 is_stmt 0 view .LVU350
 1095 0100 0023     		movs	r3, #0
 1096 0102 8DF84430 		strb	r3, [sp, #68]
 454:Core/Src/nyan_os.c ****     
 455:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&hexString[0], SHA256_BLOCK_SIZE * 2);
 1097              		.loc 1 455 5 is_stmt 1 view .LVU351
ARM GAS  /tmp/cciKVt4B.s 			page 30


 1098 0106 4022     		movs	r2, #64
 1099 0108 01A9     		add	r1, sp, #4
 1100 010a 2046     		mov	r0, r4
 1101 010c FFF7FEFF 		bl	NyanPrint
 1102              	.LVL105:
 456:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1103              		.loc 1 456 5 view .LVU352
 1104 0110 0322     		movs	r2, #3
 1105 0112 3349     		ldr	r1, .L99+12
 1106 0114 2046     		mov	r0, r4
 1107 0116 FFF7FEFF 		bl	NyanPrint
 1108              	.LVL106:
 457:Core/Src/nyan_os.c **** 
 458:Core/Src/nyan_os.c ****     // Calculate the number iterations 
 459:Core/Src/nyan_os.c ****     unsigned int r = nos->bytes_array_size % EEPROM_DRIVER_TX_BUF_SZ;
 1109              		.loc 1 459 5 view .LVU353
 1110              		.loc 1 459 25 is_stmt 0 view .LVU354
 1111 011a D4F8A432 		ldr	r3, [r4, #676]
 1112              	.LVL107:
 460:Core/Src/nyan_os.c ****     unsigned int q = nos->bytes_array_size / EEPROM_DRIVER_TX_BUF_SZ;
 1113              		.loc 1 460 5 is_stmt 1 view .LVU355
 1114              		.loc 1 460 25 is_stmt 0 view .LVU356
 1115 011e D4F8A472 		ldr	r7, [r4, #676]
 1116              		.loc 1 460 18 view .LVU357
 1117 0122 4FEAD718 		lsr	r8, r7, #7
 1118              	.LVL108:
 461:Core/Src/nyan_os.c ****     if(r > 0)
 1119              		.loc 1 461 5 is_stmt 1 view .LVU358
 1120              		.loc 1 461 7 is_stmt 0 view .LVU359
 1121 0126 13F07F0F 		tst	r3, #127
 1122 012a 01D0     		beq	.L73
 462:Core/Src/nyan_os.c ****         ++q;
 1123              		.loc 1 462 9 is_stmt 1 view .LVU360
 1124 012c 08F10108 		add	r8, r8, #1
 1125              	.LVL109:
 1126              	.L73:
 463:Core/Src/nyan_os.c ****     if (q == 0)
 1127              		.loc 1 463 5 view .LVU361
 1128              		.loc 1 463 8 is_stmt 0 view .LVU362
 1129 0130 B8F1000F 		cmp	r8, #0
 1130 0134 4CD0     		beq	.L87
 1131              	.LBB12:
 464:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 465:Core/Src/nyan_os.c **** 
 466:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the EEPROM, write, wait ...
 467:Core/Src/nyan_os.c ****     for(unsigned short page = 0; page < q; ++page) {
 1132              		.loc 1 467 24 view .LVU363
 1133 0136 0025     		movs	r5, #0
 1134              	.LVL110:
 1135              		.loc 1 467 24 view .LVU364
 1136 0138 31E0     		b	.L74
 1137              	.LVL111:
 1138              	.L76:
 1139              	.LBB13:
 1140              	.LBB14:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 469:Core/Src/nyan_os.c ****         bool txRetry = false;
ARM GAS  /tmp/cciKVt4B.s 			page 31


 470:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 471:Core/Src/nyan_os.c ****         EepromFlushTxBuff(nos->eeprom);
 472:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 473:Core/Src/nyan_os.c ****         for(uint8_t byte = 0; byte < EEPROM_DRIVER_TX_BUF_SZ; ++byte) {
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1141              		.loc 1 474 13 is_stmt 1 discriminator 3 view .LVU365
 1142              		.loc 1 474 44 is_stmt 0 discriminator 3 view .LVU366
 1143 013a D4F8A802 		ldr	r0, [r4, #680]
 1144              		.loc 1 474 89 discriminator 3 view .LVU367
 1145 013e 03EBC511 		add	r1, r3, r5, lsl #7
 1146              		.loc 1 474 16 discriminator 3 view .LVU368
 1147 0142 6268     		ldr	r2, [r4, #4]
 1148              		.loc 1 474 57 discriminator 3 view .LVU369
 1149 0144 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1150              		.loc 1 474 39 discriminator 3 view .LVU370
 1151 0146 1A44     		add	r2, r2, r3
 1152 0148 5171     		strb	r1, [r2, #5]
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1153              		.loc 1 473 63 is_stmt 1 discriminator 3 view .LVU371
 1154 014a 0133     		adds	r3, r3, #1
 1155              	.LVL112:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1156              		.loc 1 473 63 is_stmt 0 discriminator 3 view .LVU372
 1157 014c DBB2     		uxtb	r3, r3
 1158              	.LVL113:
 1159              	.L75:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1160              		.loc 1 473 31 is_stmt 1 discriminator 1 view .LVU373
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1161              		.loc 1 473 9 is_stmt 0 discriminator 1 view .LVU374
 1162 014e 13F0800F 		tst	r3, #128
 1163 0152 F2D0     		beq	.L76
 1164              	.LBE14:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1165              		.loc 1 469 14 view .LVU375
 1166 0154 B146     		mov	r9, r6
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1167              		.loc 1 468 14 view .LVU376
 1168 0156 3746     		mov	r7, r6
 1169              	.LVL114:
 1170              	.L79:
 475:Core/Src/nyan_os.c ****         }
 476:Core/Src/nyan_os.c ****         // Attempt to write the data to the EEPROM - Until the job is done.
 477:Core/Src/nyan_os.c ****         while(!txSuccess) {
 1171              		.loc 1 477 14 is_stmt 1 view .LVU377
 1172 0158 FFB9     		cbnz	r7, .L97
 478:Core/Src/nyan_os.c ****             if(EepromWrite(nos->eeprom, true, (EEPROM_DRIVER_TX_BUF_SZ * page) + ADDR_FPGA_BITSTREA
 1173              		.loc 1 478 13 view .LVU378
 1174              		.loc 1 478 16 is_stmt 0 view .LVU379
 1175 015a 6068     		ldr	r0, [r4, #4]
 1176 015c EA01     		lsls	r2, r5, #7
 1177 015e 8023     		movs	r3, #128
 1178 0160 12B2     		sxth	r2, r2
 1179 0162 0121     		movs	r1, #1
 1180 0164 FFF7FEFF 		bl	EepromWrite
 1181              	.LVL115:
 1182              		.loc 1 478 15 view .LVU380
ARM GAS  /tmp/cciKVt4B.s 			page 32


 1183 0168 0028     		cmp	r0, #0
 1184 016a F5D0     		beq	.L79
 1185              	.LVL116:
 1186              	.L78:
 479:Core/Src/nyan_os.c ****                 while(nos->eeprom->tx_inflight) {
 1187              		.loc 1 479 22 is_stmt 1 view .LVU381
 1188              		.loc 1 479 26 is_stmt 0 view .LVU382
 1189 016c 6368     		ldr	r3, [r4, #4]
 1190              		.loc 1 479 34 view .LVU383
 1191 016e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1192              		.loc 1 479 22 view .LVU384
 1193 0170 53B1     		cbz	r3, .L80
 480:Core/Src/nyan_os.c ****                     // Check for transmission success
 481:Core/Src/nyan_os.c ****                     if(nos->eeprom->tx_failed) {
 1194              		.loc 1 481 21 is_stmt 1 view .LVU385
 1195              		.loc 1 481 27 is_stmt 0 view .LVU386
 1196 0172 6368     		ldr	r3, [r4, #4]
 1197              		.loc 1 481 35 view .LVU387
 1198 0174 93F80390 		ldrb	r9, [r3, #3]	@ zero_extendqisi2
 1199              	.LVL117:
 1200              		.loc 1 481 23 view .LVU388
 1201 0178 B9F1000F 		cmp	r9, #0
 1202 017c F6D0     		beq	.L78
 482:Core/Src/nyan_os.c ****                         nos->eeprom->tx_inflight = false;
 1203              		.loc 1 482 25 is_stmt 1 view .LVU389
 1204              		.loc 1 482 28 is_stmt 0 view .LVU390
 1205 017e 6268     		ldr	r2, [r4, #4]
 1206              		.loc 1 482 50 view .LVU391
 1207 0180 0023     		movs	r3, #0
 1208 0182 9370     		strb	r3, [r2, #2]
 483:Core/Src/nyan_os.c ****                         nos->eeprom->tx_failed = false;
 1209              		.loc 1 483 25 is_stmt 1 view .LVU392
 1210              		.loc 1 483 28 is_stmt 0 view .LVU393
 1211 0184 6268     		ldr	r2, [r4, #4]
 1212              		.loc 1 483 48 view .LVU394
 1213 0186 D370     		strb	r3, [r2, #3]
 484:Core/Src/nyan_os.c ****                         txRetry = true;
 1214              		.loc 1 484 25 is_stmt 1 view .LVU395
 1215              	.LVL118:
 485:Core/Src/nyan_os.c ****                         break; // Break from the while loop on success
 1216              		.loc 1 485 25 view .LVU396
 1217              	.L80:
 486:Core/Src/nyan_os.c ****                     }
 487:Core/Src/nyan_os.c ****                     txRetry = false;
 488:Core/Src/nyan_os.c ****                 }
 489:Core/Src/nyan_os.c ****                 if(nos->eeprom->tx_inflight == 0 && txRetry == false) {
 1218              		.loc 1 489 17 view .LVU397
 1219              		.loc 1 489 23 is_stmt 0 view .LVU398
 1220 0188 6368     		ldr	r3, [r4, #4]
 1221              		.loc 1 489 31 view .LVU399
 1222 018a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1223              		.loc 1 489 19 view .LVU400
 1224 018c 002B     		cmp	r3, #0
 1225 018e E3D1     		bne	.L79
 1226              		.loc 1 489 50 discriminator 1 view .LVU401
 1227 0190 B9F1000F 		cmp	r9, #0
 1228 0194 E0D1     		bne	.L79
ARM GAS  /tmp/cciKVt4B.s 			page 33


 490:Core/Src/nyan_os.c ****                     txSuccess = true;
 1229              		.loc 1 490 31 view .LVU402
 1230 0196 0127     		movs	r7, #1
 1231              	.LVL119:
 1232              		.loc 1 490 31 view .LVU403
 1233 0198 DEE7     		b	.L79
 1234              	.LVL120:
 1235              	.L97:
 1236              		.loc 1 490 31 view .LVU404
 1237              	.LBE13:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1238              		.loc 1 467 44 is_stmt 1 discriminator 2 view .LVU405
 1239 019a 0135     		adds	r5, r5, #1
 1240              	.LVL121:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1241              		.loc 1 467 44 is_stmt 0 discriminator 2 view .LVU406
 1242 019c ADB2     		uxth	r5, r5
 1243              	.LVL122:
 1244              	.L74:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1245              		.loc 1 467 34 is_stmt 1 discriminator 1 view .LVU407
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1246              		.loc 1 467 5 is_stmt 0 discriminator 1 view .LVU408
 1247 019e 4545     		cmp	r5, r8
 1248 01a0 04D2     		bcs	.L98
 1249              	.LBB16:
 468:Core/Src/nyan_os.c ****         bool txRetry = false;
 1250              		.loc 1 468 9 is_stmt 1 view .LVU409
 1251              	.LVL123:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1252              		.loc 1 469 9 view .LVU410
 471:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1253              		.loc 1 471 9 view .LVU411
 1254 01a2 6068     		ldr	r0, [r4, #4]
 1255 01a4 FFF7FEFF 		bl	EepromFlushTxBuff
 1256              	.LVL124:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1257              		.loc 1 473 9 view .LVU412
 1258              	.LBB15:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1259              		.loc 1 473 13 view .LVU413
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1260              		.loc 1 473 21 is_stmt 0 view .LVU414
 1261 01a8 0023     		movs	r3, #0
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1262              		.loc 1 473 9 view .LVU415
 1263 01aa D0E7     		b	.L75
 1264              	.LVL125:
 1265              	.L98:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1266              		.loc 1 473 9 view .LVU416
 1267              	.LBE15:
 1268              	.LBE16:
 1269              	.LBE12:
 491:Core/Src/nyan_os.c ****                     txRetry = false;
 492:Core/Src/nyan_os.c ****                 }
 493:Core/Src/nyan_os.c ****             }
ARM GAS  /tmp/cciKVt4B.s 			page 34


 494:Core/Src/nyan_os.c ****         }
 495:Core/Src/nyan_os.c ****     }
 496:Core/Src/nyan_os.c ****     // Perform function cleanup maintenance
 497:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 1270              		.loc 1 497 5 is_stmt 1 view .LVU417
 1271              		.loc 1 497 27 is_stmt 0 view .LVU418
 1272 01ac 0025     		movs	r5, #0
 1273              	.LVL126:
 1274              		.loc 1 497 27 view .LVU419
 1275 01ae C4F8A452 		str	r5, [r4, #676]
 498:Core/Src/nyan_os.c ****     nos->bytes_received = 0;
 1276              		.loc 1 498 5 is_stmt 1 view .LVU420
 1277              		.loc 1 498 25 is_stmt 0 view .LVU421
 1278 01b2 C4F8A052 		str	r5, [r4, #672]
 499:Core/Src/nyan_os.c ****     free(nos->bytes_array);
 1279              		.loc 1 499 5 is_stmt 1 view .LVU422
 1280              		.loc 1 499 13 is_stmt 0 view .LVU423
 1281 01b6 D4F8A802 		ldr	r0, [r4, #680]
 1282              		.loc 1 499 5 view .LVU424
 1283 01ba FFF7FEFF 		bl	free
 1284              	.LVL127:
 500:Core/Src/nyan_os.c ****     nos->bytes_array = NULL;
 1285              		.loc 1 500 5 is_stmt 1 view .LVU425
 1286              		.loc 1 500 22 is_stmt 0 view .LVU426
 1287 01be C4F8A852 		str	r5, [r4, #680]
 501:Core/Src/nyan_os.c ****     nos->state = READY;
 1288              		.loc 1 501 5 is_stmt 1 view .LVU427
 1289              		.loc 1 501 16 is_stmt 0 view .LVU428
 1290 01c2 0120     		movs	r0, #1
 1291 01c4 2072     		strb	r0, [r4, #8]
 502:Core/Src/nyan_os.c ****     //NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_success[0], sizeof(nyan_keys_write_bits
 503:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1292              		.loc 1 503 5 is_stmt 1 view .LVU429
 1293              	.LVL128:
 1294              	.L64:
 504:Core/Src/nyan_os.c **** }
 1295              		.loc 1 504 1 is_stmt 0 view .LVU430
 1296 01c6 3BB0     		add	sp, sp, #236
 1297              	.LCFI12:
 1298              		.cfi_def_cfa_offset 28
 1299              		@ sp needed
 1300 01c8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1301              	.LVL129:
 1302              	.L85:
 1303              	.LCFI13:
 1304              		.cfi_def_cfa_offset 0
 1305              		.cfi_restore 4
 1306              		.cfi_restore 5
 1307              		.cfi_restore 6
 1308              		.cfi_restore 7
 1309              		.cfi_restore 8
 1310              		.cfi_restore 9
 1311              		.cfi_restore 14
 390:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 1312              		.loc 1 390 16 view .LVU431
 1313 01cc 0020     		movs	r0, #0
 1314              	.LVL130:
ARM GAS  /tmp/cciKVt4B.s 			page 35


 1315              		.loc 1 504 1 view .LVU432
 1316 01ce 7047     		bx	lr
 1317              	.LVL131:
 1318              	.L87:
 1319              	.LCFI14:
 1320              		.cfi_def_cfa_offset 264
 1321              		.cfi_offset 4, -28
 1322              		.cfi_offset 5, -24
 1323              		.cfi_offset 6, -20
 1324              		.cfi_offset 7, -16
 1325              		.cfi_offset 8, -12
 1326              		.cfi_offset 9, -8
 1327              		.cfi_offset 14, -4
 464:Core/Src/nyan_os.c **** 
 1328              		.loc 1 464 16 view .LVU433
 1329 01d0 0020     		movs	r0, #0
 1330 01d2 F8E7     		b	.L64
 1331              	.L100:
 1332              		.align	2
 1333              	.L99:
 1334 01d4 00000000 		.word	.LANCHOR5
 1335 01d8 00000000 		.word	.LANCHOR6
 1336 01dc 00000000 		.word	.LC0
 1337 01e0 00000000 		.word	.LANCHOR4
 1338              		.cfi_endproc
 1339              	.LFE156:
 1341              		.section	.text.NyanExecute,"ax",%progbits
 1342              		.align	1
 1343              		.global	NyanExecute
 1344              		.syntax unified
 1345              		.thumb
 1346              		.thumb_func
 1348              	NyanExecute:
 1349              	.LVL132:
 1350              	.LFB152:
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1351              		.loc 1 222 46 is_stmt 1 view -0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1355              		.loc 1 222 46 is_stmt 0 view .LVU435
 1356 0000 70B5     		push	{r4, r5, r6, lr}
 1357              	.LCFI15:
 1358              		.cfi_def_cfa_offset 16
 1359              		.cfi_offset 4, -16
 1360              		.cfi_offset 5, -12
 1361              		.cfi_offset 6, -8
 1362              		.cfi_offset 14, -4
 1363 0002 0446     		mov	r4, r0
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1364              		.loc 1 223 5 is_stmt 1 view .LVU436
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1365              		.loc 1 223 15 is_stmt 0 view .LVU437
 1366 0004 457A     		ldrb	r5, [r0, #9]	@ zero_extendqisi2
 1367 0006 EDB2     		uxtb	r5, r5
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
ARM GAS  /tmp/cciKVt4B.s 			page 36


 1368              		.loc 1 223 5 view .LVU438
 1369 0008 042D     		cmp	r5, #4
 1370 000a 4DD8     		bhi	.L102
 1371 000c DFE805F0 		tbb	[pc, r5]
 1372              	.L104:
 1373 0010 03       		.byte	(.L108-.L104)/2
 1374 0011 23       		.byte	(.L107-.L104)/2
 1375 0012 13       		.byte	(.L106-.L104)/2
 1376 0013 3A       		.byte	(.L105-.L104)/2
 1377 0014 50       		.byte	(.L109-.L104)/2
 1378 0015 00       		.p2align 1
 1379              	.L108:
 225:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1380              		.loc 1 225 13 is_stmt 1 view .LVU439
 1381 0016 FFF7FEFF 		bl	NyanExeGetinfo
 1382              	.LVL133:
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1383              		.loc 1 226 13 view .LVU440
 1384 001a 0322     		movs	r2, #3
 1385 001c 2649     		ldr	r1, .L111
 1386 001e 2046     		mov	r0, r4
 1387 0020 FFF7FEFF 		bl	NyanPrint
 1388              	.LVL134:
 227:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1389              		.loc 1 227 13 view .LVU441
 1390 0024 0F22     		movs	r2, #15
 1391 0026 2549     		ldr	r1, .L111+4
 1392 0028 2046     		mov	r0, r4
 1393 002a FFF7FEFF 		bl	NyanPrint
 1394              	.LVL135:
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1395              		.loc 1 228 13 view .LVU442
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1396              		.loc 1 228 22 is_stmt 0 view .LVU443
 1397 002e 0423     		movs	r3, #4
 1398 0030 6372     		strb	r3, [r4, #9]
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1399              		.loc 1 229 13 is_stmt 1 view .LVU444
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1400              		.loc 1 229 20 is_stmt 0 view .LVU445
 1401 0032 0125     		movs	r5, #1
 1402 0034 3DE0     		b	.L103
 1403              	.LVL136:
 1404              	.L106:
 231:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 1405              		.loc 1 231 13 is_stmt 1 view .LVU446
 1406 0036 FFF7FEFF 		bl	NyanExeSetOwner
 1407              	.LVL137:
 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1408              		.loc 1 232 13 view .LVU447
 1409 003a 2C22     		movs	r2, #44
 1410 003c 2049     		ldr	r1, .L111+8
 1411 003e 2046     		mov	r0, r4
 1412 0040 FFF7FEFF 		bl	NyanPrint
 1413              	.LVL138:
 233:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1414              		.loc 1 233 13 view .LVU448
ARM GAS  /tmp/cciKVt4B.s 			page 37


 1415 0044 0F22     		movs	r2, #15
 1416 0046 1D49     		ldr	r1, .L111+4
 1417 0048 2046     		mov	r0, r4
 1418 004a FFF7FEFF 		bl	NyanPrint
 1419              	.LVL139:
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1420              		.loc 1 234 13 view .LVU449
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1421              		.loc 1 234 22 is_stmt 0 view .LVU450
 1422 004e 0423     		movs	r3, #4
 1423 0050 6372     		strb	r3, [r4, #9]
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1424              		.loc 1 235 13 is_stmt 1 view .LVU451
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1425              		.loc 1 235 20 is_stmt 0 view .LVU452
 1426 0052 0125     		movs	r5, #1
 1427 0054 2DE0     		b	.L103
 1428              	.LVL140:
 1429              	.L107:
 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1430              		.loc 1 237 13 is_stmt 1 view .LVU453
 1431 0056 1B4E     		ldr	r6, .L111+12
 1432 0058 0021     		movs	r1, #0
 1433 005a 3046     		mov	r0, r6
 1434              	.LVL141:
 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1435              		.loc 1 237 13 is_stmt 0 view .LVU454
 1436 005c FFF7FEFF 		bl	HAL_TIM_OC_Stop_IT
 1437              	.LVL142:
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1438              		.loc 1 238 13 is_stmt 1 view .LVU455
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1439              		.loc 1 238 34 is_stmt 0 view .LVU456
 1440 0060 0123     		movs	r3, #1
 1441 0062 A372     		strb	r3, [r4, #10]
 239:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1442              		.loc 1 239 13 is_stmt 1 view .LVU457
 1443 0064 2046     		mov	r0, r4
 1444 0066 FFF7FEFF 		bl	NyanExeWriteFpgaBitstream
 1445              	.LVL143:
 240:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 1446              		.loc 1 240 13 view .LVU458
 1447 006a 0F22     		movs	r2, #15
 1448 006c 1349     		ldr	r1, .L111+4
 1449 006e 2046     		mov	r0, r4
 1450 0070 FFF7FEFF 		bl	NyanPrint
 1451              	.LVL144:
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1452              		.loc 1 241 13 view .LVU459
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1453              		.loc 1 241 34 is_stmt 0 view .LVU460
 1454 0074 0021     		movs	r1, #0
 1455 0076 A172     		strb	r1, [r4, #10]
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1456              		.loc 1 242 13 is_stmt 1 view .LVU461
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1457              		.loc 1 242 22 is_stmt 0 view .LVU462
ARM GAS  /tmp/cciKVt4B.s 			page 38


 1458 0078 0423     		movs	r3, #4
 1459 007a 6372     		strb	r3, [r4, #9]
 243:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1460              		.loc 1 243 13 is_stmt 1 view .LVU463
 1461 007c 3046     		mov	r0, r6
 1462 007e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1463              	.LVL145:
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1464              		.loc 1 244 13 view .LVU464
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1465              		.loc 1 244 20 is_stmt 0 view .LVU465
 1466 0082 16E0     		b	.L103
 1467              	.LVL146:
 1468              	.L105:
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1469              		.loc 1 248 13 is_stmt 1 view .LVU466
 1470 0084 2022     		movs	r2, #32
 1471 0086 1049     		ldr	r1, .L111+16
 1472 0088 FFF7FEFF 		bl	NyanPrint
 1473              	.LVL147:
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1474              		.loc 1 249 13 view .LVU467
 1475 008c 0322     		movs	r2, #3
 1476 008e 0A49     		ldr	r1, .L111
 1477 0090 2046     		mov	r0, r4
 1478 0092 FFF7FEFF 		bl	NyanPrint
 1479              	.LVL148:
 250:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1480              		.loc 1 250 13 view .LVU468
 1481 0096 0F22     		movs	r2, #15
 1482 0098 0849     		ldr	r1, .L111+4
 1483 009a 2046     		mov	r0, r4
 1484 009c FFF7FEFF 		bl	NyanPrint
 1485              	.LVL149:
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1486              		.loc 1 251 13 view .LVU469
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1487              		.loc 1 251 22 is_stmt 0 view .LVU470
 1488 00a0 0423     		movs	r3, #4
 1489 00a2 6372     		strb	r3, [r4, #9]
 252:Core/Src/nyan_os.c ****         default:
 1490              		.loc 1 252 13 is_stmt 1 view .LVU471
 252:Core/Src/nyan_os.c ****         default:
 1491              		.loc 1 252 20 is_stmt 0 view .LVU472
 1492 00a4 0125     		movs	r5, #1
 1493 00a6 04E0     		b	.L103
 1494              	.LVL150:
 1495              	.L102:
 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1496              		.loc 1 255 13 is_stmt 1 view .LVU473
 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1497              		.loc 1 255 22 is_stmt 0 view .LVU474
 1498 00a8 0423     		movs	r3, #4
 1499 00aa 4372     		strb	r3, [r0, #9]
 256:Core/Src/nyan_os.c ****     }
 1500              		.loc 1 256 13 is_stmt 1 view .LVU475
 256:Core/Src/nyan_os.c ****     }
ARM GAS  /tmp/cciKVt4B.s 			page 39


 1501              		.loc 1 256 20 is_stmt 0 view .LVU476
 1502 00ac 0025     		movs	r5, #0
 1503 00ae 00E0     		b	.L103
 1504              	.L109:
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1505              		.loc 1 223 5 view .LVU477
 1506 00b0 0125     		movs	r5, #1
 1507              	.LVL151:
 1508              	.L103:
 258:Core/Src/nyan_os.c **** 
 1509              		.loc 1 258 1 view .LVU478
 1510 00b2 2846     		mov	r0, r5
 1511 00b4 70BD     		pop	{r4, r5, r6, pc}
 1512              	.LVL152:
 1513              	.L112:
 258:Core/Src/nyan_os.c **** 
 1514              		.loc 1 258 1 view .LVU479
 1515 00b6 00BF     		.align	2
 1516              	.L111:
 1517 00b8 00000000 		.word	.LANCHOR4
 1518 00bc 00000000 		.word	.LANCHOR1
 1519 00c0 00000000 		.word	.LANCHOR7
 1520 00c4 00000000 		.word	htim8
 1521 00c8 00000000 		.word	.LANCHOR8
 1522              		.cfi_endproc
 1523              	.LFE152:
 1525              		.section	.text.FreeNyanCommandArgs,"ax",%progbits
 1526              		.align	1
 1527              		.global	FreeNyanCommandArgs
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1532              	FreeNyanCommandArgs:
 1533              	.LVL153:
 1534              	.LFB157:
 505:Core/Src/nyan_os.c **** 
 506:Core/Src/nyan_os.c **** void FreeNyanCommandArgs(volatile NyanOS* nos)
 507:Core/Src/nyan_os.c **** {
 1535              		.loc 1 507 1 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 508:Core/Src/nyan_os.c ****     if (!nos) {
 1539              		.loc 1 508 5 view .LVU481
 1540              		.loc 1 508 8 is_stmt 0 view .LVU482
 1541 0000 C0B1     		cbz	r0, .L119
 507:Core/Src/nyan_os.c ****     if (!nos) {
 1542              		.loc 1 507 1 view .LVU483
 1543 0002 70B5     		push	{r4, r5, r6, lr}
 1544              	.LCFI16:
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
 1550 0004 0646     		mov	r6, r0
 1551              	.LBB17:
ARM GAS  /tmp/cciKVt4B.s 			page 40


 509:Core/Src/nyan_os.c ****         return;
 510:Core/Src/nyan_os.c ****     }
 511:Core/Src/nyan_os.c **** 
 512:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; i++) {
 1552              		.loc 1 512 14 view .LVU484
 1553 0006 0024     		movs	r4, #0
 1554 0008 00E0     		b	.L115
 1555              	.LVL154:
 1556              	.L116:
 1557              		.loc 1 512 45 is_stmt 1 discriminator 2 view .LVU485
 1558              		.loc 1 512 46 is_stmt 0 discriminator 2 view .LVU486
 1559 000a 0134     		adds	r4, r4, #1
 1560              	.LVL155:
 1561              	.L115:
 1562              		.loc 1 512 21 is_stmt 1 discriminator 1 view .LVU487
 1563              		.loc 1 512 5 is_stmt 0 discriminator 1 view .LVU488
 1564 000c 092C     		cmp	r4, #9
 1565 000e 10DC     		bgt	.L122
 513:Core/Src/nyan_os.c ****         if (nos->command_arg_buffer[i] != NULL) {
 1566              		.loc 1 513 9 is_stmt 1 view .LVU489
 1567              		.loc 1 513 36 is_stmt 0 view .LVU490
 1568 0010 04F1AA03 		add	r3, r4, #170
 1569 0014 06EB8303 		add	r3, r6, r3, lsl #2
 1570 0018 5B68     		ldr	r3, [r3, #4]
 1571              		.loc 1 513 12 view .LVU491
 1572 001a 002B     		cmp	r3, #0
 1573 001c F5D0     		beq	.L116
 514:Core/Src/nyan_os.c ****             free(nos->command_arg_buffer[i]); 
 1574              		.loc 1 514 13 is_stmt 1 view .LVU492
 1575              		.loc 1 514 41 is_stmt 0 view .LVU493
 1576 001e 04F1AA05 		add	r5, r4, #170
 1577 0022 06EB8505 		add	r5, r6, r5, lsl #2
 1578 0026 6868     		ldr	r0, [r5, #4]
 1579              		.loc 1 514 13 view .LVU494
 1580 0028 FFF7FEFF 		bl	free
 1581              	.LVL156:
 515:Core/Src/nyan_os.c ****             nos->command_arg_buffer[i] = NULL;
 1582              		.loc 1 515 13 is_stmt 1 view .LVU495
 1583              		.loc 1 515 40 is_stmt 0 view .LVU496
 1584 002c 0023     		movs	r3, #0
 1585 002e 6B60     		str	r3, [r5, #4]
 1586 0030 EBE7     		b	.L116
 1587              	.L122:
 1588              		.loc 1 515 40 view .LVU497
 1589              	.LBE17:
 516:Core/Src/nyan_os.c ****         }
 517:Core/Src/nyan_os.c ****     }
 518:Core/Src/nyan_os.c **** }
 1590              		.loc 1 518 1 view .LVU498
 1591 0032 70BD     		pop	{r4, r5, r6, pc}
 1592              	.LVL157:
 1593              	.L119:
 1594              	.LCFI17:
 1595              		.cfi_def_cfa_offset 0
 1596              		.cfi_restore 4
 1597              		.cfi_restore 5
 1598              		.cfi_restore 6
ARM GAS  /tmp/cciKVt4B.s 			page 41


 1599              		.cfi_restore 14
 1600              		.loc 1 518 1 view .LVU499
 1601 0034 7047     		bx	lr
 1602              		.cfi_endproc
 1603              	.LFE157:
 1605              		.section	.rodata.NyanDecodeArgs.str1.4,"aMS",%progbits,1
 1606              		.align	2
 1607              	.LC1:
 1608 0000 2000     		.ascii	" \000"
 1609              		.section	.text.NyanDecodeArgs,"ax",%progbits
 1610              		.align	1
 1611              		.global	NyanDecodeArgs
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1616              	NyanDecodeArgs:
 1617              	.LVL158:
 1618              	.LFB153:
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1619              		.loc 1 261 1 is_stmt 1 view -0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1623              		.loc 1 262 5 view .LVU501
 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1624              		.loc 1 262 8 is_stmt 0 view .LVU502
 1625 0000 0028     		cmp	r0, #0
 1626 0002 46D0     		beq	.L131
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1627              		.loc 1 261 1 view .LVU503
 1628 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1629              	.LCFI18:
 1630              		.cfi_def_cfa_offset 24
 1631              		.cfi_offset 3, -24
 1632              		.cfi_offset 4, -20
 1633              		.cfi_offset 5, -16
 1634              		.cfi_offset 6, -12
 1635              		.cfi_offset 7, -8
 1636              		.cfi_offset 14, -4
 1637 0006 0646     		mov	r6, r0
 267:Core/Src/nyan_os.c **** 
 1638              		.loc 1 267 5 is_stmt 1 view .LVU504
 1639 0008 FFF7FEFF 		bl	FreeNyanCommandArgs
 1640              	.LVL159:
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1641              		.loc 1 269 5 view .LVU505
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1642              		.loc 1 269 44 is_stmt 0 view .LVU506
 1643 000c 0025     		movs	r5, #0
 1644 000e 86F88B50 		strb	r5, [r6, #139]
 270:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 1645              		.loc 1 270 5 is_stmt 1 view .LVU507
 1646              	.LVL160:
 271:Core/Src/nyan_os.c **** 
 1647              		.loc 1 271 5 view .LVU508
 271:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/cciKVt4B.s 			page 42


 1648              		.loc 1 271 34 is_stmt 0 view .LVU509
 1649 0012 06F10B07 		add	r7, r6, #11
 271:Core/Src/nyan_os.c **** 
 1650              		.loc 1 271 19 view .LVU510
 1651 0016 2049     		ldr	r1, .L140
 1652 0018 3846     		mov	r0, r7
 1653 001a FFF7FEFF 		bl	strtok
 1654              	.LVL161:
 1655 001e 0446     		mov	r4, r0
 1656              	.LVL162:
 273:Core/Src/nyan_os.c ****     while (token != NULL) {
 1657              		.loc 1 273 5 is_stmt 1 view .LVU511
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1658              		.loc 1 274 5 view .LVU512
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1659              		.loc 1 274 11 is_stmt 0 view .LVU513
 1660 0020 12E0     		b	.L125
 1661              	.LVL163:
 1662              	.L129:
 1663              	.LBB18:
 1664              	.LBB19:
 281:Core/Src/nyan_os.c ****                 }
 1665              		.loc 1 281 21 is_stmt 1 discriminator 3 view .LVU514
 281:Core/Src/nyan_os.c ****                 }
 1666              		.loc 1 281 49 is_stmt 0 discriminator 3 view .LVU515
 1667 0022 04F1AA03 		add	r3, r4, #170
 1668 0026 06EB8303 		add	r3, r6, r3, lsl #2
 1669 002a 5868     		ldr	r0, [r3, #4]
 281:Core/Src/nyan_os.c ****                 }
 1670              		.loc 1 281 21 discriminator 3 view .LVU516
 1671 002c FFF7FEFF 		bl	free
 1672              	.LVL164:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1673              		.loc 1 280 48 is_stmt 1 discriminator 3 view .LVU517
 1674 0030 0134     		adds	r4, r4, #1
 1675              	.LVL165:
 1676              	.L127:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1677              		.loc 1 280 33 discriminator 1 view .LVU518
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1678              		.loc 1 280 17 is_stmt 0 discriminator 1 view .LVU519
 1679 0032 A542     		cmp	r5, r4
 1680 0034 F5DC     		bgt	.L129
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1681              		.loc 1 280 17 discriminator 1 view .LVU520
 1682              	.LBE19:
 283:Core/Src/nyan_os.c ****             }
 1683              		.loc 1 283 24 view .LVU521
 1684 0036 0020     		movs	r0, #0
 1685 0038 2AE0     		b	.L124
 1686              	.LVL166:
 1687              	.L139:
 1688              	.LBB20:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1689              		.loc 1 280 26 view .LVU522
 1690 003a 0024     		movs	r4, #0
 1691              	.LVL167:
ARM GAS  /tmp/cciKVt4B.s 			page 43


 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1692              		.loc 1 280 26 view .LVU523
 1693 003c F9E7     		b	.L127
 1694              	.LVL168:
 1695              	.L126:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1696              		.loc 1 280 26 view .LVU524
 1697              	.LBE20:
 1698              	.LBE18:
 288:Core/Src/nyan_os.c ****     }
 1699              		.loc 1 288 9 is_stmt 1 view .LVU525
 288:Core/Src/nyan_os.c ****     }
 1700              		.loc 1 288 17 is_stmt 0 view .LVU526
 1701 003e 1649     		ldr	r1, .L140
 1702 0040 0020     		movs	r0, #0
 1703 0042 FFF7FEFF 		bl	strtok
 1704              	.LVL169:
 1705 0046 0446     		mov	r4, r0
 1706              	.LVL170:
 1707              	.L125:
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1708              		.loc 1 274 11 is_stmt 1 view .LVU527
 1709 0048 CCB1     		cbz	r4, .L138
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1710              		.loc 1 275 9 view .LVU528
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1711              		.loc 1 275 12 is_stmt 0 view .LVU529
 1712 004a 092D     		cmp	r5, #9
 1713 004c F7DC     		bgt	.L126
 1714              	.LBB21:
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1715              		.loc 1 276 13 is_stmt 1 view .LVU530
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1716              		.loc 1 276 34 is_stmt 0 view .LVU531
 1717 004e 2046     		mov	r0, r4
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1718              		.loc 1 276 34 view .LVU532
 1719 0050 FFF7FEFF 		bl	strlen
 1720              	.LVL171:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1721              		.loc 1 277 13 is_stmt 1 view .LVU533
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1722              		.loc 1 277 50 is_stmt 0 view .LVU534
 1723 0054 0130     		adds	r0, r0, #1
 1724              	.LVL172:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1725              		.loc 1 277 50 view .LVU535
 1726 0056 FFF7FEFF 		bl	malloc
 1727              	.LVL173:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1728              		.loc 1 277 48 view .LVU536
 1729 005a 05F1AA03 		add	r3, r5, #170
 1730 005e 06EB8303 		add	r3, r6, r3, lsl #2
 1731 0062 5860     		str	r0, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1732              		.loc 1 278 13 is_stmt 1 view .LVU537
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
ARM GAS  /tmp/cciKVt4B.s 			page 44


 1733              		.loc 1 278 40 is_stmt 0 view .LVU538
 1734 0064 5B68     		ldr	r3, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1735              		.loc 1 278 16 view .LVU539
 1736 0066 002B     		cmp	r3, #0
 1737 0068 E7D0     		beq	.L139
 285:Core/Src/nyan_os.c ****             arg_count++;
 1738              		.loc 1 285 13 is_stmt 1 view .LVU540
 285:Core/Src/nyan_os.c ****             arg_count++;
 1739              		.loc 1 285 51 is_stmt 0 view .LVU541
 1740 006a 05F1AA03 		add	r3, r5, #170
 1741 006e 06EB8303 		add	r3, r6, r3, lsl #2
 1742 0072 5868     		ldr	r0, [r3, #4]
 285:Core/Src/nyan_os.c ****             arg_count++;
 1743              		.loc 1 285 13 view .LVU542
 1744 0074 2146     		mov	r1, r4
 1745 0076 FFF7FEFF 		bl	strcpy
 1746              	.LVL174:
 286:Core/Src/nyan_os.c ****         }
 1747              		.loc 1 286 13 is_stmt 1 view .LVU543
 286:Core/Src/nyan_os.c ****         }
 1748              		.loc 1 286 22 is_stmt 0 view .LVU544
 1749 007a 0135     		adds	r5, r5, #1
 1750              	.LVL175:
 286:Core/Src/nyan_os.c ****         }
 1751              		.loc 1 286 22 view .LVU545
 1752 007c DFE7     		b	.L126
 1753              	.LVL176:
 1754              	.L138:
 286:Core/Src/nyan_os.c ****         }
 1755              		.loc 1 286 22 view .LVU546
 1756              	.LBE21:
 291:Core/Src/nyan_os.c **** 
 1757              		.loc 1 291 5 is_stmt 1 view .LVU547
 291:Core/Src/nyan_os.c **** 
 1758              		.loc 1 291 34 is_stmt 0 view .LVU548
 1759 007e EDB2     		uxtb	r5, r5
 1760              	.LVL177:
 291:Core/Src/nyan_os.c **** 
 1761              		.loc 1 291 34 view .LVU549
 1762 0080 86F88D50 		strb	r5, [r6, #141]
 294:Core/Src/nyan_os.c **** 
 1763              		.loc 1 294 5 is_stmt 1 view .LVU550
 1764 0084 8122     		movs	r2, #129
 1765 0086 0021     		movs	r1, #0
 1766 0088 3846     		mov	r0, r7
 1767              	.LVL178:
 294:Core/Src/nyan_os.c **** 
 1768              		.loc 1 294 5 is_stmt 0 view .LVU551
 1769 008a FFF7FEFF 		bl	memset
 1770              	.LVL179:
 296:Core/Src/nyan_os.c **** }
 1771              		.loc 1 296 5 is_stmt 1 view .LVU552
 296:Core/Src/nyan_os.c **** }
 1772              		.loc 1 296 12 is_stmt 0 view .LVU553
 1773 008e 0120     		movs	r0, #1
 1774              	.LVL180:
ARM GAS  /tmp/cciKVt4B.s 			page 45


 1775              	.L124:
 297:Core/Src/nyan_os.c **** 
 1776              		.loc 1 297 1 view .LVU554
 1777 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1778              	.LVL181:
 1779              	.L131:
 1780              	.LCFI19:
 1781              		.cfi_def_cfa_offset 0
 1782              		.cfi_restore 3
 1783              		.cfi_restore 4
 1784              		.cfi_restore 5
 1785              		.cfi_restore 6
 1786              		.cfi_restore 7
 1787              		.cfi_restore 14
 263:Core/Src/nyan_os.c ****     }
 1788              		.loc 1 263 16 view .LVU555
 1789 0092 0020     		movs	r0, #0
 1790              	.LVL182:
 297:Core/Src/nyan_os.c **** 
 1791              		.loc 1 297 1 view .LVU556
 1792 0094 7047     		bx	lr
 1793              	.L141:
 1794 0096 00BF     		.align	2
 1795              	.L140:
 1796 0098 00000000 		.word	.LC1
 1797              		.cfi_endproc
 1798              	.LFE153:
 1800              		.section	.text.NyanDecode,"ax",%progbits
 1801              		.align	1
 1802              		.global	NyanDecode
 1803              		.syntax unified
 1804              		.thumb
 1805              		.thumb_func
 1807              	NyanDecode:
 1808              	.LVL183:
 1809              	.LFB151:
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1810              		.loc 1 201 1 is_stmt 1 view -0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1814              		.loc 1 201 1 is_stmt 0 view .LVU558
 1815 0000 70B5     		push	{r4, r5, r6, lr}
 1816              	.LCFI20:
 1817              		.cfi_def_cfa_offset 16
 1818              		.cfi_offset 4, -16
 1819              		.cfi_offset 5, -12
 1820              		.cfi_offset 6, -8
 1821              		.cfi_offset 14, -4
 1822 0002 0546     		mov	r5, r0
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1823              		.loc 1 203 5 is_stmt 1 view .LVU559
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1824              		.loc 1 203 14 is_stmt 0 view .LVU560
 1825 0004 0423     		movs	r3, #4
 1826 0006 4372     		strb	r3, [r0, #9]
ARM GAS  /tmp/cciKVt4B.s 			page 46


 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1827              		.loc 1 205 5 is_stmt 1 view .LVU561
 1828              	.LBB22:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1829              		.loc 1 205 10 view .LVU562
 1830              	.LVL184:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1831              		.loc 1 205 18 is_stmt 0 view .LVU563
 1832 0008 0024     		movs	r4, #0
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1833              		.loc 1 205 5 view .LVU564
 1834 000a 03E0     		b	.L143
 1835              	.LVL185:
 1836              	.L144:
 1837              	.LBB23:
 214:Core/Src/nyan_os.c ****         }
 1838              		.loc 1 214 13 is_stmt 1 discriminator 2 view .LVU565
 214:Core/Src/nyan_os.c ****         }
 1839              		.loc 1 214 22 is_stmt 0 discriminator 2 view .LVU566
 1840 000c 0323     		movs	r3, #3
 1841 000e 6B72     		strb	r3, [r5, #9]
 1842              	.LBE23:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1843              		.loc 1 205 61 is_stmt 1 discriminator 2 view .LVU567
 1844 0010 0134     		adds	r4, r4, #1
 1845              	.LVL186:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1846              		.loc 1 205 61 is_stmt 0 discriminator 2 view .LVU568
 1847 0012 E4B2     		uxtb	r4, r4
 1848              	.LVL187:
 1849              	.L143:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1850              		.loc 1 205 31 is_stmt 1 discriminator 1 view .LVU569
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1851              		.loc 1 205 5 is_stmt 0 discriminator 1 view .LVU570
 1852 0014 022C     		cmp	r4, #2
 1853 0016 13D8     		bhi	.L145
 1854              	.LBB24:
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1855              		.loc 1 206 9 is_stmt 1 view .LVU571
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1856              		.loc 1 206 30 is_stmt 0 view .LVU572
 1857 0018 0A4B     		ldr	r3, .L148
 1858 001a 53F82460 		ldr	r6, [r3, r4, lsl #2]
 1859 001e 3046     		mov	r0, r6
 1860 0020 FFF7FEFF 		bl	strlen
 1861              	.LVL188:
 1862 0024 0246     		mov	r2, r0
 1863              	.LVL189:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1864              		.loc 1 208 9 is_stmt 1 view .LVU573
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1865              		.loc 1 208 12 is_stmt 0 view .LVU574
 1866 0026 8028     		cmp	r0, #128
 1867 0028 F0D8     		bhi	.L144
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1868              		.loc 1 208 49 discriminator 1 view .LVU575
ARM GAS  /tmp/cciKVt4B.s 			page 47


 1869 002a 3146     		mov	r1, r6
 1870 002c 05F10B00 		add	r0, r5, #11
 1871              	.LVL190:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1872              		.loc 1 208 49 discriminator 1 view .LVU576
 1873 0030 FFF7FEFF 		bl	memcmp
 1874              	.LVL191:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1875              		.loc 1 208 46 discriminator 1 view .LVU577
 1876 0034 0028     		cmp	r0, #0
 1877 0036 E9D1     		bne	.L144
 209:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 1878              		.loc 1 209 13 is_stmt 1 view .LVU578
 1879 0038 2846     		mov	r0, r5
 1880 003a FFF7FEFF 		bl	NyanDecodeArgs
 1881              	.LVL192:
 211:Core/Src/nyan_os.c ****             break;
 1882              		.loc 1 211 13 view .LVU579
 211:Core/Src/nyan_os.c ****             break;
 1883              		.loc 1 211 22 is_stmt 0 view .LVU580
 1884 003e 6C72     		strb	r4, [r5, #9]
 212:Core/Src/nyan_os.c ****         } else {
 1885              		.loc 1 212 13 is_stmt 1 view .LVU581
 1886              	.L145:
 212:Core/Src/nyan_os.c ****         } else {
 1887              		.loc 1 212 13 is_stmt 0 view .LVU582
 1888              	.LBE24:
 1889              	.LBE22:
 219:Core/Src/nyan_os.c **** }
 1890              		.loc 1 219 5 is_stmt 1 view .LVU583
 220:Core/Src/nyan_os.c **** 
 1891              		.loc 1 220 1 is_stmt 0 view .LVU584
 1892 0040 0120     		movs	r0, #1
 1893 0042 70BD     		pop	{r4, r5, r6, pc}
 1894              	.LVL193:
 1895              	.L149:
 220:Core/Src/nyan_os.c **** 
 1896              		.loc 1 220 1 view .LVU585
 1897              		.align	2
 1898              	.L148:
 1899 0044 00000000 		.word	.LANCHOR9
 1900              		.cfi_endproc
 1901              	.LFE151:
 1903              		.section	.text.FreeNyanString,"ax",%progbits
 1904              		.align	1
 1905              		.global	FreeNyanString
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1910              	FreeNyanString:
 1911              	.LVL194:
 1912              	.LFB158:
 519:Core/Src/nyan_os.c **** 
 520:Core/Src/nyan_os.c **** void FreeNyanString(NyanString* nyanString)
 521:Core/Src/nyan_os.c **** {
 1913              		.loc 1 521 1 is_stmt 1 view -0
 1914              		.cfi_startproc
ARM GAS  /tmp/cciKVt4B.s 			page 48


 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917              		.loc 1 521 1 is_stmt 0 view .LVU587
 1918 0000 10B5     		push	{r4, lr}
 1919              	.LCFI21:
 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 4, -8
 1922              		.cfi_offset 14, -4
 1923 0002 0446     		mov	r4, r0
 522:Core/Src/nyan_os.c ****     // Clear the memory contents
 523:Core/Src/nyan_os.c ****     for (uint32_t i = 0; i < nyanString->size; ++i) {
 1924              		.loc 1 523 5 is_stmt 1 view .LVU588
 1925              	.LBB25:
 1926              		.loc 1 523 10 view .LVU589
 1927              	.LVL195:
 1928              		.loc 1 523 19 is_stmt 0 view .LVU590
 1929 0004 0023     		movs	r3, #0
 1930              		.loc 1 523 5 view .LVU591
 1931 0006 03E0     		b	.L151
 1932              	.LVL196:
 1933              	.L152:
 524:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1934              		.loc 1 524 9 is_stmt 1 discriminator 3 view .LVU592
 1935              		.loc 1 524 19 is_stmt 0 discriminator 3 view .LVU593
 1936 0008 2268     		ldr	r2, [r4]
 1937              		.loc 1 524 32 discriminator 3 view .LVU594
 1938 000a 0021     		movs	r1, #0
 1939 000c D154     		strb	r1, [r2, r3]
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1940              		.loc 1 523 48 is_stmt 1 discriminator 3 view .LVU595
 1941 000e 0133     		adds	r3, r3, #1
 1942              	.LVL197:
 1943              	.L151:
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1944              		.loc 1 523 26 discriminator 1 view .LVU596
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1945              		.loc 1 523 40 is_stmt 0 discriminator 1 view .LVU597
 1946 0010 6268     		ldr	r2, [r4, #4]
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1947              		.loc 1 523 5 discriminator 1 view .LVU598
 1948 0012 9A42     		cmp	r2, r3
 1949 0014 F8D8     		bhi	.L152
 1950              	.LBE25:
 525:Core/Src/nyan_os.c ****     }
 526:Core/Src/nyan_os.c ****     // Free up the pointer and memory
 527:Core/Src/nyan_os.c ****     free(nyanString->p_array);
 1951              		.loc 1 527 5 is_stmt 1 view .LVU599
 1952 0016 2068     		ldr	r0, [r4]
 1953              	.LVL198:
 1954              		.loc 1 527 5 is_stmt 0 view .LVU600
 1955 0018 FFF7FEFF 		bl	free
 1956              	.LVL199:
 528:Core/Src/nyan_os.c ****     nyanString->p_array = NULL;
 1957              		.loc 1 528 5 is_stmt 1 view .LVU601
 1958              		.loc 1 528 25 is_stmt 0 view .LVU602
 1959 001c 0023     		movs	r3, #0
 1960 001e 2360     		str	r3, [r4]
ARM GAS  /tmp/cciKVt4B.s 			page 49


 529:Core/Src/nyan_os.c ****     nyanString->size = 0;
 1961              		.loc 1 529 5 is_stmt 1 view .LVU603
 1962              		.loc 1 529 22 is_stmt 0 view .LVU604
 1963 0020 6360     		str	r3, [r4, #4]
 530:Core/Src/nyan_os.c **** }
 1964              		.loc 1 530 1 view .LVU605
 1965 0022 10BD     		pop	{r4, pc}
 1966              		.loc 1 530 1 view .LVU606
 1967              		.cfi_endproc
 1968              	.LFE158:
 1970              		.section	.text.ClearNyanCommandBuffer,"ax",%progbits
 1971              		.align	1
 1972              		.global	ClearNyanCommandBuffer
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1977              	ClearNyanCommandBuffer:
 1978              	.LVL200:
 1979              	.LFB159:
 531:Core/Src/nyan_os.c **** 
 532:Core/Src/nyan_os.c **** void ClearNyanCommandBuffer(volatile NyanOS* nos)
 533:Core/Src/nyan_os.c **** {
 1980              		.loc 1 533 1 is_stmt 1 view -0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              		.loc 1 533 1 is_stmt 0 view .LVU608
 1985 0000 08B5     		push	{r3, lr}
 1986              	.LCFI22:
 1987              		.cfi_def_cfa_offset 8
 1988              		.cfi_offset 3, -8
 1989              		.cfi_offset 14, -4
 534:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1990              		.loc 1 534 5 is_stmt 1 view .LVU609
 1991              		.loc 1 534 29 is_stmt 0 view .LVU610
 1992 0002 0021     		movs	r1, #0
 1993 0004 80F88C10 		strb	r1, [r0, #140]
 535:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 1994              		.loc 1 535 5 is_stmt 1 view .LVU611
 1995 0008 8122     		movs	r2, #129
 1996 000a 0B30     		adds	r0, r0, #11
 1997              	.LVL201:
 1998              		.loc 1 535 5 is_stmt 0 view .LVU612
 1999 000c FFF7FEFF 		bl	memset
 2000              	.LVL202:
 536:Core/Src/nyan_os.c **** };...
 2001              		.loc 1 536 1 view .LVU613
 2002 0010 08BD     		pop	{r3, pc}
 2003              		.cfi_endproc
 2004              	.LFE159:
 2006              		.section	.text.NyanOsInit,"ax",%progbits
 2007              		.align	1
 2008              		.global	NyanOsInit
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2013              	NyanOsInit:
ARM GAS  /tmp/cciKVt4B.s 			page 50


 2014              	.LVL203:
 2015              	.LFB146:
  21:Core/Src/nyan_os.c **** {
 2016              		.loc 1 21 1 is_stmt 1 view -0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
  21:Core/Src/nyan_os.c **** {
 2020              		.loc 1 21 1 is_stmt 0 view .LVU615
 2021 0000 38B5     		push	{r3, r4, r5, lr}
 2022              	.LCFI23:
 2023              		.cfi_def_cfa_offset 16
 2024              		.cfi_offset 3, -16
 2025              		.cfi_offset 4, -12
 2026              		.cfi_offset 5, -8
 2027              		.cfi_offset 14, -4
 2028 0002 0546     		mov	r5, r0
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2029              		.loc 1 23 5 is_stmt 1 view .LVU616
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2030              		.loc 1 23 16 is_stmt 0 view .LVU617
 2031 0004 0123     		movs	r3, #1
 2032 0006 0372     		strb	r3, [r0, #8]
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2033              		.loc 1 24 5 is_stmt 1 view .LVU618
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2034              		.loc 1 24 14 is_stmt 0 view .LVU619
 2035 0008 0423     		movs	r3, #4
 2036 000a 4372     		strb	r3, [r0, #9]
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2037              		.loc 1 27 5 is_stmt 1 view .LVU620
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2038              		.loc 1 27 34 is_stmt 0 view .LVU621
 2039 000c 0024     		movs	r4, #0
 2040 000e 80F88D40 		strb	r4, [r0, #141]
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2041              		.loc 1 28 5 is_stmt 1 view .LVU622
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2042              		.loc 1 28 29 is_stmt 0 view .LVU623
 2043 0012 80F88C40 		strb	r4, [r0, #140]
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2044              		.loc 1 29 5 is_stmt 1 view .LVU624
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2045              		.loc 1 29 23 is_stmt 0 view .LVU625
 2046 0016 80F89C42 		strb	r4, [r0, #668]
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2047              		.loc 1 30 5 is_stmt 1 view .LVU626
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2048              		.loc 1 30 26 is_stmt 0 view .LVU627
 2049 001a 80F89140 		strb	r4, [r0, #145]
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2050              		.loc 1 31 5 is_stmt 1 view .LVU628
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2051              		.loc 1 31 34 is_stmt 0 view .LVU629
 2052 001e 80F89240 		strb	r4, [r0, #146]
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2053              		.loc 1 32 5 is_stmt 1 view .LVU630
ARM GAS  /tmp/cciKVt4B.s 			page 51


  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2054              		.loc 1 32 19 is_stmt 0 view .LVU631
 2055 0022 80F89340 		strb	r4, [r0, #147]
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2056              		.loc 1 33 5 is_stmt 1 view .LVU632
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2057              		.loc 1 33 17 is_stmt 0 view .LVU633
 2058 0026 80F88E40 		strb	r4, [r0, #142]
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2059              		.loc 1 36 5 is_stmt 1 view .LVU634
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2060              		.loc 1 36 17 is_stmt 0 view .LVU635
 2061 002a 4160     		str	r1, [r0, #4]
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
 2062              		.loc 1 39 5 is_stmt 1 view .LVU636
 2063 002c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2064              	.LVL204:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2065              		.loc 1 42 5 view .LVU637
 2066              	.LBB26:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2067              		.loc 1 42 10 view .LVU638
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2068              		.loc 1 42 14 is_stmt 0 view .LVU639
 2069 0030 2346     		mov	r3, r4
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2070              		.loc 1 42 5 view .LVU640
 2071 0032 06E0     		b	.L157
 2072              	.LVL205:
 2073              	.L158:
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2074              		.loc 1 43 9 is_stmt 1 discriminator 3 view .LVU641
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2075              		.loc 1 43 36 is_stmt 0 discriminator 3 view .LVU642
 2076 0034 03F1AA02 		add	r2, r3, #170
 2077 0038 05EB8202 		add	r2, r5, r2, lsl #2
 2078 003c 0021     		movs	r1, #0
 2079 003e 5160     		str	r1, [r2, #4]
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2080              		.loc 1 42 45 is_stmt 1 discriminator 3 view .LVU643
 2081 0040 0133     		adds	r3, r3, #1
 2082              	.LVL206:
 2083              	.L157:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2084              		.loc 1 42 21 discriminator 1 view .LVU644
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2085              		.loc 1 42 5 is_stmt 0 discriminator 1 view .LVU645
 2086 0042 092B     		cmp	r3, #9
 2087 0044 F6DD     		ble	.L158
 2088              	.LBE26:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2089              		.loc 1 47 5 is_stmt 1 view .LVU646
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2090              		.loc 1 47 28 is_stmt 0 view .LVU647
 2091 0046 0023     		movs	r3, #0
 2092              	.LVL207:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
ARM GAS  /tmp/cciKVt4B.s 			page 52


 2093              		.loc 1 47 28 view .LVU648
 2094 0048 C5F89430 		str	r3, [r5, #148]
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2095              		.loc 1 48 5 is_stmt 1 view .LVU649
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2096              		.loc 1 48 25 is_stmt 0 view .LVU650
 2097 004c C5F89830 		str	r3, [r5, #152]
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2098              		.loc 1 50 5 is_stmt 1 view .LVU651
  51:Core/Src/nyan_os.c **** }
 2099              		.loc 1 51 1 is_stmt 0 view .LVU652
 2100 0050 0120     		movs	r0, #1
 2101 0052 38BD     		pop	{r3, r4, r5, pc}
  51:Core/Src/nyan_os.c **** }
 2102              		.loc 1 51 1 view .LVU653
 2103              		.cfi_endproc
 2104              	.LFE146:
 2106              		.section	.rodata.NyanAddInputBuffer.str1.4,"aMS",%progbits,1
 2107              		.align	2
 2108              	.LC2:
 2109 0000 08200800 		.ascii	"\010 \010\000"
 2110              		.section	.text.NyanAddInputBuffer,"ax",%progbits
 2111              		.align	1
 2112              		.global	NyanAddInputBuffer
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2117              	NyanAddInputBuffer:
 2118              	.LVL208:
 2119              	.LFB148:
  67:Core/Src/nyan_os.c **** {
 2120              		.loc 1 67 1 is_stmt 1 view -0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 8
 2123              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Core/Src/nyan_os.c **** {
 2124              		.loc 1 67 1 is_stmt 0 view .LVU655
 2125 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2126              	.LCFI24:
 2127              		.cfi_def_cfa_offset 24
 2128              		.cfi_offset 4, -24
 2129              		.cfi_offset 5, -20
 2130              		.cfi_offset 6, -16
 2131              		.cfi_offset 7, -12
 2132              		.cfi_offset 8, -8
 2133              		.cfi_offset 14, -4
 2134 0004 82B0     		sub	sp, sp, #8
 2135              	.LCFI25:
 2136              		.cfi_def_cfa_offset 32
 2137 0006 0446     		mov	r4, r0
 2138 0008 8846     		mov	r8, r1
 2139 000a 1646     		mov	r6, r2
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
 2140              		.loc 1 68 5 is_stmt 1 view .LVU656
 2141              	.LVL209:
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
 2142              		.loc 1 69 5 view .LVU657
ARM GAS  /tmp/cciKVt4B.s 			page 53


  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
 2143              		.loc 1 70 5 view .LVU658
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
 2144              		.loc 1 71 5 view .LVU659
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2145              		.loc 1 74 5 view .LVU660
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2146              		.loc 1 74 19 is_stmt 0 view .LVU661
 2147 000c 00F19C07 		add	r7, r0, #156
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2148              		.loc 1 74 5 view .LVU662
 2149 0010 4FF40072 		mov	r2, #512
 2150              	.LVL210:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2151              		.loc 1 74 5 view .LVU663
 2152 0014 0021     		movs	r1, #0
 2153              	.LVL211:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2154              		.loc 1 74 5 view .LVU664
 2155 0016 3846     		mov	r0, r7
 2156              	.LVL212:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2157              		.loc 1 74 5 view .LVU665
 2158 0018 FFF7FEFF 		bl	memset
 2159              	.LVL213:
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2160              		.loc 1 75 5 is_stmt 1 view .LVU666
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2161              		.loc 1 75 23 is_stmt 0 view .LVU667
 2162 001c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2163 001e 84F89C32 		strb	r3, [r4, #668]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2164              		.loc 1 76 5 is_stmt 1 view .LVU668
 2165              	.LBB27:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2166              		.loc 1 76 9 view .LVU669
 2167              	.LVL214:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2168              		.loc 1 76 18 is_stmt 0 view .LVU670
 2169 0022 0023     		movs	r3, #0
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2170              		.loc 1 76 5 view .LVU671
 2171 0024 05E0     		b	.L161
 2172              	.LVL215:
 2173              	.L162:
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2174              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU672
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2175              		.loc 1 77 33 is_stmt 0 discriminator 3 view .LVU673
 2176 0026 18F80350 		ldrb	r5, [r8, r3]	@ zero_extendqisi2
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2177              		.loc 1 77 27 discriminator 3 view .LVU674
 2178 002a E018     		adds	r0, r4, r3
 2179 002c 80F89C50 		strb	r5, [r0, #156]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2180              		.loc 1 76 35 is_stmt 1 discriminator 3 view .LVU675
 2181 0030 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cciKVt4B.s 			page 54


 2182              	.LVL216:
 2183              	.L161:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2184              		.loc 1 76 25 discriminator 1 view .LVU676
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2185              		.loc 1 76 29 is_stmt 0 discriminator 1 view .LVU677
 2186 0032 3068     		ldr	r0, [r6]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2187              		.loc 1 76 5 discriminator 1 view .LVU678
 2188 0034 9842     		cmp	r0, r3
 2189 0036 F6D8     		bhi	.L162
 2190              	.LBE27:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2191              		.loc 1 81 5 is_stmt 1 view .LVU679
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2192              		.loc 1 81 15 is_stmt 0 view .LVU680
 2193 0038 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2194              	.LVL217:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2195              		.loc 1 81 15 view .LVU681
 2196 003a DBB2     		uxtb	r3, r3
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2197              		.loc 1 81 5 view .LVU682
 2198 003c 012B     		cmp	r3, #1
 2199 003e 6DD0     		beq	.L174
 2200 0040 022B     		cmp	r3, #2
 2201 0042 00F08580 		beq	.L175
 2202              	.L165:
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2203              		.loc 1 115 5 is_stmt 1 view .LVU683
 116:Core/Src/nyan_os.c **** }
 2204              		.loc 1 116 1 is_stmt 0 view .LVU684
 2205 0046 0120     		movs	r0, #1
 2206 0048 02B0     		add	sp, sp, #8
 2207              	.LCFI26:
 2208              		.cfi_remember_state
 2209              		.cfi_def_cfa_offset 24
 2210              		@ sp needed
 2211 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2212              	.LVL218:
 2213              	.L166:
 2214              	.LCFI27:
 2215              		.cfi_restore_state
 2216              	.LBB28:
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2217              		.loc 1 84 102 discriminator 3 view .LVU685
 2218 004e 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2219              		.loc 1 84 96 discriminator 3 view .LVU686
 2220 0052 43B3     		cbz	r3, .L167
 2221              	.LBB29:
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2222              		.loc 1 86 21 is_stmt 1 view .LVU687
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2223              		.loc 1 86 29 is_stmt 0 view .LVU688
 2224 0054 3F4B     		ldr	r3, .L177
 2225 0056 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cciKVt4B.s 			page 55


 2226 0058 ADF80430 		strh	r3, [sp, #4]	@ movhi
 2227 005c 1B0C     		lsrs	r3, r3, #16
 2228 005e 8DF80630 		strb	r3, [sp, #6]
  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
 2229              		.loc 1 87 21 is_stmt 1 view .LVU689
 2230 0062 0322     		movs	r2, #3
 2231 0064 01A9     		add	r1, sp, #4
 2232 0066 2046     		mov	r0, r4
 2233 0068 FFF7FEFF 		bl	NyanPrint
 2234              	.LVL219:
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2235              		.loc 1 88 21 view .LVU690
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2236              		.loc 1 88 44 is_stmt 0 view .LVU691
 2237 006c 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2238              		.loc 1 88 66 view .LVU692
 2239 0070 2344     		add	r3, r3, r4
 2240 0072 0022     		movs	r2, #0
 2241 0074 DA72     		strb	r2, [r3, #11]
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2242              		.loc 1 89 21 is_stmt 1 view .LVU693
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2243              		.loc 1 89 26 is_stmt 0 view .LVU694
 2244 0076 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2245              		.loc 1 89 21 view .LVU695
 2246 007a 013B     		subs	r3, r3, #1
 2247 007c DBB2     		uxtb	r3, r3
 2248 007e 84F88C30 		strb	r3, [r4, #140]
 2249              	.L168:
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2250              		.loc 1 89 21 view .LVU696
 2251              	.LBE29:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2252              		.loc 1 83 60 is_stmt 1 discriminator 2 view .LVU697
 2253 0082 0135     		adds	r5, r5, #1
 2254              	.LVL220:
 2255              	.L163:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2256              		.loc 1 83 35 discriminator 1 view .LVU698
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2257              		.loc 1 83 44 is_stmt 0 discriminator 1 view .LVU699
 2258 0084 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2259 0088 DBB2     		uxtb	r3, r3
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2260              		.loc 1 83 13 discriminator 1 view .LVU700
 2261 008a AB42     		cmp	r3, r5
 2262 008c DBD9     		bls	.L165
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2263              		.loc 1 84 17 is_stmt 1 view .LVU701
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2264              		.loc 1 84 35 is_stmt 0 view .LVU702
 2265 008e 6319     		adds	r3, r4, r5
 2266 0090 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2267 0094 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
ARM GAS  /tmp/cciKVt4B.s 			page 56


 2268              		.loc 1 84 19 view .LVU703
 2269 0096 082B     		cmp	r3, #8
 2270 0098 D9D0     		beq	.L166
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2271              		.loc 1 84 77 discriminator 2 view .LVU704
 2272 009a 6319     		adds	r3, r4, r5
 2273 009c 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2274 00a0 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2275              		.loc 1 84 59 discriminator 2 view .LVU705
 2276 00a2 7F2B     		cmp	r3, #127
 2277 00a4 D3D0     		beq	.L166
 2278              	.L167:
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2279              		.loc 1 90 24 is_stmt 1 view .LVU706
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2280              		.loc 1 90 41 is_stmt 0 view .LVU707
 2281 00a6 6319     		adds	r3, r4, r5
 2282 00a8 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2283 00ac DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2284              		.loc 1 90 26 view .LVU708
 2285 00ae 0A2B     		cmp	r3, #10
 2286 00b0 28D0     		beq	.L169
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2287              		.loc 1 90 77 discriminator 1 view .LVU709
 2288 00b2 6319     		adds	r3, r4, r5
 2289 00b4 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2290 00b8 DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2291              		.loc 1 90 60 discriminator 1 view .LVU710
 2292 00ba 0D2B     		cmp	r3, #13
 2293 00bc 22D0     		beq	.L169
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2294              		.loc 1 96 24 is_stmt 1 view .LVU711
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2295              		.loc 1 96 30 is_stmt 0 view .LVU712
 2296 00be 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 2297 00c2 DBB2     		uxtb	r3, r3
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2298              		.loc 1 96 26 view .LVU713
 2299 00c4 7E2B     		cmp	r3, #126
 2300 00c6 DCD8     		bhi	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2301              		.loc 1 98 24 is_stmt 1 view .LVU714
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2302              		.loc 1 98 41 is_stmt 0 view .LVU715
 2303 00c8 6319     		adds	r3, r4, r5
 2304 00ca 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2305 00ce DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2306              		.loc 1 98 26 view .LVU716
 2307 00d0 1F2B     		cmp	r3, #31
 2308 00d2 D6D9     		bls	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2309              		.loc 1 98 72 discriminator 1 view .LVU717
 2310 00d4 6319     		adds	r3, r4, r5
ARM GAS  /tmp/cciKVt4B.s 			page 57


 2311 00d6 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2312 00da DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2313              		.loc 1 98 55 discriminator 1 view .LVU718
 2314 00dc 7E2B     		cmp	r3, #126
 2315 00de D0D8     		bhi	.L168
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2316              		.loc 1 99 21 is_stmt 1 view .LVU719
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2317              		.loc 1 99 44 is_stmt 0 view .LVU720
 2318 00e0 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2319              		.loc 1 99 64 view .LVU721
 2320 00e4 5A1C     		adds	r2, r3, #1
 2321 00e6 D2B2     		uxtb	r2, r2
 2322 00e8 84F88C20 		strb	r2, [r4, #140]
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2323              		.loc 1 99 84 view .LVU722
 2324 00ec 6219     		adds	r2, r4, r5
 2325 00ee 92F89C20 		ldrb	r2, [r2, #156]	@ zero_extendqisi2
 2326 00f2 D2B2     		uxtb	r2, r2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2327              		.loc 1 99 68 view .LVU723
 2328 00f4 2344     		add	r3, r3, r4
 2329 00f6 DA72     		strb	r2, [r3, #11]
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 2330              		.loc 1 100 21 is_stmt 1 view .LVU724
 2331 00f8 3268     		ldr	r2, [r6]
 2332 00fa 3946     		mov	r1, r7
 2333 00fc 2046     		mov	r0, r4
 2334 00fe FFF7FEFF 		bl	NyanPrint
 2335              	.LVL221:
 2336 0102 BEE7     		b	.L168
 2337              	.L169:
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
 2338              		.loc 1 92 21 view .LVU725
 2339 0104 2046     		mov	r0, r4
 2340 0106 FFF7FEFF 		bl	NyanDecode
 2341              	.LVL222:
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
 2342              		.loc 1 93 21 view .LVU726
 2343 010a 2046     		mov	r0, r4
 2344 010c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2345              	.LVL223:
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 2346              		.loc 1 94 21 view .LVU727
 2347 0110 0322     		movs	r2, #3
 2348 0112 1149     		ldr	r1, .L177+4
 2349 0114 2046     		mov	r0, r4
 2350 0116 FFF7FEFF 		bl	NyanPrint
 2351              	.LVL224:
  95:Core/Src/nyan_os.c ****                     break;
 2352              		.loc 1 95 21 view .LVU728
 2353 011a 94E7     		b	.L165
 2354              	.LVL225:
 2355              	.L174:
  95:Core/Src/nyan_os.c ****                     break;
ARM GAS  /tmp/cciKVt4B.s 			page 58


 2356              		.loc 1 95 21 is_stmt 0 view .LVU729
 2357              	.LBE28:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2358              		.loc 1 81 5 view .LVU730
 2359 011c 0025     		movs	r5, #0
 2360 011e B1E7     		b	.L163
 2361              	.LVL226:
 2362              	.L172:
 2363              	.LBB30:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2364              		.loc 1 107 60 is_stmt 1 discriminator 2 view .LVU731
 2365 0120 0132     		adds	r2, r2, #1
 2366              	.LVL227:
 2367              	.L164:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2368              		.loc 1 107 35 discriminator 1 view .LVU732
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2369              		.loc 1 107 44 is_stmt 0 discriminator 1 view .LVU733
 2370 0122 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2371 0126 DBB2     		uxtb	r3, r3
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2372              		.loc 1 107 13 discriminator 1 view .LVU734
 2373 0128 9342     		cmp	r3, r2
 2374 012a 8CD9     		bls	.L165
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2375              		.loc 1 108 17 is_stmt 1 view .LVU735
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2376              		.loc 1 108 23 is_stmt 0 view .LVU736
 2377 012c D4F8A012 		ldr	r1, [r4, #672]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2378              		.loc 1 108 45 view .LVU737
 2379 0130 D4F8A432 		ldr	r3, [r4, #676]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2380              		.loc 1 108 19 view .LVU738
 2381 0134 9942     		cmp	r1, r3
 2382 0136 F3D2     		bcs	.L172
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2383              		.loc 1 109 21 is_stmt 1 view .LVU739
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2384              		.loc 1 109 24 is_stmt 0 view .LVU740
 2385 0138 D4F8A812 		ldr	r1, [r4, #680]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2386              		.loc 1 109 41 view .LVU741
 2387 013c D4F8A032 		ldr	r3, [r4, #672]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2388              		.loc 1 109 57 view .LVU742
 2389 0140 581C     		adds	r0, r3, #1
 2390 0142 C4F8A002 		str	r0, [r4, #672]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2391              		.loc 1 109 77 view .LVU743
 2392 0146 A018     		adds	r0, r4, r2
 2393 0148 90F89C00 		ldrb	r0, [r0, #156]	@ zero_extendqisi2
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2394              		.loc 1 109 61 view .LVU744
 2395 014c C854     		strb	r0, [r1, r3]
 2396 014e E7E7     		b	.L172
 2397              	.LVL228:
ARM GAS  /tmp/cciKVt4B.s 			page 59


 2398              	.L175:
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2399              		.loc 1 109 61 view .LVU745
 2400              	.LBE30:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2401              		.loc 1 81 5 view .LVU746
 2402 0150 0022     		movs	r2, #0
 2403 0152 E6E7     		b	.L164
 2404              	.L178:
 2405              		.align	2
 2406              	.L177:
 2407 0154 00000000 		.word	.LC2
 2408 0158 00000000 		.word	.LANCHOR4
 2409              		.cfi_endproc
 2410              	.LFE148:
 2412              		.section	.rodata.str1.4,"aMS",%progbits,1
 2413              		.align	2
 2414              	.LC3:
 2415 0000 67657469 		.ascii	"getinfo\000"
 2415      6E666F00 
 2416              		.align	2
 2417              	.LC4:
 2418 0008 77726974 		.ascii	"write-bitstream\000"
 2418      652D6269 
 2418      74737472 
 2418      65616D00 
 2419              		.align	2
 2420              	.LC5:
 2421 0018 7365742D 		.ascii	"set-owner\000"
 2421      6F776E65 
 2421      7200
 2422              		.section	.data.nyan_keys_getinfo,"aw"
 2423              		.align	2
 2424              		.set	.LANCHOR2,. + 0
 2427              	nyan_keys_getinfo:
 2428 0000 56657273 		.ascii	"Version: 0.01\015\012Author: Portland.HODL\015\012B"
 2428      696F6E3A 
 2428      20302E30 
 2428      310D0A41 
 2428      7574686F 
 2429 0027 75696C74 		.ascii	"uilt: 07/11/23\015\012\000"
 2429      3A203037 
 2429      2F31312F 
 2429      32330D0A 
 2429      00
 2430              		.section	.data.nyan_keys_getinfo_owner,"aw"
 2431              		.align	2
 2432              		.set	.LANCHOR3,. + 0
 2435              	nyan_keys_getinfo_owner:
 2436 0000 4F776E65 		.ascii	"Owner: \000"
 2436      723A2000 
 2437              		.section	.data.nyan_keys_newline,"aw"
 2438              		.align	2
 2439              		.set	.LANCHOR4,. + 0
 2442              	nyan_keys_newline:
 2443 0000 0D0A00   		.ascii	"\015\012\000"
 2444              		.section	.data.nyan_keys_path_text,"aw"
ARM GAS  /tmp/cciKVt4B.s 			page 60


 2445              		.align	2
 2446              		.set	.LANCHOR1,. + 0
 2449              	nyan_keys_path_text:
 2450 0000 4E79616E 		.ascii	"NyanOS \360\237\220\261 > \000"
 2450      4F5320F0 
 2450      9F90B120 
 2450      3E2000
 2451              		.section	.data.nyan_keys_set_owner_success,"aw"
 2452              		.align	2
 2453              		.set	.LANCHOR7,. + 0
 2456              	nyan_keys_set_owner_success:
 2457 0000 4E79616E 		.ascii	"Nyan Keys owner has been successfully set\015\012\000"
 2457      204B6579 
 2457      73206F77 
 2457      6E657220 
 2457      68617320 
 2458              		.section	.data.nyan_keys_unknown_command,"aw"
 2459              		.align	2
 2460              		.set	.LANCHOR8,. + 0
 2463              	nyan_keys_unknown_command:
 2464 0000 436F6D6D 		.ascii	"Command not supported by NyanOS\000"
 2464      616E6420 
 2464      6E6F7420 
 2464      73757070 
 2464      6F727465 
 2465              		.section	.data.nyan_keys_welcome_text,"aw"
 2466              		.align	2
 2467              		.set	.LANCHOR0,. + 0
 2470              	nyan_keys_welcome_text:
 2471 0000 4E79616E 		.ascii	"Nyan Keys Operating System (NOS) V0.01\015\012Made "
 2471      204B6579 
 2471      73204F70 
 2471      65726174 
 2471      696E6720 
 2472 002d 62792050 		.ascii	"by Portland.HODL\015\012\015\012\000"
 2472      6F72746C 
 2472      616E642E 
 2472      484F444C 
 2472      0D0A0D0A 
 2473              		.section	.data.nyan_keys_write_bitstream_error_size,"aw"
 2474              		.align	2
 2475              		.set	.LANCHOR5,. + 0
 2478              	nyan_keys_write_bitstream_error_size:
 2479 0000 4661696C 		.ascii	"Failed to parse bitstream length, size must be less"
 2479      65642074 
 2479      6F207061 
 2479      72736520 
 2479      62697473 
 2480 0033 20746861 		.ascii	" than 65535 bytes.\015\012\000"
 2480      6E203635 
 2480      35333520 
 2480      62797465 
 2480      732E0D0A 
 2481              		.section	.data.nyan_keys_write_bitstream_error_size_tx_busy,"aw"
 2482              		.align	2
 2483              		.set	.LANCHOR6,. + 0
 2486              	nyan_keys_write_bitstream_error_size_tx_busy:
ARM GAS  /tmp/cciKVt4B.s 			page 61


 2487 0000 4661696C 		.ascii	"Failed to write bitstream length, TX buffer is busy"
 2487      65642074 
 2487      6F207772 
 2487      69746520 
 2487      62697473 
 2488 0033 2E0D0A00 		.ascii	".\015\012\000"
 2489              		.section	.rodata.nyan_commands,"a"
 2490              		.align	2
 2491              		.set	.LANCHOR9,. + 0
 2494              	nyan_commands:
 2495 0000 00000000 		.word	.LC3
 2496 0004 08000000 		.word	.LC4
 2497 0008 18000000 		.word	.LC5
 2498              		.text
 2499              	.Letext0:
 2500              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2501              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2502              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2503              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 2504              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2505              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2506              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2507              		.file 9 "Core/Inc/24xx_eeprom.h"
 2508              		.file 10 "Core/Inc/nyan_os.h"
 2509              		.file 11 "Core/Inc/nyan_sha256.h"
 2510              		.file 12 "Core/Inc/nyan_strings.h"
 2511              		.file 13 "Core/Inc/tim.h"
 2512              		.file 14 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdlib.h"
 2513              		.file 15 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 2514              		.file 16 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 2515              		.file 17 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 2516              		.file 18 "<built-in>"
ARM GAS  /tmp/cciKVt4B.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nyan_os.c
     /tmp/cciKVt4B.s:20     .text.NyanPrint:0000000000000000 $t
     /tmp/cciKVt4B.s:26     .text.NyanPrint:0000000000000000 NyanPrint
     /tmp/cciKVt4B.s:195    .text.NyanWelcomeDisplay:0000000000000000 $t
     /tmp/cciKVt4B.s:201    .text.NyanWelcomeDisplay:0000000000000000 NyanWelcomeDisplay
     /tmp/cciKVt4B.s:268    .text.NyanWelcomeDisplay:0000000000000034 $d
     /tmp/cciKVt4B.s:274    .text.NyanCdcTX:0000000000000000 $t
     /tmp/cciKVt4B.s:280    .text.NyanCdcTX:0000000000000000 NyanCdcTX
     /tmp/cciKVt4B.s:449    .text.NyanExeGetinfo:0000000000000000 $t
     /tmp/cciKVt4B.s:455    .text.NyanExeGetinfo:0000000000000000 NyanExeGetinfo
     /tmp/cciKVt4B.s:548    .text.NyanExeGetinfo:0000000000000064 $d
     /tmp/cciKVt4B.s:555    .text.NyanExeSetOwner:0000000000000000 $t
     /tmp/cciKVt4B.s:561    .text.NyanExeSetOwner:0000000000000000 NyanExeSetOwner
     /tmp/cciKVt4B.s:840    .rodata.NyanExeWriteFpgaBitstream.str1.4:0000000000000000 $d
     /tmp/cciKVt4B.s:844    .text.NyanExeWriteFpgaBitstream:0000000000000000 $t
     /tmp/cciKVt4B.s:850    .text.NyanExeWriteFpgaBitstream:0000000000000000 NyanExeWriteFpgaBitstream
     /tmp/cciKVt4B.s:1334   .text.NyanExeWriteFpgaBitstream:00000000000001d4 $d
     /tmp/cciKVt4B.s:1342   .text.NyanExecute:0000000000000000 $t
     /tmp/cciKVt4B.s:1348   .text.NyanExecute:0000000000000000 NyanExecute
     /tmp/cciKVt4B.s:1373   .text.NyanExecute:0000000000000010 $d
     /tmp/cciKVt4B.s:1517   .text.NyanExecute:00000000000000b8 $d
     /tmp/cciKVt4B.s:1526   .text.FreeNyanCommandArgs:0000000000000000 $t
     /tmp/cciKVt4B.s:1532   .text.FreeNyanCommandArgs:0000000000000000 FreeNyanCommandArgs
     /tmp/cciKVt4B.s:1606   .rodata.NyanDecodeArgs.str1.4:0000000000000000 $d
     /tmp/cciKVt4B.s:1610   .text.NyanDecodeArgs:0000000000000000 $t
     /tmp/cciKVt4B.s:1616   .text.NyanDecodeArgs:0000000000000000 NyanDecodeArgs
     /tmp/cciKVt4B.s:1796   .text.NyanDecodeArgs:0000000000000098 $d
     /tmp/cciKVt4B.s:1801   .text.NyanDecode:0000000000000000 $t
     /tmp/cciKVt4B.s:1807   .text.NyanDecode:0000000000000000 NyanDecode
     /tmp/cciKVt4B.s:1899   .text.NyanDecode:0000000000000044 $d
     /tmp/cciKVt4B.s:1904   .text.FreeNyanString:0000000000000000 $t
     /tmp/cciKVt4B.s:1910   .text.FreeNyanString:0000000000000000 FreeNyanString
     /tmp/cciKVt4B.s:1971   .text.ClearNyanCommandBuffer:0000000000000000 $t
     /tmp/cciKVt4B.s:1977   .text.ClearNyanCommandBuffer:0000000000000000 ClearNyanCommandBuffer
     /tmp/cciKVt4B.s:2007   .text.NyanOsInit:0000000000000000 $t
     /tmp/cciKVt4B.s:2013   .text.NyanOsInit:0000000000000000 NyanOsInit
     /tmp/cciKVt4B.s:2107   .rodata.NyanAddInputBuffer.str1.4:0000000000000000 $d
     /tmp/cciKVt4B.s:2111   .text.NyanAddInputBuffer:0000000000000000 $t
     /tmp/cciKVt4B.s:2117   .text.NyanAddInputBuffer:0000000000000000 NyanAddInputBuffer
     /tmp/cciKVt4B.s:2407   .text.NyanAddInputBuffer:0000000000000154 $d
     /tmp/cciKVt4B.s:2413   .rodata.str1.4:0000000000000000 $d
     /tmp/cciKVt4B.s:2423   .data.nyan_keys_getinfo:0000000000000000 $d
     /tmp/cciKVt4B.s:2427   .data.nyan_keys_getinfo:0000000000000000 nyan_keys_getinfo
     /tmp/cciKVt4B.s:2431   .data.nyan_keys_getinfo_owner:0000000000000000 $d
     /tmp/cciKVt4B.s:2435   .data.nyan_keys_getinfo_owner:0000000000000000 nyan_keys_getinfo_owner
     /tmp/cciKVt4B.s:2438   .data.nyan_keys_newline:0000000000000000 $d
     /tmp/cciKVt4B.s:2442   .data.nyan_keys_newline:0000000000000000 nyan_keys_newline
     /tmp/cciKVt4B.s:2445   .data.nyan_keys_path_text:0000000000000000 $d
     /tmp/cciKVt4B.s:2449   .data.nyan_keys_path_text:0000000000000000 nyan_keys_path_text
     /tmp/cciKVt4B.s:2452   .data.nyan_keys_set_owner_success:0000000000000000 $d
     /tmp/cciKVt4B.s:2456   .data.nyan_keys_set_owner_success:0000000000000000 nyan_keys_set_owner_success
     /tmp/cciKVt4B.s:2459   .data.nyan_keys_unknown_command:0000000000000000 $d
     /tmp/cciKVt4B.s:2463   .data.nyan_keys_unknown_command:0000000000000000 nyan_keys_unknown_command
     /tmp/cciKVt4B.s:2466   .data.nyan_keys_welcome_text:0000000000000000 $d
     /tmp/cciKVt4B.s:2470   .data.nyan_keys_welcome_text:0000000000000000 nyan_keys_welcome_text
     /tmp/cciKVt4B.s:2474   .data.nyan_keys_write_bitstream_error_size:0000000000000000 $d
ARM GAS  /tmp/cciKVt4B.s 			page 63


     /tmp/cciKVt4B.s:2478   .data.nyan_keys_write_bitstream_error_size:0000000000000000 nyan_keys_write_bitstream_error_size
     /tmp/cciKVt4B.s:2482   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 $d
     /tmp/cciKVt4B.s:2486   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 nyan_keys_write_bitstream_error_size_tx_busy
     /tmp/cciKVt4B.s:2490   .rodata.nyan_commands:0000000000000000 $d
     /tmp/cciKVt4B.s:2494   .rodata.nyan_commands:0000000000000000 nyan_commands
     /tmp/cciKVt4B.s:1378   .text.NyanExecute:0000000000000015 $d
     /tmp/cciKVt4B.s:1378   .text.NyanExecute:0000000000000016 $t

UNDEFINED SYMBOLS
realloc
memcpy
malloc
CDC_Transmit
EepromRead
strncpy
strlen
strcpy
EepromFlushTxBuff
free
EepromWrite
atoi
sha256_init
sha256_update
sha256_final
sprintf
HAL_TIM_OC_Stop_IT
HAL_TIM_OC_Start_IT
htim8
strtok
memset
memcmp
