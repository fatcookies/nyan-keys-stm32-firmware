ARM GAS  /tmp/cc7zS8Hs.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_os.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NyanPrint,"ax",%progbits
  20              		.align	1
  21              		.global	NyanPrint
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NyanPrint:
  27              	.LVL0:
  28              	.LFB149:
  29              		.file 1 "Core/Src/nyan_os.c"
   1:Core/Src/nyan_os.c **** /**
   2:Core/Src/nyan_os.c ****  * NyanOS (NOS) v0.01
   3:Core/Src/nyan_os.c ****  * Reese Russell
   4:Core/Src/nyan_os.c ****  * MIT License
   5:Core/Src/nyan_os.c ****  */
   6:Core/Src/nyan_os.c **** 
   7:Core/Src/nyan_os.c **** #include <ctype.h>
   8:Core/Src/nyan_os.c **** #include <stdio.h>
   9:Core/Src/nyan_os.c **** #include <stdlib.h> 
  10:Core/Src/nyan_os.c **** #include <string.h>
  11:Core/Src/nyan_os.c **** 
  12:Core/Src/nyan_os.c **** #include "main.h"
  13:Core/Src/nyan_os.c **** #include "24xx_eeprom.h"
  14:Core/Src/nyan_os.c **** #include "tim.h"
  15:Core/Src/nyan_os.c **** #include "usbd_cdc_acm_if.h"
  16:Core/Src/nyan_os.c **** #include "nyan_os.h"
  17:Core/Src/nyan_os.c **** #include "nyan_sha256.h"
  18:Core/Src/nyan_os.c **** #include "nyan_strings.h"
  19:Core/Src/nyan_os.c **** 
  20:Core/Src/nyan_os.c **** NyanReturn NyanOsInit(volatile NyanOS* nos)
  21:Core/Src/nyan_os.c **** {
  22:Core/Src/nyan_os.c ****     // Set the operational state
  23:Core/Src/nyan_os.c ****     nos->state = READY;
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
  25:Core/Src/nyan_os.c **** 
  26:Core/Src/nyan_os.c ****     // Init the driver pointers
  27:Core/Src/nyan_os.c ****     nos->eeprom = &nos_eeprom;
  28:Core/Src/nyan_os.c ****     nos->nyan_bitcoin = &nyan_bitcoin;
  29:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/cc7zS8Hs.s 			page 2


  30:Core/Src/nyan_os.c ****     // Default init the OS vars
  31:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
  32:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
  33:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
  34:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
  35:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
  36:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
  37:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
  38:Core/Src/nyan_os.c **** 
  39:Core/Src/nyan_os.c ****     // Manual Setting of the memory because of the volatile qualifier.
  40:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
  41:Core/Src/nyan_os.c **** 
  42:Core/Src/nyan_os.c ****     // Set the arg pointer to a zero value
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
  44:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
  45:Core/Src/nyan_os.c ****     }
  46:Core/Src/nyan_os.c **** 
  47:Core/Src/nyan_os.c ****     // Output Buffer Creation
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
  49:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
  50:Core/Src/nyan_os.c ****     
  51:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  52:Core/Src/nyan_os.c **** }
  53:Core/Src/nyan_os.c **** 
  54:Core/Src/nyan_os.c **** NyanReturn NyanWelcomeDisplay(volatile NyanOS *nos)
  55:Core/Src/nyan_os.c **** {
  56:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
  57:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
  58:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
  59:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
  60:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
  61:Core/Src/nyan_os.c ****         }
  62:Core/Src/nyan_os.c ****     }
  63:Core/Src/nyan_os.c **** 
  64:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  65:Core/Src/nyan_os.c **** };
  66:Core/Src/nyan_os.c **** 
  67:Core/Src/nyan_os.c **** NyanReturn NyanAddInputBuffer(volatile NyanOS *nos, uint8_t *pbuf, uint32_t *Len)
  68:Core/Src/nyan_os.c **** {
  69:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
  70:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
  71:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
  72:Core/Src/nyan_os.c ****     const char line_feed = '\n';
  73:Core/Src/nyan_os.c **** 
  74:Core/Src/nyan_os.c ****     // Lets copy the RX Buffer so that it doesn't get freed by an interrupt !!!FIXME!!! This can be
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
  76:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
  78:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
  79:Core/Src/nyan_os.c ****     }
  80:Core/Src/nyan_os.c **** 
  81:Core/Src/nyan_os.c ****     // Check which state we are in.
  82:Core/Src/nyan_os.c ****     switch(nos->state){
  83:Core/Src/nyan_os.c ****         case READY: {
  84:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
  86:Core/Src/nyan_os.c ****                     // Handle backspace
ARM GAS  /tmp/cc7zS8Hs.s 			page 3


  87:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
  88:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
  89:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
  90:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
  92:Core/Src/nyan_os.c ****                     // Handle the action of executing a command by pressing enter
  93:Core/Src/nyan_os.c ****                     NyanDecode(nos);
  94:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
  95:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
  96:Core/Src/nyan_os.c ****                     break;
  97:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
  98:Core/Src/nyan_os.c ****                     // Handle out of command buffer space on next char
  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 101:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 102:Core/Src/nyan_os.c ****                 }
 103:Core/Src/nyan_os.c ****             }
 104:Core/Src/nyan_os.c ****             break;
 105:Core/Src/nyan_os.c ****         }
 106:Core/Src/nyan_os.c ****         case DIRECT_BUFFER_ACCESS: {
 107:Core/Src/nyan_os.c ****             // In this state all signals are written directly to the buffer until the buffer is ful
 108:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 109:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 111:Core/Src/nyan_os.c ****             }
 112:Core/Src/nyan_os.c ****         }
 113:Core/Src/nyan_os.c ****         default: 
 114:Core/Src/nyan_os.c ****             break;
 115:Core/Src/nyan_os.c ****     }
 116:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 117:Core/Src/nyan_os.c **** }
 118:Core/Src/nyan_os.c **** 
 119:Core/Src/nyan_os.c **** NyanReturn NyanPrint(volatile NyanOS *nos, char* data, size_t len)
 120:Core/Src/nyan_os.c **** {
  30              		.loc 1 120 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 121:Core/Src/nyan_os.c ****     if (!nos || !data)
  34              		.loc 1 121 5 view .LVU1
  35              		.loc 1 121 8 is_stmt 0 view .LVU2
  36 0000 0029     		cmp	r1, #0
  37 0002 18BF     		it	ne
  38 0004 0028     		cmpne	r0, #0
  39 0006 43D0     		beq	.L5
 120:Core/Src/nyan_os.c ****     if (!nos || !data)
  40              		.loc 1 120 1 view .LVU3
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 16
  44              		.cfi_offset 4, -16
  45              		.cfi_offset 5, -12
  46              		.cfi_offset 6, -8
  47              		.cfi_offset 14, -4
  48 000a 1546     		mov	r5, r2
  49 000c 0446     		mov	r4, r0
  50 000e 0E46     		mov	r6, r1
ARM GAS  /tmp/cc7zS8Hs.s 			page 4


 122:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 123:Core/Src/nyan_os.c **** 
 124:Core/Src/nyan_os.c ****     if (nos->tx_buffer.size + len > 2048) {
  51              		.loc 1 124 5 is_stmt 1 view .LVU4
  52              		.loc 1 124 23 is_stmt 0 view .LVU5
  53 0010 D0F89C30 		ldr	r3, [r0, #156]
  54              		.loc 1 124 29 view .LVU6
  55 0014 1344     		add	r3, r3, r2
  56              		.loc 1 124 8 view .LVU7
  57 0016 B3F5006F 		cmp	r3, #2048
  58 001a 3BD8     		bhi	.L6
 125:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 126:Core/Src/nyan_os.c ****     }
 127:Core/Src/nyan_os.c ****     if (nos->tx_buffer.p_array == NULL) {
  59              		.loc 1 127 5 is_stmt 1 view .LVU8
  60              		.loc 1 127 23 is_stmt 0 view .LVU9
  61 001c D0F89830 		ldr	r3, [r0, #152]
  62              		.loc 1 127 8 view .LVU10
  63 0020 2BB3     		cbz	r3, .L13
  64              	.LBB2:
 128:Core/Src/nyan_os.c ****         // Since the pointer is null we need to create a new one to hold our new data!
 129:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = (uint8_t *)malloc(len);
 130:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 131:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 132:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 133:Core/Src/nyan_os.c ****         }
 134:Core/Src/nyan_os.c ****         nos->tx_buffer.size = len;
 135:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 136:Core/Src/nyan_os.c ****     } else {
 137:Core/Src/nyan_os.c ****         
 138:Core/Src/nyan_os.c ****         // The pointer is not null, so we realloc and then add the contents of data to it
 139:Core/Src/nyan_os.c ****         uint8_t *new_buffer = (uint8_t *)realloc(nos->tx_buffer.p_array, nos->tx_buffer.size + len)
  65              		.loc 1 139 9 is_stmt 1 view .LVU11
  66              		.loc 1 139 64 is_stmt 0 view .LVU12
  67 0022 D0F89800 		ldr	r0, [r0, #152]
  68              	.LVL1:
  69              		.loc 1 139 88 view .LVU13
  70 0026 D4F89C10 		ldr	r1, [r4, #156]
  71              	.LVL2:
  72              		.loc 1 139 42 view .LVU14
  73 002a 1144     		add	r1, r1, r2
  74 002c FFF7FEFF 		bl	realloc
  75              	.LVL3:
 140:Core/Src/nyan_os.c ****         if (new_buffer == NULL) {
  76              		.loc 1 140 9 is_stmt 1 view .LVU15
  77              		.loc 1 140 12 is_stmt 0 view .LVU16
  78 0030 A0B3     		cbz	r0, .L8
 141:Core/Src/nyan_os.c ****             // Handle failed memory reallocation
 142:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 143:Core/Src/nyan_os.c ****         }
 144:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = new_buffer;
  79              		.loc 1 144 9 is_stmt 1 view .LVU17
  80              		.loc 1 144 32 is_stmt 0 view .LVU18
  81 0032 C4F89800 		str	r0, [r4, #152]
 145:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array + nos->tx_buffer.size, data, len); // Append the new data
  82              		.loc 1 145 9 is_stmt 1 view .LVU19
  83              		.loc 1 145 30 is_stmt 0 view .LVU20
ARM GAS  /tmp/cc7zS8Hs.s 			page 5


  84 0036 D4F89800 		ldr	r0, [r4, #152]
  85              	.LVL4:
  86              		.loc 1 145 55 view .LVU21
  87 003a D4F89C30 		ldr	r3, [r4, #156]
  88              		.loc 1 145 9 view .LVU22
  89 003e 2A46     		mov	r2, r5
  90 0040 3146     		mov	r1, r6
  91 0042 1844     		add	r0, r0, r3
  92 0044 FFF7FEFF 		bl	memcpy
  93              	.LVL5:
 146:Core/Src/nyan_os.c ****         nos->tx_buffer.size += len; // Increase the size to reflect the new total size
  94              		.loc 1 146 9 is_stmt 1 view .LVU23
  95              		.loc 1 146 29 is_stmt 0 view .LVU24
  96 0048 D4F89C20 		ldr	r2, [r4, #156]
  97 004c 1544     		add	r5, r5, r2
  98              	.LVL6:
  99              		.loc 1 146 29 view .LVU25
 100 004e C4F89C50 		str	r5, [r4, #156]
 101              	.L4:
 102              		.loc 1 146 29 view .LVU26
 103              	.LBE2:
 147:Core/Src/nyan_os.c ****     }
 148:Core/Src/nyan_os.c **** 
 149:Core/Src/nyan_os.c ****     // Now calculate the chunks
 150:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = nos->tx_buffer.size / _NYAN_CDC_TX_MAX_LEN;
 104              		.loc 1 150 5 is_stmt 1 view .LVU27
 105              		.loc 1 150 42 is_stmt 0 view .LVU28
 106 0052 D4F89C30 		ldr	r3, [r4, #156]
 107              		.loc 1 150 26 view .LVU29
 108 0056 C3F3C713 		ubfx	r3, r3, #7, #8
 109 005a 84F89530 		strb	r3, [r4, #149]
 151:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = nos->tx_buffer.size % _NYAN_CDC_TX_MAX_LEN;
 110              		.loc 1 151 5 is_stmt 1 view .LVU30
 111              		.loc 1 151 50 is_stmt 0 view .LVU31
 112 005e D4F89C30 		ldr	r3, [r4, #156]
 113              		.loc 1 151 56 view .LVU32
 114 0062 03F07F03 		and	r3, r3, #127
 115              		.loc 1 151 34 view .LVU33
 116 0066 84F89630 		strb	r3, [r4, #150]
 152:Core/Src/nyan_os.c **** 
 153:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 117              		.loc 1 153 5 is_stmt 1 view .LVU34
 118              		.loc 1 153 12 is_stmt 0 view .LVU35
 119 006a 0120     		movs	r0, #1
 120              	.L2:
 154:Core/Src/nyan_os.c **** }
 121              		.loc 1 154 1 view .LVU36
 122 006c 70BD     		pop	{r4, r5, r6, pc}
 123              	.LVL7:
 124              	.L13:
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 125              		.loc 1 129 9 is_stmt 1 view .LVU37
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 126              		.loc 1 129 45 is_stmt 0 view .LVU38
 127 006e 1046     		mov	r0, r2
 128              	.LVL8:
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
ARM GAS  /tmp/cc7zS8Hs.s 			page 6


 129              		.loc 1 129 45 view .LVU39
 130 0070 FFF7FEFF 		bl	malloc
 131              	.LVL9:
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 132              		.loc 1 129 32 view .LVU40
 133 0074 C4F89800 		str	r0, [r4, #152]
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 134              		.loc 1 130 9 is_stmt 1 view .LVU41
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 135              		.loc 1 130 27 is_stmt 0 view .LVU42
 136 0078 D4F89830 		ldr	r3, [r4, #152]
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 137              		.loc 1 130 12 view .LVU43
 138 007c 63B1     		cbz	r3, .L7
 134:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 139              		.loc 1 134 9 is_stmt 1 view .LVU44
 134:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 140              		.loc 1 134 29 is_stmt 0 view .LVU45
 141 007e C4F89C50 		str	r5, [r4, #156]
 135:Core/Src/nyan_os.c ****     } else {
 142              		.loc 1 135 9 is_stmt 1 view .LVU46
 135:Core/Src/nyan_os.c ****     } else {
 143              		.loc 1 135 30 is_stmt 0 view .LVU47
 144 0082 D4F89800 		ldr	r0, [r4, #152]
 135:Core/Src/nyan_os.c ****     } else {
 145              		.loc 1 135 9 view .LVU48
 146 0086 2A46     		mov	r2, r5
 147 0088 3146     		mov	r1, r6
 148 008a FFF7FEFF 		bl	memcpy
 149              	.LVL10:
 150 008e E0E7     		b	.L4
 151              	.LVL11:
 152              	.L5:
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 0
 155              		.cfi_restore 4
 156              		.cfi_restore 5
 157              		.cfi_restore 6
 158              		.cfi_restore 14
 122:Core/Src/nyan_os.c **** 
 159              		.loc 1 122 16 view .LVU49
 160 0090 0020     		movs	r0, #0
 161              	.LVL12:
 162              		.loc 1 154 1 view .LVU50
 163 0092 7047     		bx	lr
 164              	.LVL13:
 165              	.L6:
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 125:Core/Src/nyan_os.c ****     }
 172              		.loc 1 125 20 view .LVU51
 173 0094 0020     		movs	r0, #0
 174              	.LVL14:
ARM GAS  /tmp/cc7zS8Hs.s 			page 7


 125:Core/Src/nyan_os.c ****     }
 175              		.loc 1 125 20 view .LVU52
 176 0096 E9E7     		b	.L2
 177              	.LVL15:
 178              	.L7:
 132:Core/Src/nyan_os.c ****         }
 179              		.loc 1 132 20 view .LVU53
 180 0098 0020     		movs	r0, #0
 181 009a E7E7     		b	.L2
 182              	.LVL16:
 183              	.L8:
 184              	.LBB3:
 142:Core/Src/nyan_os.c ****         }
 185              		.loc 1 142 20 view .LVU54
 186 009c 0020     		movs	r0, #0
 187              	.LVL17:
 142:Core/Src/nyan_os.c ****         }
 188              		.loc 1 142 20 view .LVU55
 189 009e E5E7     		b	.L2
 190              	.LBE3:
 191              		.cfi_endproc
 192              	.LFE149:
 194              		.section	.text.NyanWelcomeDisplay,"ax",%progbits
 195              		.align	1
 196              		.global	NyanWelcomeDisplay
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	NyanWelcomeDisplay:
 202              	.LVL18:
 203              	.LFB147:
  55:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 204              		.loc 1 55 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 208              		.loc 1 56 5 view .LVU57
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 209              		.loc 1 56 11 is_stmt 0 view .LVU58
 210 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 211              		.loc 1 56 7 view .LVU59
 212 0002 A3B1     		cbz	r3, .L17
  55:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 213              		.loc 1 55 1 view .LVU60
 214 0004 10B5     		push	{r4, lr}
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 14, -4
 219 0006 0446     		mov	r4, r0
  57:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 220              		.loc 1 57 9 is_stmt 1 view .LVU61
  57:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 221              		.loc 1 57 34 is_stmt 0 view .LVU62
 222 0008 0023     		movs	r3, #0
ARM GAS  /tmp/cc7zS8Hs.s 			page 8


 223 000a 0370     		strb	r3, [r0]
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 224              		.loc 1 58 9 is_stmt 1 view .LVU63
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 225              		.loc 1 58 15 is_stmt 0 view .LVU64
 226 000c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 227              		.loc 1 58 42 view .LVU65
 228 000e 531C     		adds	r3, r2, #1
 229 0010 DBB2     		uxtb	r3, r3
 230 0012 4370     		strb	r3, [r0, #1]
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 231              		.loc 1 58 11 view .LVU66
 232 0014 0AB1     		cbz	r2, .L20
 233              	.LVL19:
 234              	.L15:
  64:Core/Src/nyan_os.c **** };
 235              		.loc 1 64 5 is_stmt 1 view .LVU67
  65:Core/Src/nyan_os.c **** 
 236              		.loc 1 65 1 is_stmt 0 view .LVU68
 237 0016 0120     		movs	r0, #1
 238 0018 10BD     		pop	{r4, pc}
 239              	.LVL20:
 240              	.L20:
  59:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241              		.loc 1 59 13 is_stmt 1 view .LVU69
 242 001a 4222     		movs	r2, #66
 243 001c 0549     		ldr	r1, .L21
 244 001e FFF7FEFF 		bl	NyanPrint
 245              	.LVL21:
  60:Core/Src/nyan_os.c ****         }
 246              		.loc 1 60 13 view .LVU70
 247 0022 0F22     		movs	r2, #15
 248 0024 0449     		ldr	r1, .L21+4
 249 0026 2046     		mov	r0, r4
 250 0028 FFF7FEFF 		bl	NyanPrint
 251              	.LVL22:
 252 002c F3E7     		b	.L15
 253              	.LVL23:
 254              	.L17:
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 0
 257              		.cfi_restore 4
 258              		.cfi_restore 14
  64:Core/Src/nyan_os.c **** };
 259              		.loc 1 64 5 view .LVU71
  65:Core/Src/nyan_os.c **** 
 260              		.loc 1 65 1 is_stmt 0 view .LVU72
 261 002e 0120     		movs	r0, #1
 262              	.LVL24:
  65:Core/Src/nyan_os.c **** 
 263              		.loc 1 65 1 view .LVU73
 264 0030 7047     		bx	lr
 265              	.L22:
 266 0032 00BF     		.align	2
 267              	.L21:
 268 0034 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc7zS8Hs.s 			page 9


 269 0038 00000000 		.word	.LANCHOR1
 270              		.cfi_endproc
 271              	.LFE147:
 273              		.section	.text.NyanCdcTX,"ax",%progbits
 274              		.align	1
 275              		.global	NyanCdcTX
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	NyanCdcTX:
 281              	.LVL25:
 282              	.LFB150:
 155:Core/Src/nyan_os.c **** 
 156:Core/Src/nyan_os.c **** NyanReturn NyanCdcTX(volatile NyanOS* nos)
 157:Core/Src/nyan_os.c **** {
 283              		.loc 1 157 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 157 1 is_stmt 0 view .LVU75
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 293 0002 0346     		mov	r3, r0
 158:Core/Src/nyan_os.c ****     // First we need to determine how many chunks we need to send
 159:Core/Src/nyan_os.c ****     uint8_t total_chunks = nos->tx_chunks_solid;
 294              		.loc 1 159 5 is_stmt 1 view .LVU76
 295              		.loc 1 159 13 is_stmt 0 view .LVU77
 296 0004 90F89500 		ldrb	r0, [r0, #149]	@ zero_extendqisi2
 297              	.LVL26:
 298              		.loc 1 159 13 view .LVU78
 299 0008 C0B2     		uxtb	r0, r0
 300              	.LVL27:
 160:Core/Src/nyan_os.c ****     uint8_t length = 0;
 301              		.loc 1 160 5 is_stmt 1 view .LVU79
 161:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 302              		.loc 1 161 5 view .LVU80
 303              		.loc 1 161 34 is_stmt 0 view .LVU81
 304 000a 93F89710 		ldrb	r1, [r3, #151]	@ zero_extendqisi2
 305              		.loc 1 161 45 view .LVU82
 306 000e C901     		lsls	r1, r1, #7
 307              	.LVL28:
 162:Core/Src/nyan_os.c **** 
 163:Core/Src/nyan_os.c ****     // If there are partial bytes we need to increment the send chunks by 1
 164:Core/Src/nyan_os.c ****     if(nos->tx_chunks_partial_bytes) {
 308              		.loc 1 164 5 is_stmt 1 view .LVU83
 309              		.loc 1 164 11 is_stmt 0 view .LVU84
 310 0010 93F89620 		ldrb	r2, [r3, #150]	@ zero_extendqisi2
 311              		.loc 1 164 7 view .LVU85
 312 0014 0AB1     		cbz	r2, .L24
 165:Core/Src/nyan_os.c ****         total_chunks++;
 313              		.loc 1 165 9 is_stmt 1 view .LVU86
 314              		.loc 1 165 21 is_stmt 0 view .LVU87
 315 0016 0130     		adds	r0, r0, #1
 316              	.LVL29:
ARM GAS  /tmp/cc7zS8Hs.s 			page 10


 317              		.loc 1 165 21 view .LVU88
 318 0018 C0B2     		uxtb	r0, r0
 319              	.LVL30:
 320              	.L24:
 166:Core/Src/nyan_os.c ****     }
 167:Core/Src/nyan_os.c **** 
 168:Core/Src/nyan_os.c ****     // If there are no chunks to send than just return a failure
 169:Core/Src/nyan_os.c ****     if(total_chunks == 0) {
 321              		.loc 1 169 5 is_stmt 1 view .LVU89
 322              		.loc 1 169 7 is_stmt 0 view .LVU90
 323 001a 0028     		cmp	r0, #0
 324 001c 49D0     		beq	.L25
 170:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 171:Core/Src/nyan_os.c ****     }
 172:Core/Src/nyan_os.c ****     
 173:Core/Src/nyan_os.c ****     // Do checks and transmit data;
 174:Core/Src/nyan_os.c ****     if((nos->tx_buffer.p_array != NULL || nos->tx_buffer.size != 0) && nos->tx_inflight == 0) {
 325              		.loc 1 174 5 is_stmt 1 view .LVU91
 326              		.loc 1 174 23 is_stmt 0 view .LVU92
 327 001e D3F89820 		ldr	r2, [r3, #152]
 328              		.loc 1 174 7 view .LVU93
 329 0022 E2B1     		cbz	r2, .L34
 330              	.L26:
 331              		.loc 1 174 75 discriminator 3 view .LVU94
 332 0024 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 333              		.loc 1 174 69 discriminator 3 view .LVU95
 334 0028 002A     		cmp	r2, #0
 335 002a 41D1     		bne	.L31
 175:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 336              		.loc 1 175 9 is_stmt 1 view .LVU96
 337              		.loc 1 175 43 is_stmt 0 view .LVU97
 338 002c 83F89420 		strb	r2, [r3, #148]
 176:Core/Src/nyan_os.c ****         
 177:Core/Src/nyan_os.c ****         // Lets begin to process the chunks
 178:Core/Src/nyan_os.c ****         if(nos->tx_chunk == total_chunks - 1) { // This would be the processing of the last chunk
 339              		.loc 1 178 9 is_stmt 1 view .LVU98
 340              		.loc 1 178 15 is_stmt 0 view .LVU99
 341 0030 93F89720 		ldrb	r2, [r3, #151]	@ zero_extendqisi2
 342 0034 D2B2     		uxtb	r2, r2
 343              		.loc 1 178 42 view .LVU100
 344 0036 00F1FF3C 		add	ip, r0, #-1
 345              		.loc 1 178 11 view .LVU101
 346 003a 6245     		cmp	r2, ip
 347 003c 15D0     		beq	.L35
 179:Core/Src/nyan_os.c ****             length = nos->tx_chunks_partial_bytes;
 180:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 181:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 348              		.loc 1 181 16 is_stmt 1 view .LVU102
 349              		.loc 1 181 23 is_stmt 0 view .LVU103
 350 003e 93F89720 		ldrb	r2, [r3, #151]	@ zero_extendqisi2
 351 0042 D2B2     		uxtb	r2, r2
 352              		.loc 1 181 19 view .LVU104
 353 0044 9445     		cmp	ip, r2
 354 0046 31DD     		ble	.L32
 182:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 355              		.loc 1 182 13 is_stmt 1 view .LVU105
 356              	.LVL31:
ARM GAS  /tmp/cc7zS8Hs.s 			page 11


 183:Core/Src/nyan_os.c ****             nos->tx_bulk_transfer_in_progress = true;
 357              		.loc 1 183 13 view .LVU106
 358              		.loc 1 183 47 is_stmt 0 view .LVU107
 359 0048 0122     		movs	r2, #1
 360 004a 83F89420 		strb	r2, [r3, #148]
 184:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 361              		.loc 1 184 13 is_stmt 1 view .LVU108
 362              		.loc 1 184 18 is_stmt 0 view .LVU109
 363 004e 93F89720 		ldrb	r2, [r3, #151]	@ zero_extendqisi2
 364              		.loc 1 184 13 view .LVU110
 365 0052 0132     		adds	r2, r2, #1
 366 0054 D2B2     		uxtb	r2, r2
 367 0056 83F89720 		strb	r2, [r3, #151]
 182:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 368              		.loc 1 182 20 view .LVU111
 369 005a 8022     		movs	r2, #128
 370 005c 10E0     		b	.L28
 371              	.LVL32:
 372              	.L34:
 174:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 373              		.loc 1 174 57 discriminator 2 view .LVU112
 374 005e D3F89C20 		ldr	r2, [r3, #156]
 174:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 375              		.loc 1 174 40 discriminator 2 view .LVU113
 376 0062 002A     		cmp	r2, #0
 377 0064 DED1     		bne	.L26
 185:Core/Src/nyan_os.c ****         }
 186:Core/Src/nyan_os.c **** 
 187:Core/Src/nyan_os.c ****         // If we have reach the end reset everything
 188:Core/Src/nyan_os.c ****         if (nos->tx_chunk > total_chunks - 1) {
 189:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_solid = 0;
 191:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 192:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 193:Core/Src/nyan_os.c ****         }
 194:Core/Src/nyan_os.c **** 
 195:Core/Src/nyan_os.c ****         CDC_Transmit(nos->cdc_ch, nos->tx_buffer.p_array + address_offset, length);
 196:Core/Src/nyan_os.c ****     }
 197:Core/Src/nyan_os.c ****     
 198:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 378              		.loc 1 198 12 view .LVU114
 379 0066 0120     		movs	r0, #1
 380              	.LVL33:
 381              		.loc 1 198 12 view .LVU115
 382 0068 23E0     		b	.L25
 383              	.LVL34:
 384              	.L35:
 179:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 385              		.loc 1 179 13 is_stmt 1 view .LVU116
 179:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 386              		.loc 1 179 20 is_stmt 0 view .LVU117
 387 006a 93F89620 		ldrb	r2, [r3, #150]	@ zero_extendqisi2
 388 006e D2B2     		uxtb	r2, r2
 389              	.LVL35:
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 390              		.loc 1 180 13 is_stmt 1 view .LVU118
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
ARM GAS  /tmp/cc7zS8Hs.s 			page 12


 391              		.loc 1 180 18 is_stmt 0 view .LVU119
 392 0070 93F897C0 		ldrb	ip, [r3, #151]	@ zero_extendqisi2
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 393              		.loc 1 180 13 view .LVU120
 394 0074 0CF1010C 		add	ip, ip, #1
 395 0078 5FFA8CFC 		uxtb	ip, ip
 396 007c 83F897C0 		strb	ip, [r3, #151]
 397              	.LVL36:
 398              	.L28:
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 399              		.loc 1 188 9 is_stmt 1 view .LVU121
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 400              		.loc 1 188 16 is_stmt 0 view .LVU122
 401 0080 93F897C0 		ldrb	ip, [r3, #151]	@ zero_extendqisi2
 402 0084 5FFA8CFC 		uxtb	ip, ip
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 403              		.loc 1 188 12 view .LVU123
 404 0088 8445     		cmp	ip, r0
 405 008a 06D3     		bcc	.L29
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 406              		.loc 1 190 13 is_stmt 1 view .LVU124
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 407              		.loc 1 190 34 is_stmt 0 view .LVU125
 408 008c 0020     		movs	r0, #0
 409              	.LVL37:
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 410              		.loc 1 190 34 view .LVU126
 411 008e 83F89500 		strb	r0, [r3, #149]
 191:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 412              		.loc 1 191 13 is_stmt 1 view .LVU127
 191:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 413              		.loc 1 191 42 is_stmt 0 view .LVU128
 414 0092 83F89600 		strb	r0, [r3, #150]
 192:Core/Src/nyan_os.c ****         }
 415              		.loc 1 192 13 is_stmt 1 view .LVU129
 192:Core/Src/nyan_os.c ****         }
 416              		.loc 1 192 27 is_stmt 0 view .LVU130
 417 0096 83F89700 		strb	r0, [r3, #151]
 418              	.L29:
 195:Core/Src/nyan_os.c ****     }
 419              		.loc 1 195 9 is_stmt 1 view .LVU131
 420 009a 93F89200 		ldrb	r0, [r3, #146]	@ zero_extendqisi2
 195:Core/Src/nyan_os.c ****     }
 421              		.loc 1 195 49 is_stmt 0 view .LVU132
 422 009e D3F89830 		ldr	r3, [r3, #152]
 423              	.LVL38:
 195:Core/Src/nyan_os.c ****     }
 424              		.loc 1 195 9 view .LVU133
 425 00a2 1944     		add	r1, r1, r3
 426              	.LVL39:
 195:Core/Src/nyan_os.c ****     }
 427              		.loc 1 195 9 view .LVU134
 428 00a4 FFF7FEFF 		bl	CDC_Transmit
 429              	.LVL40:
 430              		.loc 1 198 12 view .LVU135
 431 00a8 0120     		movs	r0, #1
 432 00aa 02E0     		b	.L25
ARM GAS  /tmp/cc7zS8Hs.s 			page 13


 433              	.LVL41:
 434              	.L32:
 160:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 435              		.loc 1 160 13 view .LVU136
 436 00ac 0022     		movs	r2, #0
 437 00ae E7E7     		b	.L28
 438              	.L31:
 439              		.loc 1 198 12 view .LVU137
 440 00b0 0120     		movs	r0, #1
 441              	.LVL42:
 442              	.L25:
 199:Core/Src/nyan_os.c **** }
 443              		.loc 1 199 1 view .LVU138
 444 00b2 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE150:
 448              		.section	.text.NyanExeGetinfo,"ax",%progbits
 449              		.align	1
 450              		.global	NyanExeGetinfo
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	NyanExeGetinfo:
 456              	.LVL43:
 457              	.LFB154:
 200:Core/Src/nyan_os.c **** 
 201:Core/Src/nyan_os.c **** NyanReturn NyanDecode(volatile NyanOS* nos)
 202:Core/Src/nyan_os.c **** {
 203:Core/Src/nyan_os.c ****     // First set the nos state to idle
 204:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 205:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 206:Core/Src/nyan_os.c ****     for (uint8_t cmd_idx = 0; cmd_idx < _NYAN_NUM_COMMANDS; ++cmd_idx) {
 207:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 208:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 209:Core/Src/nyan_os.c ****         if (_NYAN_CMD_BUF_LEN >= command_len && memcmp((const char*)nos->command_buffer, nyan_comma
 210:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 211:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 212:Core/Src/nyan_os.c ****             nos->exe = (NyanExe)cmd_idx;
 213:Core/Src/nyan_os.c ****             break;
 214:Core/Src/nyan_os.c ****         } else {
 215:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_COMMAND_NOT_SUPPORTED;
 216:Core/Src/nyan_os.c ****         }
 217:Core/Src/nyan_os.c ****     }
 218:Core/Src/nyan_os.c **** 
 219:Core/Src/nyan_os.c ****     // If no command is matched, return some indication (e.g., NULL or a specific error string)
 220:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 221:Core/Src/nyan_os.c **** }
 222:Core/Src/nyan_os.c **** 
 223:Core/Src/nyan_os.c **** NyanReturn NyanExecute(volatile NyanOS* nos) {
 224:Core/Src/nyan_os.c ****     switch(nos->exe) {
 225:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 226:Core/Src/nyan_os.c ****             NyanExeGetinfo(nos);
 227:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 228:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 229:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 230:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 231:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
ARM GAS  /tmp/cc7zS8Hs.s 			page 14


 232:Core/Src/nyan_os.c ****             NyanExeSetOwner(nos);
 233:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 234:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 235:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 236:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 237:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 238:Core/Src/nyan_os.c ****             HAL_TIM_OC_Stop_IT(&htim8, TIM_CHANNEL_1);
 239:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 240:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 241:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 242:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 243:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 244:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 245:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 246:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 247:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 248:Core/Src/nyan_os.c ****         case NYAN_EXE_COMMAND_NOT_SUPPORTED :
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_unknown_command[0], sizeof(nyan_keys_unknown_command))
 250:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 251:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 252:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 253:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 254:Core/Src/nyan_os.c ****         default:
 255:Core/Src/nyan_os.c ****             // The execution state is out of bounds correct this.
 256:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 257:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 258:Core/Src/nyan_os.c ****     }
 259:Core/Src/nyan_os.c **** }
 260:Core/Src/nyan_os.c **** 
 261:Core/Src/nyan_os.c **** NyanReturn NyanDecodeArgs(volatile NyanOS* nos)
 262:Core/Src/nyan_os.c **** {
 263:Core/Src/nyan_os.c ****     if (!nos) {
 264:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 265:Core/Src/nyan_os.c ****     }
 266:Core/Src/nyan_os.c **** 
 267:Core/Src/nyan_os.c ****     // Destroy any previous allocated arguments
 268:Core/Src/nyan_os.c ****     FreeNyanCommandArgs(nos);
 269:Core/Src/nyan_os.c **** 
 270:Core/Src/nyan_os.c ****     nos->command_buffer[_NYAN_CMD_BUF_LEN] = '\0';
 271:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 272:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 273:Core/Src/nyan_os.c **** 
 274:Core/Src/nyan_os.c ****     int arg_count = 0;
 275:Core/Src/nyan_os.c ****     while (token != NULL) {
 276:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 277:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 278:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 279:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 280:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 281:Core/Src/nyan_os.c ****                 for (int i = 0; i < arg_count; ++i) {
 282:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 283:Core/Src/nyan_os.c ****                 }
 284:Core/Src/nyan_os.c ****                 return NOS_FAILURE;
 285:Core/Src/nyan_os.c ****             }
 286:Core/Src/nyan_os.c ****             strcpy((char *)nos->command_arg_buffer[arg_count], token);
 287:Core/Src/nyan_os.c ****             arg_count++;
 288:Core/Src/nyan_os.c ****         }
ARM GAS  /tmp/cc7zS8Hs.s 			page 15


 289:Core/Src/nyan_os.c ****         token = strtok(NULL, delimiter);
 290:Core/Src/nyan_os.c ****     }
 291:Core/Src/nyan_os.c **** 
 292:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = arg_count;
 293:Core/Src/nyan_os.c **** 
 294:Core/Src/nyan_os.c ****     // Nullify the command buffer
 295:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 296:Core/Src/nyan_os.c **** 
 297:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 298:Core/Src/nyan_os.c **** }
 299:Core/Src/nyan_os.c **** 
 300:Core/Src/nyan_os.c **** NyanReturn NyanExeGetinfo(volatile NyanOS* nos)
 301:Core/Src/nyan_os.c **** {
 458              		.loc 1 301 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 64
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 301 1 is_stmt 0 view .LVU140
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI6:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 90B0     		sub	sp, sp, #64
 469              	.LCFI7:
 470              		.cfi_def_cfa_offset 72
 471 0004 0446     		mov	r4, r0
 302:Core/Src/nyan_os.c ****     // We need to fetch the owners name from the eeprom
 303:Core/Src/nyan_os.c ****     EepromRead(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 472              		.loc 1 303 5 is_stmt 1 view .LVU141
 473 0006 4068     		ldr	r0, [r0, #4]
 474              	.LVL44:
 475              		.loc 1 303 5 is_stmt 0 view .LVU142
 476 0008 4023     		movs	r3, #64
 477 000a 2022     		movs	r2, #32
 478 000c 0021     		movs	r1, #0
 479 000e FFF7FEFF 		bl	EepromRead
 480              	.LVL45:
 304:Core/Src/nyan_os.c **** 
 305:Core/Src/nyan_os.c ****     // This has to be polling until callbacks are improved
 306:Core/Src/nyan_os.c ****     while(nos->eeprom->rx_inflight){}
 481              		.loc 1 306 5 is_stmt 1 view .LVU143
 482              	.L37:
 483              		.loc 1 306 37 discriminator 1 view .LVU144
 484              		.loc 1 306 10 discriminator 1 view .LVU145
 485              		.loc 1 306 14 is_stmt 0 discriminator 1 view .LVU146
 486 0012 6368     		ldr	r3, [r4, #4]
 487              		.loc 1 306 22 discriminator 1 view .LVU147
 488 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 489              		.loc 1 306 10 discriminator 1 view .LVU148
 490 0016 002B     		cmp	r3, #0
 491 0018 FBD1     		bne	.L37
 307:Core/Src/nyan_os.c **** 
 308:Core/Src/nyan_os.c ****     // Ensure data from EEPROM is null-terminated
 309:Core/Src/nyan_os.c ****     nos->eeprom->rx_buf[SIZE_BOARD_OWNER - 1] = '\0';
 492              		.loc 1 309 5 is_stmt 1 view .LVU149
 493              		.loc 1 309 8 is_stmt 0 view .LVU150
ARM GAS  /tmp/cc7zS8Hs.s 			page 16


 494 001a 6368     		ldr	r3, [r4, #4]
 495              		.loc 1 309 47 view .LVU151
 496 001c 0022     		movs	r2, #0
 497 001e 83F8C420 		strb	r2, [r3, #196]
 310:Core/Src/nyan_os.c **** 
 311:Core/Src/nyan_os.c ****     char owner[SIZE_BOARD_OWNER];
 498              		.loc 1 311 5 is_stmt 1 view .LVU152
 312:Core/Src/nyan_os.c ****     strncpy(owner, (const char *)nos->eeprom->rx_buf, SIZE_BOARD_OWNER);
 499              		.loc 1 312 5 view .LVU153
 500              		.loc 1 312 37 is_stmt 0 view .LVU154
 501 0022 6168     		ldr	r1, [r4, #4]
 502              		.loc 1 312 5 view .LVU155
 503 0024 4022     		movs	r2, #64
 504 0026 8531     		adds	r1, r1, #133
 505 0028 6846     		mov	r0, sp
 506 002a FFF7FEFF 		bl	strncpy
 507              	.LVL46:
 313:Core/Src/nyan_os.c **** 
 314:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo[0], sizeof(nyan_keys_getinfo));
 508              		.loc 1 314 5 is_stmt 1 view .LVU156
 509 002e 3822     		movs	r2, #56
 510 0030 0C49     		ldr	r1, .L39
 511 0032 2046     		mov	r0, r4
 512 0034 FFF7FEFF 		bl	NyanPrint
 513              	.LVL47:
 315:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo_owner[0], sizeof(nyan_keys_getinfo_owner));
 514              		.loc 1 315 5 view .LVU157
 515 0038 0822     		movs	r2, #8
 516 003a 0B49     		ldr	r1, .L39+4
 517 003c 2046     		mov	r0, r4
 518 003e FFF7FEFF 		bl	NyanPrint
 519              	.LVL48:
 316:Core/Src/nyan_os.c ****     NyanPrint(nos, owner, strlen(owner));
 520              		.loc 1 316 5 view .LVU158
 521 0042 6846     		mov	r0, sp
 522 0044 FFF7FEFF 		bl	strlen
 523              	.LVL49:
 524 0048 0246     		mov	r2, r0
 525 004a 6946     		mov	r1, sp
 526 004c 2046     		mov	r0, r4
 527 004e FFF7FEFF 		bl	NyanPrint
 528              	.LVL50:
 317:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 529              		.loc 1 317 5 view .LVU159
 530 0052 0322     		movs	r2, #3
 531 0054 0549     		ldr	r1, .L39+8
 532 0056 2046     		mov	r0, r4
 533 0058 FFF7FEFF 		bl	NyanPrint
 534              	.LVL51:
 318:Core/Src/nyan_os.c **** 
 319:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 535              		.loc 1 319 5 view .LVU160
 320:Core/Src/nyan_os.c **** }
 536              		.loc 1 320 1 is_stmt 0 view .LVU161
 537 005c 0120     		movs	r0, #1
 538 005e 10B0     		add	sp, sp, #64
 539              	.LCFI8:
ARM GAS  /tmp/cc7zS8Hs.s 			page 17


 540              		.cfi_def_cfa_offset 8
 541              		@ sp needed
 542 0060 10BD     		pop	{r4, pc}
 543              	.LVL52:
 544              	.L40:
 545              		.loc 1 320 1 view .LVU162
 546 0062 00BF     		.align	2
 547              	.L39:
 548 0064 00000000 		.word	.LANCHOR2
 549 0068 00000000 		.word	.LANCHOR3
 550 006c 00000000 		.word	.LANCHOR4
 551              		.cfi_endproc
 552              	.LFE154:
 554              		.section	.text.NyanExeSetOwner,"ax",%progbits
 555              		.align	1
 556              		.global	NyanExeSetOwner
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 561              	NyanExeSetOwner:
 562              	.LVL53:
 563              	.LFB155:
 321:Core/Src/nyan_os.c **** 
 322:Core/Src/nyan_os.c **** NyanReturn NyanExeSetOwner(volatile NyanOS* nos) 
 323:Core/Src/nyan_os.c **** {
 564              		.loc 1 323 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		.loc 1 323 1 is_stmt 0 view .LVU164
 569 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 570              	.LCFI9:
 571              		.cfi_def_cfa_offset 24
 572              		.cfi_offset 4, -24
 573              		.cfi_offset 5, -20
 574              		.cfi_offset 6, -16
 575              		.cfi_offset 7, -12
 576              		.cfi_offset 8, -8
 577              		.cfi_offset 14, -4
 324:Core/Src/nyan_os.c ****     if (!nos) {
 578              		.loc 1 324 5 is_stmt 1 view .LVU165
 579              		.loc 1 324 8 is_stmt 0 view .LVU166
 580 0004 0028     		cmp	r0, #0
 581 0006 74D0     		beq	.L54
 582 0008 0446     		mov	r4, r0
 325:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle null pointer
 326:Core/Src/nyan_os.c ****     }
 327:Core/Src/nyan_os.c **** 
 328:Core/Src/nyan_os.c ****     if (nos->command_buffer_num_args < 2) {
 583              		.loc 1 328 5 is_stmt 1 view .LVU167
 584              		.loc 1 328 12 is_stmt 0 view .LVU168
 585 000a 90F89130 		ldrb	r3, [r0, #145]	@ zero_extendqisi2
 586 000e DBB2     		uxtb	r3, r3
 587              		.loc 1 328 8 view .LVU169
 588 0010 012B     		cmp	r3, #1
 589 0012 70D9     		bls	.L55
 590              	.LBB4:
ARM GAS  /tmp/cc7zS8Hs.s 			page 18


 329:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Not enough args
 330:Core/Src/nyan_os.c ****     }
 331:Core/Src/nyan_os.c **** 
 332:Core/Src/nyan_os.c ****     size_t total_chars = 0;
 333:Core/Src/nyan_os.c **** 
 334:Core/Src/nyan_os.c ****     // Calculate total length needed, including spaces between arguments
 335:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 591              		.loc 1 335 14 view .LVU170
 592 0014 0125     		movs	r5, #1
 593              	.LBE4:
 332:Core/Src/nyan_os.c **** 
 594              		.loc 1 332 12 view .LVU171
 595 0016 0026     		movs	r6, #0
 596 0018 08E0     		b	.L43
 597              	.LVL54:
 598              	.L45:
 599              	.LBB5:
 336:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 600              		.loc 1 336 9 is_stmt 1 discriminator 4 view .LVU172
 601              		.loc 1 336 62 is_stmt 0 discriminator 4 view .LVU173
 602 001a 05F1AC03 		add	r3, r5, #172
 603 001e 54F82300 		ldr	r0, [r4, r3, lsl #2]
 604              		.loc 1 336 24 discriminator 4 view .LVU174
 605 0022 FFF7FEFF 		bl	strlen
 606              	.LVL55:
 607              		.loc 1 336 67 discriminator 4 view .LVU175
 608 0026 0130     		adds	r0, r0, #1
 609              		.loc 1 336 21 discriminator 4 view .LVU176
 610 0028 0644     		add	r6, r6, r0
 611              	.LVL56:
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 612              		.loc 1 335 93 is_stmt 1 discriminator 4 view .LVU177
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 613              		.loc 1 335 94 is_stmt 0 discriminator 4 view .LVU178
 614 002a 0135     		adds	r5, r5, #1
 615              	.LVL57:
 616              	.L43:
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 617              		.loc 1 335 21 is_stmt 1 discriminator 1 view .LVU179
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 618              		.loc 1 335 28 is_stmt 0 discriminator 1 view .LVU180
 619 002c 94F89130 		ldrb	r3, [r4, #145]	@ zero_extendqisi2
 620 0030 DBB2     		uxtb	r3, r3
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 621              		.loc 1 335 5 discriminator 1 view .LVU181
 622 0032 AB42     		cmp	r3, r5
 623 0034 05DD     		ble	.L44
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 624              		.loc 1 335 80 discriminator 3 view .LVU182
 625 0036 05F1AC03 		add	r3, r5, #172
 626 003a 54F82330 		ldr	r3, [r4, r3, lsl #2]
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 627              		.loc 1 335 54 discriminator 3 view .LVU183
 628 003e 002B     		cmp	r3, #0
 629 0040 EBD1     		bne	.L45
 630              	.L44:
 631              	.LBE5:
ARM GAS  /tmp/cc7zS8Hs.s 			page 19


 337:Core/Src/nyan_os.c ****     }
 338:Core/Src/nyan_os.c **** 
 339:Core/Src/nyan_os.c ****     // Since the size cant exceed 63 chars with null terminator 
 340:Core/Src/nyan_os.c ****     if (total_chars > SIZE_BOARD_OWNER - nos->command_buffer_num_args - 1  || total_chars == 0) {
 632              		.loc 1 340 5 is_stmt 1 view .LVU184
 633              		.loc 1 340 45 is_stmt 0 view .LVU185
 634 0042 94F89130 		ldrb	r3, [r4, #145]	@ zero_extendqisi2
 635              		.loc 1 340 71 view .LVU186
 636 0046 C3F13F03 		rsb	r3, r3, #63
 637              		.loc 1 340 8 view .LVU187
 638 004a B342     		cmp	r3, r6
 639 004c 57D3     		bcc	.L56
 640              		.loc 1 340 76 discriminator 1 view .LVU188
 641 004e 0EB9     		cbnz	r6, .L61
 341:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Would overflow memory boundaries 
 642              		.loc 1 341 16 view .LVU189
 643 0050 0026     		movs	r6, #0
 644              	.LVL58:
 645              		.loc 1 341 16 view .LVU190
 646 0052 51E0     		b	.L42
 647              	.LVL59:
 648              	.L61:
 342:Core/Src/nyan_os.c ****     }
 343:Core/Src/nyan_os.c **** 
 344:Core/Src/nyan_os.c ****     // Allocate memory for the new owner name
 345:Core/Src/nyan_os.c ****     char* owners_name = (char*)malloc(SIZE_BOARD_OWNER);
 649              		.loc 1 345 5 is_stmt 1 view .LVU191
 650              		.loc 1 345 32 is_stmt 0 view .LVU192
 651 0054 4020     		movs	r0, #64
 652 0056 FFF7FEFF 		bl	malloc
 653              	.LVL60:
 346:Core/Src/nyan_os.c ****     if (!owners_name) {
 654              		.loc 1 346 5 is_stmt 1 view .LVU193
 655              		.loc 1 346 8 is_stmt 0 view .LVU194
 656 005a 0546     		mov	r5, r0
 657              	.LVL61:
 658              		.loc 1 346 8 view .LVU195
 659 005c 0028     		cmp	r0, #0
 660 005e 50D0     		beq	.L58
 661              	.LBB6:
 347:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle allocation failure
 348:Core/Src/nyan_os.c ****     }
 349:Core/Src/nyan_os.c **** 
 350:Core/Src/nyan_os.c ****     // Zero out the SIZE_BOARD_OWNER bytes
 351:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i) {
 662              		.loc 1 351 14 view .LVU196
 663 0060 0023     		movs	r3, #0
 664 0062 02E0     		b	.L46
 665              	.LVL62:
 666              	.L47:
 352:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 667              		.loc 1 352 9 is_stmt 1 discriminator 3 view .LVU197
 668              		.loc 1 352 24 is_stmt 0 discriminator 3 view .LVU198
 669 0064 0022     		movs	r2, #0
 670 0066 EA54     		strb	r2, [r5, r3]
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 671              		.loc 1 351 43 is_stmt 1 discriminator 3 view .LVU199
ARM GAS  /tmp/cc7zS8Hs.s 			page 20


 672 0068 0133     		adds	r3, r3, #1
 673              	.LVL63:
 674              	.L46:
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 675              		.loc 1 351 21 discriminator 1 view .LVU200
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 676              		.loc 1 351 5 is_stmt 0 discriminator 1 view .LVU201
 677 006a 3F2B     		cmp	r3, #63
 678 006c FADD     		ble	.L47
 679              	.LBE6:
 353:Core/Src/nyan_os.c ****     }
 354:Core/Src/nyan_os.c **** 
 355:Core/Src/nyan_os.c ****     // Concatenate arguments with spaces
 356:Core/Src/nyan_os.c ****     char* current_pos = owners_name;
 680              		.loc 1 356 11 view .LVU202
 681 006e 2F46     		mov	r7, r5
 682              	.LBB7:
 357:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 683              		.loc 1 357 14 view .LVU203
 684 0070 0126     		movs	r6, #1
 685              	.LVL64:
 686              		.loc 1 357 14 view .LVU204
 687 0072 00E0     		b	.L48
 688              	.LVL65:
 689              	.L49:
 690              		.loc 1 357 93 is_stmt 1 discriminator 2 view .LVU205
 691              		.loc 1 357 94 is_stmt 0 discriminator 2 view .LVU206
 692 0074 0136     		adds	r6, r6, #1
 693              	.LVL66:
 694              	.L48:
 695              		.loc 1 357 21 is_stmt 1 discriminator 1 view .LVU207
 696              		.loc 1 357 28 is_stmt 0 discriminator 1 view .LVU208
 697 0076 94F89130 		ldrb	r3, [r4, #145]	@ zero_extendqisi2
 698 007a DBB2     		uxtb	r3, r3
 699              		.loc 1 357 5 discriminator 1 view .LVU209
 700 007c B342     		cmp	r3, r6
 701 007e 1FDD     		ble	.L50
 702              		.loc 1 357 80 discriminator 3 view .LVU210
 703 0080 06F1AC03 		add	r3, r6, #172
 704 0084 54F82330 		ldr	r3, [r4, r3, lsl #2]
 705              		.loc 1 357 54 discriminator 3 view .LVU211
 706 0088 D3B1     		cbz	r3, .L50
 358:Core/Src/nyan_os.c ****         strcpy(current_pos, (char *)nos->command_arg_buffer[i]);
 707              		.loc 1 358 9 is_stmt 1 view .LVU212
 708              		.loc 1 358 60 is_stmt 0 view .LVU213
 709 008a 06F1AC08 		add	r8, r6, #172
 710 008e 54F82810 		ldr	r1, [r4, r8, lsl #2]
 711              		.loc 1 358 9 view .LVU214
 712 0092 3846     		mov	r0, r7
 713 0094 FFF7FEFF 		bl	strcpy
 714              	.LVL67:
 359:Core/Src/nyan_os.c ****         current_pos += strlen((char *)nos->command_arg_buffer[i]);
 715              		.loc 1 359 9 is_stmt 1 view .LVU215
 716              		.loc 1 359 62 is_stmt 0 view .LVU216
 717 0098 54F82800 		ldr	r0, [r4, r8, lsl #2]
 718              		.loc 1 359 24 view .LVU217
 719 009c FFF7FEFF 		bl	strlen
ARM GAS  /tmp/cc7zS8Hs.s 			page 21


 720              	.LVL68:
 721              		.loc 1 359 21 view .LVU218
 722 00a0 0744     		add	r7, r7, r0
 723              	.LVL69:
 360:Core/Src/nyan_os.c **** 
 361:Core/Src/nyan_os.c ****         // Add a space after each argument, except the last one
 362:Core/Src/nyan_os.c ****         if (i < nos->command_buffer_num_args - 1 && nos->command_arg_buffer[i + 1] != NULL) {
 724              		.loc 1 362 9 is_stmt 1 view .LVU219
 725              		.loc 1 362 20 is_stmt 0 view .LVU220
 726 00a2 94F89130 		ldrb	r3, [r4, #145]	@ zero_extendqisi2
 727              		.loc 1 362 46 view .LVU221
 728 00a6 013B     		subs	r3, r3, #1
 729              		.loc 1 362 12 view .LVU222
 730 00a8 B342     		cmp	r3, r6
 731 00aa E3DD     		ble	.L49
 732              		.loc 1 362 76 discriminator 1 view .LVU223
 733 00ac 06F1AD03 		add	r3, r6, #173
 734 00b0 54F82330 		ldr	r3, [r4, r3, lsl #2]
 735              		.loc 1 362 50 discriminator 1 view .LVU224
 736 00b4 002B     		cmp	r3, #0
 737 00b6 DDD0     		beq	.L49
 363:Core/Src/nyan_os.c ****             *current_pos = ' ';
 738              		.loc 1 363 13 is_stmt 1 view .LVU225
 739              		.loc 1 363 26 is_stmt 0 view .LVU226
 740 00b8 2023     		movs	r3, #32
 741 00ba 07F8013B 		strb	r3, [r7], #1
 742              	.LVL70:
 364:Core/Src/nyan_os.c ****             current_pos++;
 743              		.loc 1 364 13 is_stmt 1 view .LVU227
 744              		.loc 1 364 13 is_stmt 0 view .LVU228
 745 00be D9E7     		b	.L49
 746              	.L50:
 747              		.loc 1 364 13 view .LVU229
 748              	.LBE7:
 365:Core/Src/nyan_os.c ****         }
 366:Core/Src/nyan_os.c ****     }
 367:Core/Src/nyan_os.c **** 
 368:Core/Src/nyan_os.c ****     // First lets clear out the TX buff
 369:Core/Src/nyan_os.c ****     if(EepromFlushTxBuff(nos->eeprom) != EEPROM_SUCCESS){
 749              		.loc 1 369 5 is_stmt 1 view .LVU230
 750              		.loc 1 369 8 is_stmt 0 view .LVU231
 751 00c0 6068     		ldr	r0, [r4, #4]
 752 00c2 FFF7FEFF 		bl	EepromFlushTxBuff
 753              	.LVL71:
 754 00c6 0646     		mov	r6, r0
 755              	.LVL72:
 756              		.loc 1 369 7 view .LVU232
 757 00c8 0128     		cmp	r0, #1
 758 00ca 1CD1     		bne	.L59
 759              	.LBB8:
 370:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 371:Core/Src/nyan_os.c ****     }
 372:Core/Src/nyan_os.c **** 
 373:Core/Src/nyan_os.c ****     // Second lets copy our new buffer over to the EEPROM driver
 374:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i){
 760              		.loc 1 374 14 view .LVU233
 761 00cc 0023     		movs	r3, #0
ARM GAS  /tmp/cc7zS8Hs.s 			page 22


 762              	.L52:
 763              	.LVL73:
 764              		.loc 1 374 21 is_stmt 1 discriminator 1 view .LVU234
 765              		.loc 1 374 5 is_stmt 0 discriminator 1 view .LVU235
 766 00ce 3F2B     		cmp	r3, #63
 767 00d0 05DC     		bgt	.L62
 375:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 768              		.loc 1 375 9 is_stmt 1 discriminator 3 view .LVU236
 769              		.loc 1 375 12 is_stmt 0 discriminator 3 view .LVU237
 770 00d2 6268     		ldr	r2, [r4, #4]
 771              		.loc 1 375 46 discriminator 3 view .LVU238
 772 00d4 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 773              		.loc 1 375 33 discriminator 3 view .LVU239
 774 00d6 1A44     		add	r2, r2, r3
 775 00d8 5171     		strb	r1, [r2, #5]
 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 776              		.loc 1 374 43 is_stmt 1 discriminator 3 view .LVU240
 777 00da 0133     		adds	r3, r3, #1
 778              	.LVL74:
 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 779              		.loc 1 374 43 is_stmt 0 discriminator 3 view .LVU241
 780 00dc F7E7     		b	.L52
 781              	.L62:
 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 782              		.loc 1 374 43 discriminator 3 view .LVU242
 783              	.LBE8:
 376:Core/Src/nyan_os.c ****     }
 377:Core/Src/nyan_os.c **** 
 378:Core/Src/nyan_os.c ****     // Free up the allocated memory
 379:Core/Src/nyan_os.c ****     free(owners_name);
 784              		.loc 1 379 5 is_stmt 1 view .LVU243
 785 00de 2846     		mov	r0, r5
 786 00e0 FFF7FEFF 		bl	free
 787              	.LVL75:
 380:Core/Src/nyan_os.c **** 
 381:Core/Src/nyan_os.c ****     // Write the name to the eeprom, the delay exists to ensure the write, later the callback can b
 382:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 788              		.loc 1 382 5 view .LVU244
 789 00e4 6068     		ldr	r0, [r4, #4]
 790 00e6 4023     		movs	r3, #64
 791 00e8 2022     		movs	r2, #32
 792 00ea 0021     		movs	r1, #0
 793 00ec FFF7FEFF 		bl	EepromWrite
 794              	.LVL76:
 383:Core/Src/nyan_os.c **** 
 384:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 795              		.loc 1 384 5 view .LVU245
 796              		.loc 1 384 12 is_stmt 0 view .LVU246
 797 00f0 02E0     		b	.L42
 798              	.LVL77:
 799              	.L54:
 325:Core/Src/nyan_os.c ****     }
 800              		.loc 1 325 16 view .LVU247
 801 00f2 0026     		movs	r6, #0
 802 00f4 00E0     		b	.L42
 803              	.L55:
 329:Core/Src/nyan_os.c ****     }
ARM GAS  /tmp/cc7zS8Hs.s 			page 23


 804              		.loc 1 329 16 view .LVU248
 805 00f6 0026     		movs	r6, #0
 806              	.LVL78:
 807              	.L42:
 385:Core/Src/nyan_os.c **** }
 808              		.loc 1 385 1 view .LVU249
 809 00f8 3046     		mov	r0, r6
 810 00fa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 811              	.LVL79:
 812              	.L56:
 341:Core/Src/nyan_os.c ****     }
 813              		.loc 1 341 16 view .LVU250
 814 00fe 0026     		movs	r6, #0
 815              	.LVL80:
 341:Core/Src/nyan_os.c ****     }
 816              		.loc 1 341 16 view .LVU251
 817 0100 FAE7     		b	.L42
 818              	.LVL81:
 819              	.L58:
 347:Core/Src/nyan_os.c ****     }
 820              		.loc 1 347 16 view .LVU252
 821 0102 0026     		movs	r6, #0
 822              	.LVL82:
 347:Core/Src/nyan_os.c ****     }
 823              		.loc 1 347 16 view .LVU253
 824 0104 F8E7     		b	.L42
 825              	.LVL83:
 826              	.L59:
 370:Core/Src/nyan_os.c ****     }
 827              		.loc 1 370 16 view .LVU254
 828 0106 0026     		movs	r6, #0
 829 0108 F6E7     		b	.L42
 830              		.cfi_endproc
 831              	.LFE155:
 833              		.section	.rodata.NyanExeWriteFpgaBitstream.str1.4,"aMS",%progbits,1
 834              		.align	2
 835              	.LC0:
 836 0000 25303278 		.ascii	"%02x\000"
 836      00
 837              		.section	.text.NyanExeWriteFpgaBitstream,"ax",%progbits
 838              		.align	1
 839              		.global	NyanExeWriteFpgaBitstream
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	NyanExeWriteFpgaBitstream:
 845              	.LVL84:
 846              	.LFB156:
 386:Core/Src/nyan_os.c **** 
 387:Core/Src/nyan_os.c **** NyanReturn NyanExeWriteFpgaBitstream(volatile NyanOS* nos)
 388:Core/Src/nyan_os.c **** {
 847              		.loc 1 388 1 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 232
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 389:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 390:Core/Src/nyan_os.c ****     if(nos->state == DIRECT_BUFFER_ACCESS)
ARM GAS  /tmp/cc7zS8Hs.s 			page 24


 851              		.loc 1 390 5 view .LVU256
 852              		.loc 1 390 11 is_stmt 0 view .LVU257
 853 0000 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 854 0002 DBB2     		uxtb	r3, r3
 855              		.loc 1 390 7 view .LVU258
 856 0004 022B     		cmp	r3, #2
 857 0006 00F0E380 		beq	.L85
 388:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 858              		.loc 1 388 1 view .LVU259
 859 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 860              	.LCFI10:
 861              		.cfi_def_cfa_offset 28
 862              		.cfi_offset 4, -28
 863              		.cfi_offset 5, -24
 864              		.cfi_offset 6, -20
 865              		.cfi_offset 7, -16
 866              		.cfi_offset 8, -12
 867              		.cfi_offset 9, -8
 868              		.cfi_offset 14, -4
 869 000e BBB0     		sub	sp, sp, #236
 870              	.LCFI11:
 871              		.cfi_def_cfa_offset 264
 872 0010 0446     		mov	r4, r0
 391:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 392:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 393:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 873              		.loc 1 393 5 is_stmt 1 view .LVU260
 874              		.loc 1 393 14 is_stmt 0 view .LVU261
 875 0012 0423     		movs	r3, #4
 876 0014 4373     		strb	r3, [r0, #13]
 394:Core/Src/nyan_os.c **** 
 395:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 877              		.loc 1 395 5 is_stmt 1 view .LVU262
 878              		.loc 1 395 27 is_stmt 0 view .LVU263
 879 0016 0023     		movs	r3, #0
 880 0018 C0F8A832 		str	r3, [r0, #680]
 396:Core/Src/nyan_os.c ****     // Now we need to convert the arg 1 into an int - skip arg 0 because that is the command.
 397:Core/Src/nyan_os.c ****     nos->bytes_array_size = atoi((char *)nos->command_arg_buffer[1]);
 881              		.loc 1 397 5 is_stmt 1 view .LVU264
 882              		.loc 1 397 65 is_stmt 0 view .LVU265
 883 001c D0F8B402 		ldr	r0, [r0, #692]
 884              	.LVL85:
 885              		.loc 1 397 29 view .LVU266
 886 0020 FFF7FEFF 		bl	atoi
 887              	.LVL86:
 888              		.loc 1 397 27 view .LVU267
 889 0024 C4F8A802 		str	r0, [r4, #680]
 398:Core/Src/nyan_os.c ****     // Safety the size of the buffer to ensure that it doesn't exceed the size of a block 
 399:Core/Src/nyan_os.c ****     if(nos->bytes_array_size  > 0xFFFF) {
 890              		.loc 1 399 5 is_stmt 1 view .LVU268
 891              		.loc 1 399 11 is_stmt 0 view .LVU269
 892 0028 D4F8A832 		ldr	r3, [r4, #680]
 893              		.loc 1 399 7 view .LVU270
 894 002c B3F5803F 		cmp	r3, #65536
 895 0030 18D2     		bcs	.L93
 400:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 401:Core/Src/nyan_os.c ****         nos->bytes_array_size = 0;
ARM GAS  /tmp/cc7zS8Hs.s 			page 25


 402:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 403:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 404:Core/Src/nyan_os.c ****     }
 405:Core/Src/nyan_os.c ****     // Write the length of the bitstream we are accepting to the EEPROM - 16 bytes - 
 406:Core/Src/nyan_os.c ****     uint32_t size_array[4] = { 0x00, 0x00, 0x00, nos->bytes_array_size };
 896              		.loc 1 406 5 is_stmt 1 view .LVU271
 897              		.loc 1 406 14 is_stmt 0 view .LVU272
 898 0032 0023     		movs	r3, #0
 899 0034 3693     		str	r3, [sp, #216]
 900 0036 3793     		str	r3, [sp, #220]
 901 0038 3893     		str	r3, [sp, #224]
 902              		.loc 1 406 53 view .LVU273
 903 003a D4F8A832 		ldr	r3, [r4, #680]
 904              		.loc 1 406 14 view .LVU274
 905 003e 3993     		str	r3, [sp, #228]
 407:Core/Src/nyan_os.c ****     if(nos->eeprom->tx_inflight) {
 906              		.loc 1 407 5 is_stmt 1 view .LVU275
 907              		.loc 1 407 11 is_stmt 0 view .LVU276
 908 0040 6368     		ldr	r3, [r4, #4]
 909              		.loc 1 407 19 view .LVU277
 910 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 911              		.loc 1 407 7 view .LVU278
 912 0044 C3B9     		cbnz	r3, .L94
 913              	.LBB9:
 408:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 409:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size_tx_busy[0], sizeof(nyan_keys_wr
 410:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 411:Core/Src/nyan_os.c ****     }
 412:Core/Src/nyan_os.c ****     // Copy the data to the EEPROM buffer for writing
 413:Core/Src/nyan_os.c ****     for(short i = 0; i < sizeof(size_array); ++i) {
 914              		.loc 1 413 15 view .LVU279
 915 0046 0022     		movs	r2, #0
 916              	.L66:
 917              	.LVL87:
 918              		.loc 1 413 22 is_stmt 1 discriminator 1 view .LVU280
 919              		.loc 1 413 24 is_stmt 0 discriminator 1 view .LVU281
 920 0048 93B2     		uxth	r3, r2
 921              		.loc 1 413 5 discriminator 1 view .LVU282
 922 004a 0F2B     		cmp	r3, #15
 923 004c 1BD8     		bhi	.L95
 414:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 924              		.loc 1 414 9 is_stmt 1 discriminator 3 view .LVU283
 925              		.loc 1 414 12 is_stmt 0 discriminator 3 view .LVU284
 926 004e 6168     		ldr	r1, [r4, #4]
 927              		.loc 1 414 56 discriminator 3 view .LVU285
 928 0050 02F1E800 		add	r0, r2, #232
 929 0054 6844     		add	r0, sp, r0
 930 0056 10F8100C 		ldrb	r0, [r0, #-16]	@ zero_extendqisi2
 931              		.loc 1 414 32 discriminator 3 view .LVU286
 932 005a 0A44     		add	r2, r2, r1
 933              	.LVL88:
 934              		.loc 1 414 32 discriminator 3 view .LVU287
 935 005c 5071     		strb	r0, [r2, #5]
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 936              		.loc 1 413 46 is_stmt 1 discriminator 3 view .LVU288
 937 005e 0133     		adds	r3, r3, #1
 938              	.LVL89:
ARM GAS  /tmp/cc7zS8Hs.s 			page 26


 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 939              		.loc 1 413 46 is_stmt 0 discriminator 3 view .LVU289
 940 0060 1AB2     		sxth	r2, r3
 941              	.LVL90:
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 942              		.loc 1 413 46 discriminator 3 view .LVU290
 943 0062 F1E7     		b	.L66
 944              	.LVL91:
 945              	.L93:
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 946              		.loc 1 413 46 discriminator 3 view .LVU291
 947              	.LBE9:
 401:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 948              		.loc 1 401 9 is_stmt 1 view .LVU292
 401:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 949              		.loc 1 401 31 is_stmt 0 view .LVU293
 950 0064 0025     		movs	r5, #0
 951 0066 C4F8A852 		str	r5, [r4, #680]
 402:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 952              		.loc 1 402 9 is_stmt 1 view .LVU294
 953 006a 4822     		movs	r2, #72
 954 006c 5A49     		ldr	r1, .L99
 955 006e 2046     		mov	r0, r4
 956 0070 FFF7FEFF 		bl	NyanPrint
 957              	.LVL92:
 403:Core/Src/nyan_os.c ****     }
 958              		.loc 1 403 9 view .LVU295
 403:Core/Src/nyan_os.c ****     }
 959              		.loc 1 403 16 is_stmt 0 view .LVU296
 960 0074 2846     		mov	r0, r5
 961 0076 A8E0     		b	.L64
 962              	.L94:
 409:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 963              		.loc 1 409 9 is_stmt 1 view .LVU297
 964 0078 3722     		movs	r2, #55
 965 007a 5849     		ldr	r1, .L99+4
 966 007c 2046     		mov	r0, r4
 967 007e FFF7FEFF 		bl	NyanPrint
 968              	.LVL93:
 410:Core/Src/nyan_os.c ****     }
 969              		.loc 1 410 9 view .LVU298
 410:Core/Src/nyan_os.c ****     }
 970              		.loc 1 410 16 is_stmt 0 view .LVU299
 971 0082 0020     		movs	r0, #0
 972 0084 A1E0     		b	.L64
 973              	.LVL94:
 974              	.L95:
 415:Core/Src/nyan_os.c ****     }
 416:Core/Src/nyan_os.c ****     // Write the data to the eeprom - wait for the write to complete since this is DMA and order ma
 417:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_FPGA_BITSTREAM_LEN, SIZE_FPGA_BITSTREAM_LEN);
 975              		.loc 1 417 5 is_stmt 1 view .LVU300
 976 0086 6068     		ldr	r0, [r4, #4]
 977 0088 1023     		movs	r3, #16
 978 008a B022     		movs	r2, #176
 979              	.LVL95:
 980              		.loc 1 417 5 is_stmt 0 view .LVU301
 981 008c 0021     		movs	r1, #0
ARM GAS  /tmp/cc7zS8Hs.s 			page 27


 982 008e FFF7FEFF 		bl	EepromWrite
 983              	.LVL96:
 418:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 984              		.loc 1 418 5 is_stmt 1 view .LVU302
 985              	.L68:
 419:Core/Src/nyan_os.c ****         // Wait while the TX is in flight as to avoid bogus writes;
 420:Core/Src/nyan_os.c ****     }
 986              		.loc 1 420 5 discriminator 1 view .LVU303
 418:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 987              		.loc 1 418 10 discriminator 1 view .LVU304
 418:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 988              		.loc 1 418 14 is_stmt 0 discriminator 1 view .LVU305
 989 0092 6368     		ldr	r3, [r4, #4]
 418:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 990              		.loc 1 418 22 discriminator 1 view .LVU306
 991 0094 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 418:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 992              		.loc 1 418 10 discriminator 1 view .LVU307
 993 0096 002E     		cmp	r6, #0
 994 0098 FBD1     		bne	.L68
 421:Core/Src/nyan_os.c **** 
 422:Core/Src/nyan_os.c ****     // Print the ready to accept bytes confirmation message - This does nothing because it's execut
 423:Core/Src/nyan_os.c ****     // NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_start[0], sizeof(nyan_keys_write_bitst
 424:Core/Src/nyan_os.c **** 
 425:Core/Src/nyan_os.c ****     // Lets allocate some memory to save this bitstream we are importing
 426:Core/Src/nyan_os.c ****     nos->bytes_array = (uint8_t*)malloc(nos->bytes_array_size * sizeof(uint8_t));
 995              		.loc 1 426 5 is_stmt 1 view .LVU308
 996              		.loc 1 426 44 is_stmt 0 view .LVU309
 997 009a D4F8A802 		ldr	r0, [r4, #680]
 998              		.loc 1 426 34 view .LVU310
 999 009e FFF7FEFF 		bl	malloc
 1000              	.LVL97:
 1001              		.loc 1 426 22 view .LVU311
 1002 00a2 C4F8AC02 		str	r0, [r4, #684]
 427:Core/Src/nyan_os.c ****     if(nos->bytes_array == NULL) {
 1003              		.loc 1 427 5 is_stmt 1 view .LVU312
 1004              		.loc 1 427 11 is_stmt 0 view .LVU313
 1005 00a6 D4F8AC32 		ldr	r3, [r4, #684]
 1006              		.loc 1 427 7 view .LVU314
 1007 00aa BBB1     		cbz	r3, .L96
 428:Core/Src/nyan_os.c ****         // Handle memory allocation failure
 429:Core/Src/nyan_os.c ****         nos->state = READY; // or appropriate error state
 430:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 431:Core/Src/nyan_os.c ****     }
 432:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 433:Core/Src/nyan_os.c ****     nos->state = DIRECT_BUFFER_ACCESS;
 1008              		.loc 1 433 5 is_stmt 1 view .LVU315
 1009              		.loc 1 433 16 is_stmt 0 view .LVU316
 1010 00ac 0223     		movs	r3, #2
 1011 00ae 2373     		strb	r3, [r4, #12]
 434:Core/Src/nyan_os.c **** 
 435:Core/Src/nyan_os.c ****     while(nos->bytes_received != nos->bytes_array_size){
 1012              		.loc 1 435 5 is_stmt 1 view .LVU317
 1013              	.L70:
 436:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 437:Core/Src/nyan_os.c ****         // The user can exit this loop by just filling the buffer up for now.
 438:Core/Src/nyan_os.c ****         // Enabling am abort sequence would be a next step
ARM GAS  /tmp/cc7zS8Hs.s 			page 28


 439:Core/Src/nyan_os.c ****     }
 1014              		.loc 1 439 5 discriminator 1 view .LVU318
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1015              		.loc 1 435 10 discriminator 1 view .LVU319
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1016              		.loc 1 435 14 is_stmt 0 discriminator 1 view .LVU320
 1017 00b0 D4F8A422 		ldr	r2, [r4, #676]
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1018              		.loc 1 435 37 discriminator 1 view .LVU321
 1019 00b4 D4F8A832 		ldr	r3, [r4, #680]
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1020              		.loc 1 435 10 discriminator 1 view .LVU322
 1021 00b8 9A42     		cmp	r2, r3
 1022 00ba F9D1     		bne	.L70
 440:Core/Src/nyan_os.c **** 
 441:Core/Src/nyan_os.c ****     // Take a Sha256 Hash of the inputs for the user display
 442:Core/Src/nyan_os.c ****     BYTE buf[SHA256_BLOCK_SIZE];
 1023              		.loc 1 442 5 is_stmt 1 view .LVU323
 443:Core/Src/nyan_os.c ****     SHA256_CTX ctx;
 1024              		.loc 1 443 5 view .LVU324
 444:Core/Src/nyan_os.c ****     
 445:Core/Src/nyan_os.c ****     sha256_init(&ctx);
 1025              		.loc 1 445 5 view .LVU325
 1026 00bc 12A8     		add	r0, sp, #72
 1027 00be FFF7FEFF 		bl	sha256_init
 1028              	.LVL98:
 446:Core/Src/nyan_os.c ****     sha256_update(&ctx, nos->bytes_array, nos->bytes_array_size);
 1029              		.loc 1 446 5 view .LVU326
 1030              		.loc 1 446 28 is_stmt 0 view .LVU327
 1031 00c2 D4F8AC12 		ldr	r1, [r4, #684]
 1032              		.loc 1 446 46 view .LVU328
 1033 00c6 D4F8A822 		ldr	r2, [r4, #680]
 1034              		.loc 1 446 5 view .LVU329
 1035 00ca 12A8     		add	r0, sp, #72
 1036 00cc FFF7FEFF 		bl	sha256_update
 1037              	.LVL99:
 447:Core/Src/nyan_os.c ****     sha256_final(&ctx, buf);
 1038              		.loc 1 447 5 is_stmt 1 view .LVU330
 1039 00d0 2EA9     		add	r1, sp, #184
 1040 00d2 12A8     		add	r0, sp, #72
 1041 00d4 FFF7FEFF 		bl	sha256_final
 1042              	.LVL100:
 448:Core/Src/nyan_os.c **** 
 449:Core/Src/nyan_os.c ****     // Print the sha256 output for the user to verify their bitstream
 450:Core/Src/nyan_os.c ****     char hexString[SHA256_BLOCK_SIZE * 2 + 1];
 1043              		.loc 1 450 5 view .LVU331
 451:Core/Src/nyan_os.c ****     for (int i = 0; i < SHA256_BLOCK_SIZE; i++) {
 1044              		.loc 1 451 5 view .LVU332
 1045              	.LBB10:
 1046              		.loc 1 451 10 view .LVU333
 1047              		.loc 1 451 14 is_stmt 0 view .LVU334
 1048 00d8 0025     		movs	r5, #0
 1049              		.loc 1 451 5 view .LVU335
 1050 00da 0FE0     		b	.L71
 1051              	.LVL101:
 1052              	.L96:
 1053              		.loc 1 451 5 view .LVU336
ARM GAS  /tmp/cc7zS8Hs.s 			page 29


 1054              	.LBE10:
 429:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1055              		.loc 1 429 9 is_stmt 1 view .LVU337
 429:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1056              		.loc 1 429 20 is_stmt 0 view .LVU338
 1057 00dc 0123     		movs	r3, #1
 1058 00de 2373     		strb	r3, [r4, #12]
 430:Core/Src/nyan_os.c ****     }
 1059              		.loc 1 430 9 is_stmt 1 view .LVU339
 430:Core/Src/nyan_os.c ****     }
 1060              		.loc 1 430 16 is_stmt 0 view .LVU340
 1061 00e0 0020     		movs	r0, #0
 1062 00e2 72E0     		b	.L64
 1063              	.LVL102:
 1064              	.L72:
 1065              	.LBB11:
 452:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1066              		.loc 1 452 9 is_stmt 1 discriminator 3 view .LVU341
 1067              		.loc 1 452 47 is_stmt 0 discriminator 3 view .LVU342
 1068 00e4 05F1E803 		add	r3, r5, #232
 1069 00e8 6B44     		add	r3, sp, r3
 1070              		.loc 1 452 9 discriminator 3 view .LVU343
 1071 00ea 13F8302C 		ldrb	r2, [r3, #-48]	@ zero_extendqisi2
 1072 00ee 3C49     		ldr	r1, .L99+8
 1073 00f0 01AB     		add	r3, sp, #4
 1074 00f2 03EB4500 		add	r0, r3, r5, lsl #1
 1075 00f6 FFF7FEFF 		bl	sprintf
 1076              	.LVL103:
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1077              		.loc 1 451 44 is_stmt 1 discriminator 3 view .LVU344
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1078              		.loc 1 451 45 is_stmt 0 discriminator 3 view .LVU345
 1079 00fa 0135     		adds	r5, r5, #1
 1080              	.LVL104:
 1081              	.L71:
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1082              		.loc 1 451 21 is_stmt 1 discriminator 1 view .LVU346
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1083              		.loc 1 451 5 is_stmt 0 discriminator 1 view .LVU347
 1084 00fc 1F2D     		cmp	r5, #31
 1085 00fe F1DD     		ble	.L72
 1086              	.LBE11:
 453:Core/Src/nyan_os.c ****     }
 454:Core/Src/nyan_os.c ****     hexString[SHA256_BLOCK_SIZE * 2] = '\0';
 1087              		.loc 1 454 5 is_stmt 1 view .LVU348
 1088              		.loc 1 454 38 is_stmt 0 view .LVU349
 1089 0100 0023     		movs	r3, #0
 1090 0102 8DF84430 		strb	r3, [sp, #68]
 455:Core/Src/nyan_os.c ****     
 456:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&hexString[0], SHA256_BLOCK_SIZE * 2);
 1091              		.loc 1 456 5 is_stmt 1 view .LVU350
 1092 0106 4022     		movs	r2, #64
 1093 0108 01A9     		add	r1, sp, #4
 1094 010a 2046     		mov	r0, r4
 1095 010c FFF7FEFF 		bl	NyanPrint
 1096              	.LVL105:
 457:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
ARM GAS  /tmp/cc7zS8Hs.s 			page 30


 1097              		.loc 1 457 5 view .LVU351
 1098 0110 0322     		movs	r2, #3
 1099 0112 3449     		ldr	r1, .L99+12
 1100 0114 2046     		mov	r0, r4
 1101 0116 FFF7FEFF 		bl	NyanPrint
 1102              	.LVL106:
 458:Core/Src/nyan_os.c **** 
 459:Core/Src/nyan_os.c ****     // Calculate the number iterations 
 460:Core/Src/nyan_os.c ****     unsigned int r = nos->bytes_array_size % EEPROM_DRIVER_TX_BUF_SZ;
 1103              		.loc 1 460 5 view .LVU352
 1104              		.loc 1 460 25 is_stmt 0 view .LVU353
 1105 011a D4F8A832 		ldr	r3, [r4, #680]
 1106              	.LVL107:
 461:Core/Src/nyan_os.c ****     unsigned int q = nos->bytes_array_size / EEPROM_DRIVER_TX_BUF_SZ;
 1107              		.loc 1 461 5 is_stmt 1 view .LVU354
 1108              		.loc 1 461 25 is_stmt 0 view .LVU355
 1109 011e D4F8A872 		ldr	r7, [r4, #680]
 1110              		.loc 1 461 18 view .LVU356
 1111 0122 4FEAD718 		lsr	r8, r7, #7
 1112              	.LVL108:
 462:Core/Src/nyan_os.c ****     if(r > 0)
 1113              		.loc 1 462 5 is_stmt 1 view .LVU357
 1114              		.loc 1 462 7 is_stmt 0 view .LVU358
 1115 0126 13F07F0F 		tst	r3, #127
 1116 012a 01D0     		beq	.L73
 463:Core/Src/nyan_os.c ****         ++q;
 1117              		.loc 1 463 9 is_stmt 1 view .LVU359
 1118 012c 08F10108 		add	r8, r8, #1
 1119              	.LVL109:
 1120              	.L73:
 464:Core/Src/nyan_os.c ****     if (q == 0)
 1121              		.loc 1 464 5 view .LVU360
 1122              		.loc 1 464 8 is_stmt 0 view .LVU361
 1123 0130 B8F1000F 		cmp	r8, #0
 1124 0134 4ED0     		beq	.L87
 1125              	.LBB12:
 465:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 466:Core/Src/nyan_os.c **** 
 467:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the EEPROM, write, wait ...
 468:Core/Src/nyan_os.c ****     for(unsigned short page = 0; page < q; ++page) {
 1126              		.loc 1 468 24 view .LVU362
 1127 0136 0025     		movs	r5, #0
 1128              	.LVL110:
 1129              		.loc 1 468 24 view .LVU363
 1130 0138 31E0     		b	.L74
 1131              	.LVL111:
 1132              	.L76:
 1133              	.LBB13:
 1134              	.LBB14:
 469:Core/Src/nyan_os.c ****         bool txSuccess = false;
 470:Core/Src/nyan_os.c ****         bool txRetry = false;
 471:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 472:Core/Src/nyan_os.c ****         EepromFlushTxBuff(nos->eeprom);
 473:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 474:Core/Src/nyan_os.c ****         for(uint8_t byte = 0; byte < EEPROM_DRIVER_TX_BUF_SZ; ++byte) {
 475:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1135              		.loc 1 475 13 is_stmt 1 discriminator 3 view .LVU364
ARM GAS  /tmp/cc7zS8Hs.s 			page 31


 1136              		.loc 1 475 44 is_stmt 0 discriminator 3 view .LVU365
 1137 013a D4F8AC02 		ldr	r0, [r4, #684]
 1138              		.loc 1 475 89 discriminator 3 view .LVU366
 1139 013e 03EBC511 		add	r1, r3, r5, lsl #7
 1140              		.loc 1 475 16 discriminator 3 view .LVU367
 1141 0142 6268     		ldr	r2, [r4, #4]
 1142              		.loc 1 475 57 discriminator 3 view .LVU368
 1143 0144 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1144              		.loc 1 475 39 discriminator 3 view .LVU369
 1145 0146 1A44     		add	r2, r2, r3
 1146 0148 5171     		strb	r1, [r2, #5]
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1147              		.loc 1 474 63 is_stmt 1 discriminator 3 view .LVU370
 1148 014a 0133     		adds	r3, r3, #1
 1149              	.LVL112:
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1150              		.loc 1 474 63 is_stmt 0 discriminator 3 view .LVU371
 1151 014c DBB2     		uxtb	r3, r3
 1152              	.LVL113:
 1153              	.L75:
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1154              		.loc 1 474 31 is_stmt 1 discriminator 1 view .LVU372
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1155              		.loc 1 474 9 is_stmt 0 discriminator 1 view .LVU373
 1156 014e 13F0800F 		tst	r3, #128
 1157 0152 F2D0     		beq	.L76
 1158              	.LBE14:
 470:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1159              		.loc 1 470 14 view .LVU374
 1160 0154 B146     		mov	r9, r6
 469:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1161              		.loc 1 469 14 view .LVU375
 1162 0156 3746     		mov	r7, r6
 1163              	.LVL114:
 1164              	.L79:
 476:Core/Src/nyan_os.c ****         }
 477:Core/Src/nyan_os.c ****         // Attempt to write the data to the EEPROM - Until the job is done.
 478:Core/Src/nyan_os.c ****         while(!txSuccess) {
 1165              		.loc 1 478 14 is_stmt 1 view .LVU376
 1166 0158 FFB9     		cbnz	r7, .L97
 479:Core/Src/nyan_os.c ****             if(EepromWrite(nos->eeprom, true, (EEPROM_DRIVER_TX_BUF_SZ * page) + ADDR_FPGA_BITSTREA
 1167              		.loc 1 479 13 view .LVU377
 1168              		.loc 1 479 16 is_stmt 0 view .LVU378
 1169 015a 6068     		ldr	r0, [r4, #4]
 1170 015c EA01     		lsls	r2, r5, #7
 1171 015e 8023     		movs	r3, #128
 1172 0160 12B2     		sxth	r2, r2
 1173 0162 0121     		movs	r1, #1
 1174 0164 FFF7FEFF 		bl	EepromWrite
 1175              	.LVL115:
 1176              		.loc 1 479 15 view .LVU379
 1177 0168 0028     		cmp	r0, #0
 1178 016a F5D0     		beq	.L79
 1179              	.LVL116:
 1180              	.L78:
 480:Core/Src/nyan_os.c ****                 while(nos->eeprom->tx_inflight) {
 1181              		.loc 1 480 22 is_stmt 1 view .LVU380
ARM GAS  /tmp/cc7zS8Hs.s 			page 32


 1182              		.loc 1 480 26 is_stmt 0 view .LVU381
 1183 016c 6368     		ldr	r3, [r4, #4]
 1184              		.loc 1 480 34 view .LVU382
 1185 016e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1186              		.loc 1 480 22 view .LVU383
 1187 0170 53B1     		cbz	r3, .L80
 481:Core/Src/nyan_os.c ****                     // Check for transmission success
 482:Core/Src/nyan_os.c ****                     if(nos->eeprom->tx_failed) {
 1188              		.loc 1 482 21 is_stmt 1 view .LVU384
 1189              		.loc 1 482 27 is_stmt 0 view .LVU385
 1190 0172 6368     		ldr	r3, [r4, #4]
 1191              		.loc 1 482 35 view .LVU386
 1192 0174 93F80390 		ldrb	r9, [r3, #3]	@ zero_extendqisi2
 1193              	.LVL117:
 1194              		.loc 1 482 23 view .LVU387
 1195 0178 B9F1000F 		cmp	r9, #0
 1196 017c F6D0     		beq	.L78
 483:Core/Src/nyan_os.c ****                         nos->eeprom->tx_inflight = false;
 1197              		.loc 1 483 25 is_stmt 1 view .LVU388
 1198              		.loc 1 483 28 is_stmt 0 view .LVU389
 1199 017e 6268     		ldr	r2, [r4, #4]
 1200              		.loc 1 483 50 view .LVU390
 1201 0180 0023     		movs	r3, #0
 1202 0182 9370     		strb	r3, [r2, #2]
 484:Core/Src/nyan_os.c ****                         nos->eeprom->tx_failed = false;
 1203              		.loc 1 484 25 is_stmt 1 view .LVU391
 1204              		.loc 1 484 28 is_stmt 0 view .LVU392
 1205 0184 6268     		ldr	r2, [r4, #4]
 1206              		.loc 1 484 48 view .LVU393
 1207 0186 D370     		strb	r3, [r2, #3]
 485:Core/Src/nyan_os.c ****                         txRetry = true;
 1208              		.loc 1 485 25 is_stmt 1 view .LVU394
 1209              	.LVL118:
 486:Core/Src/nyan_os.c ****                         break; // Break from the while loop on success
 1210              		.loc 1 486 25 view .LVU395
 1211              	.L80:
 487:Core/Src/nyan_os.c ****                     }
 488:Core/Src/nyan_os.c ****                     txRetry = false;
 489:Core/Src/nyan_os.c ****                 }
 490:Core/Src/nyan_os.c ****                 if(nos->eeprom->tx_inflight == 0 && txRetry == false) {
 1212              		.loc 1 490 17 view .LVU396
 1213              		.loc 1 490 23 is_stmt 0 view .LVU397
 1214 0188 6368     		ldr	r3, [r4, #4]
 1215              		.loc 1 490 31 view .LVU398
 1216 018a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1217              		.loc 1 490 19 view .LVU399
 1218 018c 002B     		cmp	r3, #0
 1219 018e E3D1     		bne	.L79
 1220              		.loc 1 490 50 discriminator 1 view .LVU400
 1221 0190 B9F1000F 		cmp	r9, #0
 1222 0194 E0D1     		bne	.L79
 491:Core/Src/nyan_os.c ****                     txSuccess = true;
 1223              		.loc 1 491 31 view .LVU401
 1224 0196 0127     		movs	r7, #1
 1225              	.LVL119:
 1226              		.loc 1 491 31 view .LVU402
 1227 0198 DEE7     		b	.L79
ARM GAS  /tmp/cc7zS8Hs.s 			page 33


 1228              	.LVL120:
 1229              	.L97:
 1230              		.loc 1 491 31 view .LVU403
 1231              	.LBE13:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1232              		.loc 1 468 44 is_stmt 1 discriminator 2 view .LVU404
 1233 019a 0135     		adds	r5, r5, #1
 1234              	.LVL121:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1235              		.loc 1 468 44 is_stmt 0 discriminator 2 view .LVU405
 1236 019c ADB2     		uxth	r5, r5
 1237              	.LVL122:
 1238              	.L74:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1239              		.loc 1 468 34 is_stmt 1 discriminator 1 view .LVU406
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1240              		.loc 1 468 5 is_stmt 0 discriminator 1 view .LVU407
 1241 019e 4545     		cmp	r5, r8
 1242 01a0 04D2     		bcs	.L98
 1243              	.LBB16:
 469:Core/Src/nyan_os.c ****         bool txRetry = false;
 1244              		.loc 1 469 9 is_stmt 1 view .LVU408
 1245              	.LVL123:
 470:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1246              		.loc 1 470 9 view .LVU409
 472:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1247              		.loc 1 472 9 view .LVU410
 1248 01a2 6068     		ldr	r0, [r4, #4]
 1249 01a4 FFF7FEFF 		bl	EepromFlushTxBuff
 1250              	.LVL124:
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1251              		.loc 1 474 9 view .LVU411
 1252              	.LBB15:
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1253              		.loc 1 474 13 view .LVU412
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1254              		.loc 1 474 21 is_stmt 0 view .LVU413
 1255 01a8 0023     		movs	r3, #0
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1256              		.loc 1 474 9 view .LVU414
 1257 01aa D0E7     		b	.L75
 1258              	.LVL125:
 1259              	.L98:
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1260              		.loc 1 474 9 view .LVU415
 1261              	.LBE15:
 1262              	.LBE16:
 1263              	.LBE12:
 492:Core/Src/nyan_os.c ****                     txRetry = false;
 493:Core/Src/nyan_os.c ****                 }
 494:Core/Src/nyan_os.c ****             }
 495:Core/Src/nyan_os.c ****         }
 496:Core/Src/nyan_os.c ****     }
 497:Core/Src/nyan_os.c **** 
 498:Core/Src/nyan_os.c ****     // Perform function cleanup maintenance
 499:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 1264              		.loc 1 499 5 is_stmt 1 view .LVU416
ARM GAS  /tmp/cc7zS8Hs.s 			page 34


 1265              		.loc 1 499 27 is_stmt 0 view .LVU417
 1266 01ac 0025     		movs	r5, #0
 1267              	.LVL126:
 1268              		.loc 1 499 27 view .LVU418
 1269 01ae C4F8A852 		str	r5, [r4, #680]
 500:Core/Src/nyan_os.c ****     nos->bytes_received = 0;
 1270              		.loc 1 500 5 is_stmt 1 view .LVU419
 1271              		.loc 1 500 25 is_stmt 0 view .LVU420
 1272 01b2 C4F8A452 		str	r5, [r4, #676]
 501:Core/Src/nyan_os.c ****     free(nos->bytes_array);
 1273              		.loc 1 501 5 is_stmt 1 view .LVU421
 1274              		.loc 1 501 13 is_stmt 0 view .LVU422
 1275 01b6 D4F8AC02 		ldr	r0, [r4, #684]
 1276              		.loc 1 501 5 view .LVU423
 1277 01ba FFF7FEFF 		bl	free
 1278              	.LVL127:
 502:Core/Src/nyan_os.c ****     nos->bytes_array = NULL;
 1279              		.loc 1 502 5 is_stmt 1 view .LVU424
 1280              		.loc 1 502 22 is_stmt 0 view .LVU425
 1281 01be C4F8AC52 		str	r5, [r4, #684]
 503:Core/Src/nyan_os.c ****     nos->state = READY;
 1282              		.loc 1 503 5 is_stmt 1 view .LVU426
 1283              		.loc 1 503 16 is_stmt 0 view .LVU427
 1284 01c2 0120     		movs	r0, #1
 1285 01c4 2073     		strb	r0, [r4, #12]
 504:Core/Src/nyan_os.c **** 
 505:Core/Src/nyan_os.c ****     // Set the FPGA configuration to false - main() will pick it up to perform the programming.
 506:Core/Src/nyan_os.c ****     nos_fpga.configured = false;
 1286              		.loc 1 506 5 is_stmt 1 view .LVU428
 1287              		.loc 1 506 25 is_stmt 0 view .LVU429
 1288 01c6 084B     		ldr	r3, .L99+16
 1289 01c8 1D70     		strb	r5, [r3]
 507:Core/Src/nyan_os.c **** 
 508:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1290              		.loc 1 508 5 is_stmt 1 view .LVU430
 1291              	.LVL128:
 1292              	.L64:
 509:Core/Src/nyan_os.c **** }
 1293              		.loc 1 509 1 is_stmt 0 view .LVU431
 1294 01ca 3BB0     		add	sp, sp, #236
 1295              	.LCFI12:
 1296              		.cfi_def_cfa_offset 28
 1297              		@ sp needed
 1298 01cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1299              	.LVL129:
 1300              	.L85:
 1301              	.LCFI13:
 1302              		.cfi_def_cfa_offset 0
 1303              		.cfi_restore 4
 1304              		.cfi_restore 5
 1305              		.cfi_restore 6
 1306              		.cfi_restore 7
 1307              		.cfi_restore 8
 1308              		.cfi_restore 9
 1309              		.cfi_restore 14
 391:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 1310              		.loc 1 391 16 view .LVU432
ARM GAS  /tmp/cc7zS8Hs.s 			page 35


 1311 01d0 0020     		movs	r0, #0
 1312              	.LVL130:
 1313              		.loc 1 509 1 view .LVU433
 1314 01d2 7047     		bx	lr
 1315              	.LVL131:
 1316              	.L87:
 1317              	.LCFI14:
 1318              		.cfi_def_cfa_offset 264
 1319              		.cfi_offset 4, -28
 1320              		.cfi_offset 5, -24
 1321              		.cfi_offset 6, -20
 1322              		.cfi_offset 7, -16
 1323              		.cfi_offset 8, -12
 1324              		.cfi_offset 9, -8
 1325              		.cfi_offset 14, -4
 465:Core/Src/nyan_os.c **** 
 1326              		.loc 1 465 16 view .LVU434
 1327 01d4 0020     		movs	r0, #0
 1328 01d6 F8E7     		b	.L64
 1329              	.L100:
 1330              		.align	2
 1331              	.L99:
 1332 01d8 00000000 		.word	.LANCHOR5
 1333 01dc 00000000 		.word	.LANCHOR6
 1334 01e0 00000000 		.word	.LC0
 1335 01e4 00000000 		.word	.LANCHOR4
 1336 01e8 00000000 		.word	nos_fpga
 1337              		.cfi_endproc
 1338              	.LFE156:
 1340              		.section	.text.NyanExecute,"ax",%progbits
 1341              		.align	1
 1342              		.global	NyanExecute
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1347              	NyanExecute:
 1348              	.LVL132:
 1349              	.LFB152:
 223:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1350              		.loc 1 223 46 is_stmt 1 view -0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 223:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1354              		.loc 1 223 46 is_stmt 0 view .LVU436
 1355 0000 70B5     		push	{r4, r5, r6, lr}
 1356              	.LCFI15:
 1357              		.cfi_def_cfa_offset 16
 1358              		.cfi_offset 4, -16
 1359              		.cfi_offset 5, -12
 1360              		.cfi_offset 6, -8
 1361              		.cfi_offset 14, -4
 1362 0002 0446     		mov	r4, r0
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1363              		.loc 1 224 5 is_stmt 1 view .LVU437
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1364              		.loc 1 224 15 is_stmt 0 view .LVU438
ARM GAS  /tmp/cc7zS8Hs.s 			page 36


 1365 0004 457B     		ldrb	r5, [r0, #13]	@ zero_extendqisi2
 1366 0006 EDB2     		uxtb	r5, r5
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1367              		.loc 1 224 5 view .LVU439
 1368 0008 042D     		cmp	r5, #4
 1369 000a 4DD8     		bhi	.L102
 1370 000c DFE805F0 		tbb	[pc, r5]
 1371              	.L104:
 1372 0010 03       		.byte	(.L108-.L104)/2
 1373 0011 23       		.byte	(.L107-.L104)/2
 1374 0012 13       		.byte	(.L106-.L104)/2
 1375 0013 3A       		.byte	(.L105-.L104)/2
 1376 0014 50       		.byte	(.L109-.L104)/2
 1377 0015 00       		.p2align 1
 1378              	.L108:
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1379              		.loc 1 226 13 is_stmt 1 view .LVU440
 1380 0016 FFF7FEFF 		bl	NyanExeGetinfo
 1381              	.LVL133:
 227:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1382              		.loc 1 227 13 view .LVU441
 1383 001a 0322     		movs	r2, #3
 1384 001c 2649     		ldr	r1, .L111
 1385 001e 2046     		mov	r0, r4
 1386 0020 FFF7FEFF 		bl	NyanPrint
 1387              	.LVL134:
 228:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1388              		.loc 1 228 13 view .LVU442
 1389 0024 0F22     		movs	r2, #15
 1390 0026 2549     		ldr	r1, .L111+4
 1391 0028 2046     		mov	r0, r4
 1392 002a FFF7FEFF 		bl	NyanPrint
 1393              	.LVL135:
 229:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1394              		.loc 1 229 13 view .LVU443
 229:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1395              		.loc 1 229 22 is_stmt 0 view .LVU444
 1396 002e 0423     		movs	r3, #4
 1397 0030 6373     		strb	r3, [r4, #13]
 230:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1398              		.loc 1 230 13 is_stmt 1 view .LVU445
 230:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1399              		.loc 1 230 20 is_stmt 0 view .LVU446
 1400 0032 0125     		movs	r5, #1
 1401 0034 3DE0     		b	.L103
 1402              	.LVL136:
 1403              	.L106:
 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 1404              		.loc 1 232 13 is_stmt 1 view .LVU447
 1405 0036 FFF7FEFF 		bl	NyanExeSetOwner
 1406              	.LVL137:
 233:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1407              		.loc 1 233 13 view .LVU448
 1408 003a 2C22     		movs	r2, #44
 1409 003c 2049     		ldr	r1, .L111+8
 1410 003e 2046     		mov	r0, r4
 1411 0040 FFF7FEFF 		bl	NyanPrint
ARM GAS  /tmp/cc7zS8Hs.s 			page 37


 1412              	.LVL138:
 234:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1413              		.loc 1 234 13 view .LVU449
 1414 0044 0F22     		movs	r2, #15
 1415 0046 1D49     		ldr	r1, .L111+4
 1416 0048 2046     		mov	r0, r4
 1417 004a FFF7FEFF 		bl	NyanPrint
 1418              	.LVL139:
 235:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1419              		.loc 1 235 13 view .LVU450
 235:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1420              		.loc 1 235 22 is_stmt 0 view .LVU451
 1421 004e 0423     		movs	r3, #4
 1422 0050 6373     		strb	r3, [r4, #13]
 236:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1423              		.loc 1 236 13 is_stmt 1 view .LVU452
 236:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1424              		.loc 1 236 20 is_stmt 0 view .LVU453
 1425 0052 0125     		movs	r5, #1
 1426 0054 2DE0     		b	.L103
 1427              	.LVL140:
 1428              	.L107:
 238:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1429              		.loc 1 238 13 is_stmt 1 view .LVU454
 1430 0056 1B4E     		ldr	r6, .L111+12
 1431 0058 0021     		movs	r1, #0
 1432 005a 3046     		mov	r0, r6
 1433              	.LVL141:
 238:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1434              		.loc 1 238 13 is_stmt 0 view .LVU455
 1435 005c FFF7FEFF 		bl	HAL_TIM_OC_Stop_IT
 1436              	.LVL142:
 239:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1437              		.loc 1 239 13 is_stmt 1 view .LVU456
 239:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1438              		.loc 1 239 34 is_stmt 0 view .LVU457
 1439 0060 0123     		movs	r3, #1
 1440 0062 A373     		strb	r3, [r4, #14]
 240:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1441              		.loc 1 240 13 is_stmt 1 view .LVU458
 1442 0064 2046     		mov	r0, r4
 1443 0066 FFF7FEFF 		bl	NyanExeWriteFpgaBitstream
 1444              	.LVL143:
 241:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 1445              		.loc 1 241 13 view .LVU459
 1446 006a 0F22     		movs	r2, #15
 1447 006c 1349     		ldr	r1, .L111+4
 1448 006e 2046     		mov	r0, r4
 1449 0070 FFF7FEFF 		bl	NyanPrint
 1450              	.LVL144:
 242:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1451              		.loc 1 242 13 view .LVU460
 242:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1452              		.loc 1 242 34 is_stmt 0 view .LVU461
 1453 0074 0021     		movs	r1, #0
 1454 0076 A173     		strb	r1, [r4, #14]
 243:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
ARM GAS  /tmp/cc7zS8Hs.s 			page 38


 1455              		.loc 1 243 13 is_stmt 1 view .LVU462
 243:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1456              		.loc 1 243 22 is_stmt 0 view .LVU463
 1457 0078 0423     		movs	r3, #4
 1458 007a 6373     		strb	r3, [r4, #13]
 244:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1459              		.loc 1 244 13 is_stmt 1 view .LVU464
 1460 007c 3046     		mov	r0, r6
 1461 007e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1462              	.LVL145:
 245:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1463              		.loc 1 245 13 view .LVU465
 245:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1464              		.loc 1 245 20 is_stmt 0 view .LVU466
 1465 0082 16E0     		b	.L103
 1466              	.LVL146:
 1467              	.L105:
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1468              		.loc 1 249 13 is_stmt 1 view .LVU467
 1469 0084 2022     		movs	r2, #32
 1470 0086 1049     		ldr	r1, .L111+16
 1471 0088 FFF7FEFF 		bl	NyanPrint
 1472              	.LVL147:
 250:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1473              		.loc 1 250 13 view .LVU468
 1474 008c 0322     		movs	r2, #3
 1475 008e 0A49     		ldr	r1, .L111
 1476 0090 2046     		mov	r0, r4
 1477 0092 FFF7FEFF 		bl	NyanPrint
 1478              	.LVL148:
 251:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1479              		.loc 1 251 13 view .LVU469
 1480 0096 0F22     		movs	r2, #15
 1481 0098 0849     		ldr	r1, .L111+4
 1482 009a 2046     		mov	r0, r4
 1483 009c FFF7FEFF 		bl	NyanPrint
 1484              	.LVL149:
 252:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1485              		.loc 1 252 13 view .LVU470
 252:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1486              		.loc 1 252 22 is_stmt 0 view .LVU471
 1487 00a0 0423     		movs	r3, #4
 1488 00a2 6373     		strb	r3, [r4, #13]
 253:Core/Src/nyan_os.c ****         default:
 1489              		.loc 1 253 13 is_stmt 1 view .LVU472
 253:Core/Src/nyan_os.c ****         default:
 1490              		.loc 1 253 20 is_stmt 0 view .LVU473
 1491 00a4 0125     		movs	r5, #1
 1492 00a6 04E0     		b	.L103
 1493              	.LVL150:
 1494              	.L102:
 256:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1495              		.loc 1 256 13 is_stmt 1 view .LVU474
 256:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1496              		.loc 1 256 22 is_stmt 0 view .LVU475
 1497 00a8 0423     		movs	r3, #4
 1498 00aa 4373     		strb	r3, [r0, #13]
ARM GAS  /tmp/cc7zS8Hs.s 			page 39


 257:Core/Src/nyan_os.c ****     }
 1499              		.loc 1 257 13 is_stmt 1 view .LVU476
 257:Core/Src/nyan_os.c ****     }
 1500              		.loc 1 257 20 is_stmt 0 view .LVU477
 1501 00ac 0025     		movs	r5, #0
 1502 00ae 00E0     		b	.L103
 1503              	.L109:
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1504              		.loc 1 224 5 view .LVU478
 1505 00b0 0125     		movs	r5, #1
 1506              	.LVL151:
 1507              	.L103:
 259:Core/Src/nyan_os.c **** 
 1508              		.loc 1 259 1 view .LVU479
 1509 00b2 2846     		mov	r0, r5
 1510 00b4 70BD     		pop	{r4, r5, r6, pc}
 1511              	.LVL152:
 1512              	.L112:
 259:Core/Src/nyan_os.c **** 
 1513              		.loc 1 259 1 view .LVU480
 1514 00b6 00BF     		.align	2
 1515              	.L111:
 1516 00b8 00000000 		.word	.LANCHOR4
 1517 00bc 00000000 		.word	.LANCHOR1
 1518 00c0 00000000 		.word	.LANCHOR7
 1519 00c4 00000000 		.word	htim8
 1520 00c8 00000000 		.word	.LANCHOR8
 1521              		.cfi_endproc
 1522              	.LFE152:
 1524              		.section	.text.FreeNyanCommandArgs,"ax",%progbits
 1525              		.align	1
 1526              		.global	FreeNyanCommandArgs
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1531              	FreeNyanCommandArgs:
 1532              	.LVL153:
 1533              	.LFB157:
 510:Core/Src/nyan_os.c **** 
 511:Core/Src/nyan_os.c **** void FreeNyanCommandArgs(volatile NyanOS* nos)
 512:Core/Src/nyan_os.c **** {
 1534              		.loc 1 512 1 is_stmt 1 view -0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 513:Core/Src/nyan_os.c ****     if (!nos) {
 1538              		.loc 1 513 5 view .LVU482
 1539              		.loc 1 513 8 is_stmt 0 view .LVU483
 1540 0000 B8B1     		cbz	r0, .L119
 512:Core/Src/nyan_os.c ****     if (!nos) {
 1541              		.loc 1 512 1 view .LVU484
 1542 0002 70B5     		push	{r4, r5, r6, lr}
 1543              	.LCFI16:
 1544              		.cfi_def_cfa_offset 16
 1545              		.cfi_offset 4, -16
 1546              		.cfi_offset 5, -12
 1547              		.cfi_offset 6, -8
ARM GAS  /tmp/cc7zS8Hs.s 			page 40


 1548              		.cfi_offset 14, -4
 1549 0004 0546     		mov	r5, r0
 1550              	.LBB17:
 514:Core/Src/nyan_os.c ****         return;
 515:Core/Src/nyan_os.c ****     }
 516:Core/Src/nyan_os.c **** 
 517:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; i++) {
 1551              		.loc 1 517 14 view .LVU485
 1552 0006 0024     		movs	r4, #0
 1553 0008 00E0     		b	.L115
 1554              	.LVL154:
 1555              	.L116:
 1556              		.loc 1 517 45 is_stmt 1 discriminator 2 view .LVU486
 1557              		.loc 1 517 46 is_stmt 0 discriminator 2 view .LVU487
 1558 000a 0134     		adds	r4, r4, #1
 1559              	.LVL155:
 1560              	.L115:
 1561              		.loc 1 517 21 is_stmt 1 discriminator 1 view .LVU488
 1562              		.loc 1 517 5 is_stmt 0 discriminator 1 view .LVU489
 1563 000c 092C     		cmp	r4, #9
 1564 000e 0FDC     		bgt	.L122
 518:Core/Src/nyan_os.c ****         if (nos->command_arg_buffer[i] != NULL) {
 1565              		.loc 1 518 9 is_stmt 1 view .LVU490
 1566              		.loc 1 518 36 is_stmt 0 view .LVU491
 1567 0010 04F1AC03 		add	r3, r4, #172
 1568 0014 55F82330 		ldr	r3, [r5, r3, lsl #2]
 1569              		.loc 1 518 12 view .LVU492
 1570 0018 002B     		cmp	r3, #0
 1571 001a F6D0     		beq	.L116
 519:Core/Src/nyan_os.c ****             free(nos->command_arg_buffer[i]); 
 1572              		.loc 1 519 13 is_stmt 1 view .LVU493
 1573              		.loc 1 519 41 is_stmt 0 view .LVU494
 1574 001c 04F1AC06 		add	r6, r4, #172
 1575 0020 55F82600 		ldr	r0, [r5, r6, lsl #2]
 1576              		.loc 1 519 13 view .LVU495
 1577 0024 FFF7FEFF 		bl	free
 1578              	.LVL156:
 520:Core/Src/nyan_os.c ****             nos->command_arg_buffer[i] = NULL;
 1579              		.loc 1 520 13 is_stmt 1 view .LVU496
 1580              		.loc 1 520 40 is_stmt 0 view .LVU497
 1581 0028 0023     		movs	r3, #0
 1582 002a 45F82630 		str	r3, [r5, r6, lsl #2]
 1583 002e ECE7     		b	.L116
 1584              	.L122:
 1585              		.loc 1 520 40 view .LVU498
 1586              	.LBE17:
 521:Core/Src/nyan_os.c ****         }
 522:Core/Src/nyan_os.c ****     }
 523:Core/Src/nyan_os.c **** }
 1587              		.loc 1 523 1 view .LVU499
 1588 0030 70BD     		pop	{r4, r5, r6, pc}
 1589              	.LVL157:
 1590              	.L119:
 1591              	.LCFI17:
 1592              		.cfi_def_cfa_offset 0
 1593              		.cfi_restore 4
 1594              		.cfi_restore 5
ARM GAS  /tmp/cc7zS8Hs.s 			page 41


 1595              		.cfi_restore 6
 1596              		.cfi_restore 14
 1597              		.loc 1 523 1 view .LVU500
 1598 0032 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE157:
 1602              		.section	.rodata.NyanDecodeArgs.str1.4,"aMS",%progbits,1
 1603              		.align	2
 1604              	.LC1:
 1605 0000 2000     		.ascii	" \000"
 1606              		.section	.text.NyanDecodeArgs,"ax",%progbits
 1607              		.align	1
 1608              		.global	NyanDecodeArgs
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1613              	NyanDecodeArgs:
 1614              	.LVL158:
 1615              	.LFB153:
 262:Core/Src/nyan_os.c ****     if (!nos) {
 1616              		.loc 1 262 1 is_stmt 1 view -0
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 0, uses_anonymous_args = 0
 263:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1620              		.loc 1 263 5 view .LVU502
 263:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1621              		.loc 1 263 8 is_stmt 0 view .LVU503
 1622 0000 0028     		cmp	r0, #0
 1623 0002 44D0     		beq	.L131
 262:Core/Src/nyan_os.c ****     if (!nos) {
 1624              		.loc 1 262 1 view .LVU504
 1625 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1626              	.LCFI18:
 1627              		.cfi_def_cfa_offset 24
 1628              		.cfi_offset 3, -24
 1629              		.cfi_offset 4, -20
 1630              		.cfi_offset 5, -16
 1631              		.cfi_offset 6, -12
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0006 0646     		mov	r6, r0
 268:Core/Src/nyan_os.c **** 
 1635              		.loc 1 268 5 is_stmt 1 view .LVU505
 1636 0008 FFF7FEFF 		bl	FreeNyanCommandArgs
 1637              	.LVL159:
 270:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1638              		.loc 1 270 5 view .LVU506
 270:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1639              		.loc 1 270 44 is_stmt 0 view .LVU507
 1640 000c 0025     		movs	r5, #0
 1641 000e 86F88F50 		strb	r5, [r6, #143]
 271:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 1642              		.loc 1 271 5 is_stmt 1 view .LVU508
 1643              	.LVL160:
 272:Core/Src/nyan_os.c **** 
 1644              		.loc 1 272 5 view .LVU509
ARM GAS  /tmp/cc7zS8Hs.s 			page 42


 272:Core/Src/nyan_os.c **** 
 1645              		.loc 1 272 34 is_stmt 0 view .LVU510
 1646 0012 06F10F07 		add	r7, r6, #15
 272:Core/Src/nyan_os.c **** 
 1647              		.loc 1 272 19 view .LVU511
 1648 0016 1F49     		ldr	r1, .L140
 1649 0018 3846     		mov	r0, r7
 1650 001a FFF7FEFF 		bl	strtok
 1651              	.LVL161:
 1652 001e 0446     		mov	r4, r0
 1653              	.LVL162:
 274:Core/Src/nyan_os.c ****     while (token != NULL) {
 1654              		.loc 1 274 5 is_stmt 1 view .LVU512
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1655              		.loc 1 275 5 view .LVU513
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1656              		.loc 1 275 11 is_stmt 0 view .LVU514
 1657 0020 11E0     		b	.L125
 1658              	.LVL163:
 1659              	.L129:
 1660              	.LBB18:
 1661              	.LBB19:
 282:Core/Src/nyan_os.c ****                 }
 1662              		.loc 1 282 21 is_stmt 1 discriminator 3 view .LVU515
 282:Core/Src/nyan_os.c ****                 }
 1663              		.loc 1 282 49 is_stmt 0 discriminator 3 view .LVU516
 1664 0022 04F1AC03 		add	r3, r4, #172
 1665 0026 56F82300 		ldr	r0, [r6, r3, lsl #2]
 282:Core/Src/nyan_os.c ****                 }
 1666              		.loc 1 282 21 discriminator 3 view .LVU517
 1667 002a FFF7FEFF 		bl	free
 1668              	.LVL164:
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1669              		.loc 1 281 48 is_stmt 1 discriminator 3 view .LVU518
 1670 002e 0134     		adds	r4, r4, #1
 1671              	.LVL165:
 1672              	.L127:
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1673              		.loc 1 281 33 discriminator 1 view .LVU519
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1674              		.loc 1 281 17 is_stmt 0 discriminator 1 view .LVU520
 1675 0030 A542     		cmp	r5, r4
 1676 0032 F6DC     		bgt	.L129
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1677              		.loc 1 281 17 discriminator 1 view .LVU521
 1678              	.LBE19:
 284:Core/Src/nyan_os.c ****             }
 1679              		.loc 1 284 24 view .LVU522
 1680 0034 0020     		movs	r0, #0
 1681 0036 29E0     		b	.L124
 1682              	.LVL166:
 1683              	.L139:
 1684              	.LBB20:
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1685              		.loc 1 281 26 view .LVU523
 1686 0038 0024     		movs	r4, #0
 1687              	.LVL167:
ARM GAS  /tmp/cc7zS8Hs.s 			page 43


 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1688              		.loc 1 281 26 view .LVU524
 1689 003a F9E7     		b	.L127
 1690              	.LVL168:
 1691              	.L126:
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1692              		.loc 1 281 26 view .LVU525
 1693              	.LBE20:
 1694              	.LBE18:
 289:Core/Src/nyan_os.c ****     }
 1695              		.loc 1 289 9 is_stmt 1 view .LVU526
 289:Core/Src/nyan_os.c ****     }
 1696              		.loc 1 289 17 is_stmt 0 view .LVU527
 1697 003c 1549     		ldr	r1, .L140
 1698 003e 0020     		movs	r0, #0
 1699 0040 FFF7FEFF 		bl	strtok
 1700              	.LVL169:
 1701 0044 0446     		mov	r4, r0
 1702              	.LVL170:
 1703              	.L125:
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1704              		.loc 1 275 11 is_stmt 1 view .LVU528
 1705 0046 C4B1     		cbz	r4, .L138
 276:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1706              		.loc 1 276 9 view .LVU529
 276:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1707              		.loc 1 276 12 is_stmt 0 view .LVU530
 1708 0048 092D     		cmp	r5, #9
 1709 004a F7DC     		bgt	.L126
 1710              	.LBB21:
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1711              		.loc 1 277 13 is_stmt 1 view .LVU531
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1712              		.loc 1 277 34 is_stmt 0 view .LVU532
 1713 004c 2046     		mov	r0, r4
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1714              		.loc 1 277 34 view .LVU533
 1715 004e FFF7FEFF 		bl	strlen
 1716              	.LVL171:
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1717              		.loc 1 278 13 is_stmt 1 view .LVU534
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1718              		.loc 1 278 50 is_stmt 0 view .LVU535
 1719 0052 0130     		adds	r0, r0, #1
 1720              	.LVL172:
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1721              		.loc 1 278 50 view .LVU536
 1722 0054 FFF7FEFF 		bl	malloc
 1723              	.LVL173:
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1724              		.loc 1 278 48 view .LVU537
 1725 0058 05F1AC03 		add	r3, r5, #172
 1726 005c 46F82300 		str	r0, [r6, r3, lsl #2]
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1727              		.loc 1 279 13 is_stmt 1 view .LVU538
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1728              		.loc 1 279 40 is_stmt 0 view .LVU539
ARM GAS  /tmp/cc7zS8Hs.s 			page 44


 1729 0060 56F82330 		ldr	r3, [r6, r3, lsl #2]
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1730              		.loc 1 279 16 view .LVU540
 1731 0064 002B     		cmp	r3, #0
 1732 0066 E7D0     		beq	.L139
 286:Core/Src/nyan_os.c ****             arg_count++;
 1733              		.loc 1 286 13 is_stmt 1 view .LVU541
 286:Core/Src/nyan_os.c ****             arg_count++;
 1734              		.loc 1 286 51 is_stmt 0 view .LVU542
 1735 0068 05F1AC03 		add	r3, r5, #172
 1736 006c 56F82300 		ldr	r0, [r6, r3, lsl #2]
 286:Core/Src/nyan_os.c ****             arg_count++;
 1737              		.loc 1 286 13 view .LVU543
 1738 0070 2146     		mov	r1, r4
 1739 0072 FFF7FEFF 		bl	strcpy
 1740              	.LVL174:
 287:Core/Src/nyan_os.c ****         }
 1741              		.loc 1 287 13 is_stmt 1 view .LVU544
 287:Core/Src/nyan_os.c ****         }
 1742              		.loc 1 287 22 is_stmt 0 view .LVU545
 1743 0076 0135     		adds	r5, r5, #1
 1744              	.LVL175:
 287:Core/Src/nyan_os.c ****         }
 1745              		.loc 1 287 22 view .LVU546
 1746 0078 E0E7     		b	.L126
 1747              	.LVL176:
 1748              	.L138:
 287:Core/Src/nyan_os.c ****         }
 1749              		.loc 1 287 22 view .LVU547
 1750              	.LBE21:
 292:Core/Src/nyan_os.c **** 
 1751              		.loc 1 292 5 is_stmt 1 view .LVU548
 292:Core/Src/nyan_os.c **** 
 1752              		.loc 1 292 34 is_stmt 0 view .LVU549
 1753 007a EBB2     		uxtb	r3, r5
 1754 007c 86F89130 		strb	r3, [r6, #145]
 295:Core/Src/nyan_os.c **** 
 1755              		.loc 1 295 5 is_stmt 1 view .LVU550
 1756 0080 8122     		movs	r2, #129
 1757 0082 0021     		movs	r1, #0
 1758 0084 3846     		mov	r0, r7
 1759              	.LVL177:
 295:Core/Src/nyan_os.c **** 
 1760              		.loc 1 295 5 is_stmt 0 view .LVU551
 1761 0086 FFF7FEFF 		bl	memset
 1762              	.LVL178:
 297:Core/Src/nyan_os.c **** }
 1763              		.loc 1 297 5 is_stmt 1 view .LVU552
 297:Core/Src/nyan_os.c **** }
 1764              		.loc 1 297 12 is_stmt 0 view .LVU553
 1765 008a 0120     		movs	r0, #1
 1766              	.LVL179:
 1767              	.L124:
 298:Core/Src/nyan_os.c **** 
 1768              		.loc 1 298 1 view .LVU554
 1769 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1770              	.LVL180:
ARM GAS  /tmp/cc7zS8Hs.s 			page 45


 1771              	.L131:
 1772              	.LCFI19:
 1773              		.cfi_def_cfa_offset 0
 1774              		.cfi_restore 3
 1775              		.cfi_restore 4
 1776              		.cfi_restore 5
 1777              		.cfi_restore 6
 1778              		.cfi_restore 7
 1779              		.cfi_restore 14
 264:Core/Src/nyan_os.c ****     }
 1780              		.loc 1 264 16 view .LVU555
 1781 008e 0020     		movs	r0, #0
 1782              	.LVL181:
 298:Core/Src/nyan_os.c **** 
 1783              		.loc 1 298 1 view .LVU556
 1784 0090 7047     		bx	lr
 1785              	.L141:
 1786 0092 00BF     		.align	2
 1787              	.L140:
 1788 0094 00000000 		.word	.LC1
 1789              		.cfi_endproc
 1790              	.LFE153:
 1792              		.section	.text.NyanDecode,"ax",%progbits
 1793              		.align	1
 1794              		.global	NyanDecode
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1799              	NyanDecode:
 1800              	.LVL182:
 1801              	.LFB151:
 202:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1802              		.loc 1 202 1 is_stmt 1 view -0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1806              		.loc 1 202 1 is_stmt 0 view .LVU558
 1807 0000 70B5     		push	{r4, r5, r6, lr}
 1808              	.LCFI20:
 1809              		.cfi_def_cfa_offset 16
 1810              		.cfi_offset 4, -16
 1811              		.cfi_offset 5, -12
 1812              		.cfi_offset 6, -8
 1813              		.cfi_offset 14, -4
 1814 0002 0546     		mov	r5, r0
 204:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1815              		.loc 1 204 5 is_stmt 1 view .LVU559
 204:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1816              		.loc 1 204 14 is_stmt 0 view .LVU560
 1817 0004 0423     		movs	r3, #4
 1818 0006 4373     		strb	r3, [r0, #13]
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1819              		.loc 1 206 5 is_stmt 1 view .LVU561
 1820              	.LBB22:
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1821              		.loc 1 206 10 view .LVU562
ARM GAS  /tmp/cc7zS8Hs.s 			page 46


 1822              	.LVL183:
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1823              		.loc 1 206 18 is_stmt 0 view .LVU563
 1824 0008 0024     		movs	r4, #0
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1825              		.loc 1 206 5 view .LVU564
 1826 000a 03E0     		b	.L143
 1827              	.LVL184:
 1828              	.L144:
 1829              	.LBB23:
 215:Core/Src/nyan_os.c ****         }
 1830              		.loc 1 215 13 is_stmt 1 discriminator 2 view .LVU565
 215:Core/Src/nyan_os.c ****         }
 1831              		.loc 1 215 22 is_stmt 0 discriminator 2 view .LVU566
 1832 000c 0323     		movs	r3, #3
 1833 000e 6B73     		strb	r3, [r5, #13]
 1834              	.LBE23:
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1835              		.loc 1 206 61 is_stmt 1 discriminator 2 view .LVU567
 1836 0010 0134     		adds	r4, r4, #1
 1837              	.LVL185:
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1838              		.loc 1 206 61 is_stmt 0 discriminator 2 view .LVU568
 1839 0012 E4B2     		uxtb	r4, r4
 1840              	.LVL186:
 1841              	.L143:
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1842              		.loc 1 206 31 is_stmt 1 discriminator 1 view .LVU569
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1843              		.loc 1 206 5 is_stmt 0 discriminator 1 view .LVU570
 1844 0014 022C     		cmp	r4, #2
 1845 0016 13D8     		bhi	.L145
 1846              	.LBB24:
 207:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1847              		.loc 1 207 9 is_stmt 1 view .LVU571
 207:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1848              		.loc 1 207 30 is_stmt 0 view .LVU572
 1849 0018 0A4B     		ldr	r3, .L148
 1850 001a 53F82460 		ldr	r6, [r3, r4, lsl #2]
 1851 001e 3046     		mov	r0, r6
 1852 0020 FFF7FEFF 		bl	strlen
 1853              	.LVL187:
 1854 0024 0246     		mov	r2, r0
 1855              	.LVL188:
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1856              		.loc 1 209 9 is_stmt 1 view .LVU573
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1857              		.loc 1 209 12 is_stmt 0 view .LVU574
 1858 0026 8028     		cmp	r0, #128
 1859 0028 F0D8     		bhi	.L144
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1860              		.loc 1 209 49 discriminator 1 view .LVU575
 1861 002a 3146     		mov	r1, r6
 1862 002c 05F10F00 		add	r0, r5, #15
 1863              	.LVL189:
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1864              		.loc 1 209 49 discriminator 1 view .LVU576
ARM GAS  /tmp/cc7zS8Hs.s 			page 47


 1865 0030 FFF7FEFF 		bl	memcmp
 1866              	.LVL190:
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1867              		.loc 1 209 46 discriminator 1 view .LVU577
 1868 0034 0028     		cmp	r0, #0
 1869 0036 E9D1     		bne	.L144
 210:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 1870              		.loc 1 210 13 is_stmt 1 view .LVU578
 1871 0038 2846     		mov	r0, r5
 1872 003a FFF7FEFF 		bl	NyanDecodeArgs
 1873              	.LVL191:
 212:Core/Src/nyan_os.c ****             break;
 1874              		.loc 1 212 13 view .LVU579
 212:Core/Src/nyan_os.c ****             break;
 1875              		.loc 1 212 22 is_stmt 0 view .LVU580
 1876 003e 6C73     		strb	r4, [r5, #13]
 213:Core/Src/nyan_os.c ****         } else {
 1877              		.loc 1 213 13 is_stmt 1 view .LVU581
 1878              	.L145:
 213:Core/Src/nyan_os.c ****         } else {
 1879              		.loc 1 213 13 is_stmt 0 view .LVU582
 1880              	.LBE24:
 1881              	.LBE22:
 220:Core/Src/nyan_os.c **** }
 1882              		.loc 1 220 5 is_stmt 1 view .LVU583
 221:Core/Src/nyan_os.c **** 
 1883              		.loc 1 221 1 is_stmt 0 view .LVU584
 1884 0040 0120     		movs	r0, #1
 1885 0042 70BD     		pop	{r4, r5, r6, pc}
 1886              	.LVL192:
 1887              	.L149:
 221:Core/Src/nyan_os.c **** 
 1888              		.loc 1 221 1 view .LVU585
 1889              		.align	2
 1890              	.L148:
 1891 0044 00000000 		.word	.LANCHOR9
 1892              		.cfi_endproc
 1893              	.LFE151:
 1895              		.section	.text.FreeNyanString,"ax",%progbits
 1896              		.align	1
 1897              		.global	FreeNyanString
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1902              	FreeNyanString:
 1903              	.LVL193:
 1904              	.LFB158:
 524:Core/Src/nyan_os.c **** 
 525:Core/Src/nyan_os.c **** void FreeNyanString(NyanString* nyanString)
 526:Core/Src/nyan_os.c **** {
 1905              		.loc 1 526 1 is_stmt 1 view -0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              		.loc 1 526 1 is_stmt 0 view .LVU587
 1910 0000 10B5     		push	{r4, lr}
 1911              	.LCFI21:
ARM GAS  /tmp/cc7zS8Hs.s 			page 48


 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 4, -8
 1914              		.cfi_offset 14, -4
 1915 0002 0446     		mov	r4, r0
 527:Core/Src/nyan_os.c ****     // Clear the memory contents
 528:Core/Src/nyan_os.c ****     for (uint32_t i = 0; i < nyanString->size; ++i) {
 1916              		.loc 1 528 5 is_stmt 1 view .LVU588
 1917              	.LBB25:
 1918              		.loc 1 528 10 view .LVU589
 1919              	.LVL194:
 1920              		.loc 1 528 19 is_stmt 0 view .LVU590
 1921 0004 0023     		movs	r3, #0
 1922              		.loc 1 528 5 view .LVU591
 1923 0006 03E0     		b	.L151
 1924              	.LVL195:
 1925              	.L152:
 529:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1926              		.loc 1 529 9 is_stmt 1 discriminator 3 view .LVU592
 1927              		.loc 1 529 19 is_stmt 0 discriminator 3 view .LVU593
 1928 0008 2268     		ldr	r2, [r4]
 1929              		.loc 1 529 32 discriminator 3 view .LVU594
 1930 000a 0021     		movs	r1, #0
 1931 000c D154     		strb	r1, [r2, r3]
 528:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1932              		.loc 1 528 48 is_stmt 1 discriminator 3 view .LVU595
 1933 000e 0133     		adds	r3, r3, #1
 1934              	.LVL196:
 1935              	.L151:
 528:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1936              		.loc 1 528 26 discriminator 1 view .LVU596
 528:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1937              		.loc 1 528 40 is_stmt 0 discriminator 1 view .LVU597
 1938 0010 6268     		ldr	r2, [r4, #4]
 528:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1939              		.loc 1 528 5 discriminator 1 view .LVU598
 1940 0012 9A42     		cmp	r2, r3
 1941 0014 F8D8     		bhi	.L152
 1942              	.LBE25:
 530:Core/Src/nyan_os.c ****     }
 531:Core/Src/nyan_os.c ****     // Free up the pointer and memory
 532:Core/Src/nyan_os.c ****     free(nyanString->p_array);
 1943              		.loc 1 532 5 is_stmt 1 view .LVU599
 1944 0016 2068     		ldr	r0, [r4]
 1945              	.LVL197:
 1946              		.loc 1 532 5 is_stmt 0 view .LVU600
 1947 0018 FFF7FEFF 		bl	free
 1948              	.LVL198:
 533:Core/Src/nyan_os.c ****     nyanString->p_array = NULL;
 1949              		.loc 1 533 5 is_stmt 1 view .LVU601
 1950              		.loc 1 533 25 is_stmt 0 view .LVU602
 1951 001c 0023     		movs	r3, #0
 1952 001e 2360     		str	r3, [r4]
 534:Core/Src/nyan_os.c ****     nyanString->size = 0;
 1953              		.loc 1 534 5 is_stmt 1 view .LVU603
 1954              		.loc 1 534 22 is_stmt 0 view .LVU604
 1955 0020 6360     		str	r3, [r4, #4]
 535:Core/Src/nyan_os.c **** }
ARM GAS  /tmp/cc7zS8Hs.s 			page 49


 1956              		.loc 1 535 1 view .LVU605
 1957 0022 10BD     		pop	{r4, pc}
 1958              		.loc 1 535 1 view .LVU606
 1959              		.cfi_endproc
 1960              	.LFE158:
 1962              		.section	.text.ClearNyanCommandBuffer,"ax",%progbits
 1963              		.align	1
 1964              		.global	ClearNyanCommandBuffer
 1965              		.syntax unified
 1966              		.thumb
 1967              		.thumb_func
 1969              	ClearNyanCommandBuffer:
 1970              	.LVL199:
 1971              	.LFB159:
 536:Core/Src/nyan_os.c **** 
 537:Core/Src/nyan_os.c **** void ClearNyanCommandBuffer(volatile NyanOS* nos)
 538:Core/Src/nyan_os.c **** {
 1972              		.loc 1 538 1 is_stmt 1 view -0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 1976              		.loc 1 538 1 is_stmt 0 view .LVU608
 1977 0000 08B5     		push	{r3, lr}
 1978              	.LCFI22:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 3, -8
 1981              		.cfi_offset 14, -4
 539:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1982              		.loc 1 539 5 is_stmt 1 view .LVU609
 1983              		.loc 1 539 29 is_stmt 0 view .LVU610
 1984 0002 0021     		movs	r1, #0
 1985 0004 80F89010 		strb	r1, [r0, #144]
 540:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 1986              		.loc 1 540 5 is_stmt 1 view .LVU611
 1987 0008 8122     		movs	r2, #129
 1988 000a 0F30     		adds	r0, r0, #15
 1989              	.LVL200:
 1990              		.loc 1 540 5 is_stmt 0 view .LVU612
 1991 000c FFF7FEFF 		bl	memset
 1992              	.LVL201:
 541:Core/Src/nyan_os.c **** };...
 1993              		.loc 1 541 1 view .LVU613
 1994 0010 08BD     		pop	{r3, pc}
 1995              		.cfi_endproc
 1996              	.LFE159:
 1998              		.section	.text.NyanOsInit,"ax",%progbits
 1999              		.align	1
 2000              		.global	NyanOsInit
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2005              	NyanOsInit:
 2006              	.LVL202:
 2007              	.LFB146:
  21:Core/Src/nyan_os.c **** {
 2008              		.loc 1 21 1 is_stmt 1 view -0
 2009              		.cfi_startproc
ARM GAS  /tmp/cc7zS8Hs.s 			page 50


 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
  21:Core/Src/nyan_os.c **** {
 2012              		.loc 1 21 1 is_stmt 0 view .LVU615
 2013 0000 38B5     		push	{r3, r4, r5, lr}
 2014              	.LCFI23:
 2015              		.cfi_def_cfa_offset 16
 2016              		.cfi_offset 3, -16
 2017              		.cfi_offset 4, -12
 2018              		.cfi_offset 5, -8
 2019              		.cfi_offset 14, -4
 2020 0002 0546     		mov	r5, r0
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2021              		.loc 1 23 5 is_stmt 1 view .LVU616
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2022              		.loc 1 23 16 is_stmt 0 view .LVU617
 2023 0004 0123     		movs	r3, #1
 2024 0006 0373     		strb	r3, [r0, #12]
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2025              		.loc 1 24 5 is_stmt 1 view .LVU618
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2026              		.loc 1 24 14 is_stmt 0 view .LVU619
 2027 0008 0423     		movs	r3, #4
 2028 000a 4373     		strb	r3, [r0, #13]
  27:Core/Src/nyan_os.c ****     nos->eeprom = &nos_eeprom;
 2029              		.loc 1 27 5 is_stmt 1 view .LVU620
  27:Core/Src/nyan_os.c ****     nos->eeprom = &nos_eeprom;
 2030              		.loc 1 27 17 is_stmt 0 view .LVU621
 2031 000c 124B     		ldr	r3, .L160
 2032 000e 4360     		str	r3, [r0, #4]
  28:Core/Src/nyan_os.c ****     nos->nyan_bitcoin = &nyan_bitcoin;
 2033              		.loc 1 28 5 is_stmt 1 view .LVU622
  28:Core/Src/nyan_os.c ****     nos->nyan_bitcoin = &nyan_bitcoin;
 2034              		.loc 1 28 23 is_stmt 0 view .LVU623
 2035 0010 124B     		ldr	r3, .L160+4
 2036 0012 8360     		str	r3, [r0, #8]
  31:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2037              		.loc 1 31 5 is_stmt 1 view .LVU624
  31:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2038              		.loc 1 31 34 is_stmt 0 view .LVU625
 2039 0014 0024     		movs	r4, #0
 2040 0016 80F89140 		strb	r4, [r0, #145]
  32:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2041              		.loc 1 32 5 is_stmt 1 view .LVU626
  32:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2042              		.loc 1 32 29 is_stmt 0 view .LVU627
 2043 001a 80F89040 		strb	r4, [r0, #144]
  33:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2044              		.loc 1 33 5 is_stmt 1 view .LVU628
  33:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2045              		.loc 1 33 23 is_stmt 0 view .LVU629
 2046 001e 80F8A042 		strb	r4, [r0, #672]
  34:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2047              		.loc 1 34 5 is_stmt 1 view .LVU630
  34:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2048              		.loc 1 34 26 is_stmt 0 view .LVU631
 2049 0022 80F89540 		strb	r4, [r0, #149]
ARM GAS  /tmp/cc7zS8Hs.s 			page 51


  35:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2050              		.loc 1 35 5 is_stmt 1 view .LVU632
  35:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2051              		.loc 1 35 34 is_stmt 0 view .LVU633
 2052 0026 80F89640 		strb	r4, [r0, #150]
  36:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2053              		.loc 1 36 5 is_stmt 1 view .LVU634
  36:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2054              		.loc 1 36 19 is_stmt 0 view .LVU635
 2055 002a 80F89740 		strb	r4, [r0, #151]
  37:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2056              		.loc 1 37 5 is_stmt 1 view .LVU636
  37:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2057              		.loc 1 37 17 is_stmt 0 view .LVU637
 2058 002e 80F89240 		strb	r4, [r0, #146]
  40:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
 2059              		.loc 1 40 5 is_stmt 1 view .LVU638
 2060 0032 FFF7FEFF 		bl	ClearNyanCommandBuffer
 2061              	.LVL203:
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2062              		.loc 1 43 5 view .LVU639
 2063              	.LBB26:
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2064              		.loc 1 43 10 view .LVU640
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2065              		.loc 1 43 14 is_stmt 0 view .LVU641
 2066 0036 2346     		mov	r3, r4
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2067              		.loc 1 43 5 view .LVU642
 2068 0038 05E0     		b	.L157
 2069              	.LVL204:
 2070              	.L158:
  44:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2071              		.loc 1 44 9 is_stmt 1 discriminator 3 view .LVU643
  44:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2072              		.loc 1 44 36 is_stmt 0 discriminator 3 view .LVU644
 2073 003a 03F1AC02 		add	r2, r3, #172
 2074 003e 0021     		movs	r1, #0
 2075 0040 45F82210 		str	r1, [r5, r2, lsl #2]
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2076              		.loc 1 43 45 is_stmt 1 discriminator 3 view .LVU645
 2077 0044 0133     		adds	r3, r3, #1
 2078              	.LVL205:
 2079              	.L157:
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2080              		.loc 1 43 21 discriminator 1 view .LVU646
  43:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2081              		.loc 1 43 5 is_stmt 0 discriminator 1 view .LVU647
 2082 0046 092B     		cmp	r3, #9
 2083 0048 F7DD     		ble	.L158
 2084              	.LBE26:
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2085              		.loc 1 48 5 is_stmt 1 view .LVU648
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2086              		.loc 1 48 28 is_stmt 0 view .LVU649
 2087 004a 0023     		movs	r3, #0
 2088              	.LVL206:
ARM GAS  /tmp/cc7zS8Hs.s 			page 52


  48:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2089              		.loc 1 48 28 view .LVU650
 2090 004c C5F89830 		str	r3, [r5, #152]
  49:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2091              		.loc 1 49 5 is_stmt 1 view .LVU651
  49:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2092              		.loc 1 49 25 is_stmt 0 view .LVU652
 2093 0050 C5F89C30 		str	r3, [r5, #156]
  51:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2094              		.loc 1 51 5 is_stmt 1 view .LVU653
  52:Core/Src/nyan_os.c **** }
 2095              		.loc 1 52 1 is_stmt 0 view .LVU654
 2096 0054 0120     		movs	r0, #1
 2097 0056 38BD     		pop	{r3, r4, r5, pc}
 2098              	.LVL207:
 2099              	.L161:
  52:Core/Src/nyan_os.c **** }
 2100              		.loc 1 52 1 view .LVU655
 2101              		.align	2
 2102              	.L160:
 2103 0058 00000000 		.word	nos_eeprom
 2104 005c 00000000 		.word	nyan_bitcoin
 2105              		.cfi_endproc
 2106              	.LFE146:
 2108              		.section	.rodata.NyanAddInputBuffer.str1.4,"aMS",%progbits,1
 2109              		.align	2
 2110              	.LC2:
 2111 0000 08200800 		.ascii	"\010 \010\000"
 2112              		.section	.text.NyanAddInputBuffer,"ax",%progbits
 2113              		.align	1
 2114              		.global	NyanAddInputBuffer
 2115              		.syntax unified
 2116              		.thumb
 2117              		.thumb_func
 2119              	NyanAddInputBuffer:
 2120              	.LVL208:
 2121              	.LFB148:
  68:Core/Src/nyan_os.c **** {
 2122              		.loc 1 68 1 is_stmt 1 view -0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 8
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
  68:Core/Src/nyan_os.c **** {
 2126              		.loc 1 68 1 is_stmt 0 view .LVU657
 2127 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2128              	.LCFI24:
 2129              		.cfi_def_cfa_offset 24
 2130              		.cfi_offset 4, -24
 2131              		.cfi_offset 5, -20
 2132              		.cfi_offset 6, -16
 2133              		.cfi_offset 7, -12
 2134              		.cfi_offset 8, -8
 2135              		.cfi_offset 14, -4
 2136 0004 82B0     		sub	sp, sp, #8
 2137              	.LCFI25:
 2138              		.cfi_def_cfa_offset 32
 2139 0006 0446     		mov	r4, r0
ARM GAS  /tmp/cc7zS8Hs.s 			page 53


 2140 0008 8846     		mov	r8, r1
 2141 000a 1646     		mov	r6, r2
  69:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
 2142              		.loc 1 69 5 is_stmt 1 view .LVU658
 2143              	.LVL209:
  70:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
 2144              		.loc 1 70 5 view .LVU659
  71:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
 2145              		.loc 1 71 5 view .LVU660
  72:Core/Src/nyan_os.c ****     const char line_feed = '\n';
 2146              		.loc 1 72 5 view .LVU661
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2147              		.loc 1 75 5 view .LVU662
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2148              		.loc 1 75 19 is_stmt 0 view .LVU663
 2149 000c 00F1A007 		add	r7, r0, #160
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2150              		.loc 1 75 5 view .LVU664
 2151 0010 4FF40072 		mov	r2, #512
 2152              	.LVL210:
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2153              		.loc 1 75 5 view .LVU665
 2154 0014 0021     		movs	r1, #0
 2155              	.LVL211:
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2156              		.loc 1 75 5 view .LVU666
 2157 0016 3846     		mov	r0, r7
 2158              	.LVL212:
  75:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2159              		.loc 1 75 5 view .LVU667
 2160 0018 FFF7FEFF 		bl	memset
 2161              	.LVL213:
  76:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2162              		.loc 1 76 5 is_stmt 1 view .LVU668
  76:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2163              		.loc 1 76 23 is_stmt 0 view .LVU669
 2164 001c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2165 001e 84F8A032 		strb	r3, [r4, #672]
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2166              		.loc 1 77 5 is_stmt 1 view .LVU670
 2167              	.LBB27:
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2168              		.loc 1 77 9 view .LVU671
 2169              	.LVL214:
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2170              		.loc 1 77 18 is_stmt 0 view .LVU672
 2171 0022 0023     		movs	r3, #0
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2172              		.loc 1 77 5 view .LVU673
 2173 0024 05E0     		b	.L163
 2174              	.LVL215:
 2175              	.L164:
  78:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2176              		.loc 1 78 9 is_stmt 1 discriminator 3 view .LVU674
  78:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2177              		.loc 1 78 33 is_stmt 0 discriminator 3 view .LVU675
 2178 0026 18F80350 		ldrb	r5, [r8, r3]	@ zero_extendqisi2
ARM GAS  /tmp/cc7zS8Hs.s 			page 54


  78:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2179              		.loc 1 78 27 discriminator 3 view .LVU676
 2180 002a E018     		adds	r0, r4, r3
 2181 002c 80F8A050 		strb	r5, [r0, #160]
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2182              		.loc 1 77 35 is_stmt 1 discriminator 3 view .LVU677
 2183 0030 0133     		adds	r3, r3, #1
 2184              	.LVL216:
 2185              	.L163:
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2186              		.loc 1 77 25 discriminator 1 view .LVU678
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2187              		.loc 1 77 29 is_stmt 0 discriminator 1 view .LVU679
 2188 0032 3068     		ldr	r0, [r6]
  77:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2189              		.loc 1 77 5 discriminator 1 view .LVU680
 2190 0034 9842     		cmp	r0, r3
 2191 0036 F6D8     		bhi	.L164
 2192              	.LBE27:
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2193              		.loc 1 82 5 is_stmt 1 view .LVU681
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2194              		.loc 1 82 15 is_stmt 0 view .LVU682
 2195 0038 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 2196              	.LVL217:
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2197              		.loc 1 82 15 view .LVU683
 2198 003a DBB2     		uxtb	r3, r3
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2199              		.loc 1 82 5 view .LVU684
 2200 003c 012B     		cmp	r3, #1
 2201 003e 6DD0     		beq	.L176
 2202 0040 022B     		cmp	r3, #2
 2203 0042 00F08580 		beq	.L177
 2204              	.L167:
 116:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2205              		.loc 1 116 5 is_stmt 1 view .LVU685
 117:Core/Src/nyan_os.c **** }
 2206              		.loc 1 117 1 is_stmt 0 view .LVU686
 2207 0046 0120     		movs	r0, #1
 2208 0048 02B0     		add	sp, sp, #8
 2209              	.LCFI26:
 2210              		.cfi_remember_state
 2211              		.cfi_def_cfa_offset 24
 2212              		@ sp needed
 2213 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2214              	.LVL218:
 2215              	.L168:
 2216              	.LCFI27:
 2217              		.cfi_restore_state
 2218              	.LBB28:
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2219              		.loc 1 85 102 discriminator 3 view .LVU687
 2220 004e 94F89030 		ldrb	r3, [r4, #144]	@ zero_extendqisi2
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2221              		.loc 1 85 96 discriminator 3 view .LVU688
 2222 0052 43B3     		cbz	r3, .L169
ARM GAS  /tmp/cc7zS8Hs.s 			page 55


 2223              	.LBB29:
  87:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2224              		.loc 1 87 21 is_stmt 1 view .LVU689
  87:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2225              		.loc 1 87 29 is_stmt 0 view .LVU690
 2226 0054 3F4B     		ldr	r3, .L179
 2227 0056 1B68     		ldr	r3, [r3]
 2228 0058 ADF80430 		strh	r3, [sp, #4]	@ movhi
 2229 005c 1B0C     		lsrs	r3, r3, #16
 2230 005e 8DF80630 		strb	r3, [sp, #6]
  88:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
 2231              		.loc 1 88 21 is_stmt 1 view .LVU691
 2232 0062 0322     		movs	r2, #3
 2233 0064 01A9     		add	r1, sp, #4
 2234 0066 2046     		mov	r0, r4
 2235 0068 FFF7FEFF 		bl	NyanPrint
 2236              	.LVL219:
  89:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2237              		.loc 1 89 21 view .LVU692
  89:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2238              		.loc 1 89 44 is_stmt 0 view .LVU693
 2239 006c 94F89030 		ldrb	r3, [r4, #144]	@ zero_extendqisi2
  89:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2240              		.loc 1 89 66 view .LVU694
 2241 0070 2344     		add	r3, r3, r4
 2242 0072 0022     		movs	r2, #0
 2243 0074 DA73     		strb	r2, [r3, #15]
  90:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2244              		.loc 1 90 21 is_stmt 1 view .LVU695
  90:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2245              		.loc 1 90 26 is_stmt 0 view .LVU696
 2246 0076 94F89030 		ldrb	r3, [r4, #144]	@ zero_extendqisi2
  90:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2247              		.loc 1 90 21 view .LVU697
 2248 007a 013B     		subs	r3, r3, #1
 2249 007c DBB2     		uxtb	r3, r3
 2250 007e 84F89030 		strb	r3, [r4, #144]
 2251              	.L170:
  90:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2252              		.loc 1 90 21 view .LVU698
 2253              	.LBE29:
  84:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2254              		.loc 1 84 60 is_stmt 1 discriminator 2 view .LVU699
 2255 0082 0135     		adds	r5, r5, #1
 2256              	.LVL220:
 2257              	.L165:
  84:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2258              		.loc 1 84 35 discriminator 1 view .LVU700
  84:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2259              		.loc 1 84 44 is_stmt 0 discriminator 1 view .LVU701
 2260 0084 94F8A032 		ldrb	r3, [r4, #672]	@ zero_extendqisi2
 2261 0088 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2262              		.loc 1 84 13 discriminator 1 view .LVU702
 2263 008a AB42     		cmp	r3, r5
 2264 008c DBD9     		bls	.L167
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
ARM GAS  /tmp/cc7zS8Hs.s 			page 56


 2265              		.loc 1 85 17 is_stmt 1 view .LVU703
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2266              		.loc 1 85 35 is_stmt 0 view .LVU704
 2267 008e 6319     		adds	r3, r4, r5
 2268 0090 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2269 0094 DBB2     		uxtb	r3, r3
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2270              		.loc 1 85 19 view .LVU705
 2271 0096 082B     		cmp	r3, #8
 2272 0098 D9D0     		beq	.L168
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2273              		.loc 1 85 77 discriminator 2 view .LVU706
 2274 009a 6319     		adds	r3, r4, r5
 2275 009c 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2276 00a0 DBB2     		uxtb	r3, r3
  85:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2277              		.loc 1 85 59 discriminator 2 view .LVU707
 2278 00a2 7F2B     		cmp	r3, #127
 2279 00a4 D3D0     		beq	.L168
 2280              	.L169:
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2281              		.loc 1 91 24 is_stmt 1 view .LVU708
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2282              		.loc 1 91 41 is_stmt 0 view .LVU709
 2283 00a6 6319     		adds	r3, r4, r5
 2284 00a8 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2285 00ac DBB2     		uxtb	r3, r3
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2286              		.loc 1 91 26 view .LVU710
 2287 00ae 0A2B     		cmp	r3, #10
 2288 00b0 28D0     		beq	.L171
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2289              		.loc 1 91 77 discriminator 1 view .LVU711
 2290 00b2 6319     		adds	r3, r4, r5
 2291 00b4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2292 00b8 DBB2     		uxtb	r3, r3
  91:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2293              		.loc 1 91 60 discriminator 1 view .LVU712
 2294 00ba 0D2B     		cmp	r3, #13
 2295 00bc 22D0     		beq	.L171
  97:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2296              		.loc 1 97 24 is_stmt 1 view .LVU713
  97:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2297              		.loc 1 97 30 is_stmt 0 view .LVU714
 2298 00be 94F89030 		ldrb	r3, [r4, #144]	@ zero_extendqisi2
 2299 00c2 DBB2     		uxtb	r3, r3
  97:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2300              		.loc 1 97 26 view .LVU715
 2301 00c4 7E2B     		cmp	r3, #126
 2302 00c6 DCD8     		bhi	.L170
  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2303              		.loc 1 99 24 is_stmt 1 view .LVU716
  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2304              		.loc 1 99 41 is_stmt 0 view .LVU717
 2305 00c8 6319     		adds	r3, r4, r5
 2306 00ca 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2307 00ce DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc7zS8Hs.s 			page 57


  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2308              		.loc 1 99 26 view .LVU718
 2309 00d0 1F2B     		cmp	r3, #31
 2310 00d2 D6D9     		bls	.L170
  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2311              		.loc 1 99 72 discriminator 1 view .LVU719
 2312 00d4 6319     		adds	r3, r4, r5
 2313 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2314 00da DBB2     		uxtb	r3, r3
  99:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2315              		.loc 1 99 55 discriminator 1 view .LVU720
 2316 00dc 7E2B     		cmp	r3, #126
 2317 00de D0D8     		bhi	.L170
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2318              		.loc 1 100 21 is_stmt 1 view .LVU721
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2319              		.loc 1 100 44 is_stmt 0 view .LVU722
 2320 00e0 94F89030 		ldrb	r3, [r4, #144]	@ zero_extendqisi2
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2321              		.loc 1 100 64 view .LVU723
 2322 00e4 5A1C     		adds	r2, r3, #1
 2323 00e6 D2B2     		uxtb	r2, r2
 2324 00e8 84F89020 		strb	r2, [r4, #144]
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2325              		.loc 1 100 84 view .LVU724
 2326 00ec 6219     		adds	r2, r4, r5
 2327 00ee 92F8A020 		ldrb	r2, [r2, #160]	@ zero_extendqisi2
 2328 00f2 D2B2     		uxtb	r2, r2
 100:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2329              		.loc 1 100 68 view .LVU725
 2330 00f4 2344     		add	r3, r3, r4
 2331 00f6 DA73     		strb	r2, [r3, #15]
 101:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 2332              		.loc 1 101 21 is_stmt 1 view .LVU726
 2333 00f8 3268     		ldr	r2, [r6]
 2334 00fa 3946     		mov	r1, r7
 2335 00fc 2046     		mov	r0, r4
 2336 00fe FFF7FEFF 		bl	NyanPrint
 2337              	.LVL221:
 2338 0102 BEE7     		b	.L170
 2339              	.L171:
  93:Core/Src/nyan_os.c ****                     NyanDecode(nos);
 2340              		.loc 1 93 21 view .LVU727
 2341 0104 2046     		mov	r0, r4
 2342 0106 FFF7FEFF 		bl	NyanDecode
 2343              	.LVL222:
  94:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
 2344              		.loc 1 94 21 view .LVU728
 2345 010a 2046     		mov	r0, r4
 2346 010c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2347              	.LVL223:
  95:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 2348              		.loc 1 95 21 view .LVU729
 2349 0110 0322     		movs	r2, #3
 2350 0112 1149     		ldr	r1, .L179+4
 2351 0114 2046     		mov	r0, r4
 2352 0116 FFF7FEFF 		bl	NyanPrint
ARM GAS  /tmp/cc7zS8Hs.s 			page 58


 2353              	.LVL224:
  96:Core/Src/nyan_os.c ****                     break;
 2354              		.loc 1 96 21 view .LVU730
 2355 011a 94E7     		b	.L167
 2356              	.LVL225:
 2357              	.L176:
  96:Core/Src/nyan_os.c ****                     break;
 2358              		.loc 1 96 21 is_stmt 0 view .LVU731
 2359              	.LBE28:
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2360              		.loc 1 82 5 view .LVU732
 2361 011c 0025     		movs	r5, #0
 2362 011e B1E7     		b	.L165
 2363              	.LVL226:
 2364              	.L174:
 2365              	.LBB30:
 108:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2366              		.loc 1 108 60 is_stmt 1 discriminator 2 view .LVU733
 2367 0120 0132     		adds	r2, r2, #1
 2368              	.LVL227:
 2369              	.L166:
 108:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2370              		.loc 1 108 35 discriminator 1 view .LVU734
 108:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2371              		.loc 1 108 44 is_stmt 0 discriminator 1 view .LVU735
 2372 0122 94F8A032 		ldrb	r3, [r4, #672]	@ zero_extendqisi2
 2373 0126 DBB2     		uxtb	r3, r3
 108:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2374              		.loc 1 108 13 discriminator 1 view .LVU736
 2375 0128 9342     		cmp	r3, r2
 2376 012a 8CD9     		bls	.L167
 109:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2377              		.loc 1 109 17 is_stmt 1 view .LVU737
 109:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2378              		.loc 1 109 23 is_stmt 0 view .LVU738
 2379 012c D4F8A412 		ldr	r1, [r4, #676]
 109:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2380              		.loc 1 109 45 view .LVU739
 2381 0130 D4F8A832 		ldr	r3, [r4, #680]
 109:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2382              		.loc 1 109 19 view .LVU740
 2383 0134 9942     		cmp	r1, r3
 2384 0136 F3D2     		bcs	.L174
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2385              		.loc 1 110 21 is_stmt 1 view .LVU741
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2386              		.loc 1 110 24 is_stmt 0 view .LVU742
 2387 0138 D4F8AC12 		ldr	r1, [r4, #684]
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2388              		.loc 1 110 41 view .LVU743
 2389 013c D4F8A432 		ldr	r3, [r4, #676]
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2390              		.loc 1 110 57 view .LVU744
 2391 0140 581C     		adds	r0, r3, #1
 2392 0142 C4F8A402 		str	r0, [r4, #676]
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2393              		.loc 1 110 77 view .LVU745
ARM GAS  /tmp/cc7zS8Hs.s 			page 59


 2394 0146 A018     		adds	r0, r4, r2
 2395 0148 90F8A000 		ldrb	r0, [r0, #160]	@ zero_extendqisi2
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2396              		.loc 1 110 61 view .LVU746
 2397 014c C854     		strb	r0, [r1, r3]
 2398 014e E7E7     		b	.L174
 2399              	.LVL228:
 2400              	.L177:
 110:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2401              		.loc 1 110 61 view .LVU747
 2402              	.LBE30:
  82:Core/Src/nyan_os.c ****     switch(nos->state){
 2403              		.loc 1 82 5 view .LVU748
 2404 0150 0022     		movs	r2, #0
 2405 0152 E6E7     		b	.L166
 2406              	.L180:
 2407              		.align	2
 2408              	.L179:
 2409 0154 00000000 		.word	.LC2
 2410 0158 00000000 		.word	.LANCHOR4
 2411              		.cfi_endproc
 2412              	.LFE148:
 2414              		.section	.rodata.str1.4,"aMS",%progbits,1
 2415              		.align	2
 2416              	.LC3:
 2417 0000 67657469 		.ascii	"getinfo\000"
 2417      6E666F00 
 2418              		.align	2
 2419              	.LC4:
 2420 0008 77726974 		.ascii	"write-bitstream\000"
 2420      652D6269 
 2420      74737472 
 2420      65616D00 
 2421              		.align	2
 2422              	.LC5:
 2423 0018 7365742D 		.ascii	"set-owner\000"
 2423      6F776E65 
 2423      7200
 2424              		.section	.data.nyan_keys_getinfo,"aw"
 2425              		.align	2
 2426              		.set	.LANCHOR2,. + 0
 2429              	nyan_keys_getinfo:
 2430 0000 56657273 		.ascii	"Version: 0.01\015\012Author: Portland.HODL\015\012B"
 2430      696F6E3A 
 2430      20302E30 
 2430      310D0A41 
 2430      7574686F 
 2431 0027 75696C74 		.ascii	"uilt: 07/11/23\015\012\000"
 2431      3A203037 
 2431      2F31312F 
 2431      32330D0A 
 2431      00
 2432              		.section	.data.nyan_keys_getinfo_owner,"aw"
 2433              		.align	2
 2434              		.set	.LANCHOR3,. + 0
 2437              	nyan_keys_getinfo_owner:
 2438 0000 4F776E65 		.ascii	"Owner: \000"
ARM GAS  /tmp/cc7zS8Hs.s 			page 60


 2438      723A2000 
 2439              		.section	.data.nyan_keys_newline,"aw"
 2440              		.align	2
 2441              		.set	.LANCHOR4,. + 0
 2444              	nyan_keys_newline:
 2445 0000 0D0A00   		.ascii	"\015\012\000"
 2446              		.section	.data.nyan_keys_path_text,"aw"
 2447              		.align	2
 2448              		.set	.LANCHOR1,. + 0
 2451              	nyan_keys_path_text:
 2452 0000 4E79616E 		.ascii	"NyanOS \360\237\220\261 > \000"
 2452      4F5320F0 
 2452      9F90B120 
 2452      3E2000
 2453              		.section	.data.nyan_keys_set_owner_success,"aw"
 2454              		.align	2
 2455              		.set	.LANCHOR7,. + 0
 2458              	nyan_keys_set_owner_success:
 2459 0000 4E79616E 		.ascii	"Nyan Keys owner has been successfully set\015\012\000"
 2459      204B6579 
 2459      73206F77 
 2459      6E657220 
 2459      68617320 
 2460              		.section	.data.nyan_keys_unknown_command,"aw"
 2461              		.align	2
 2462              		.set	.LANCHOR8,. + 0
 2465              	nyan_keys_unknown_command:
 2466 0000 436F6D6D 		.ascii	"Command not supported by NyanOS\000"
 2466      616E6420 
 2466      6E6F7420 
 2466      73757070 
 2466      6F727465 
 2467              		.section	.data.nyan_keys_welcome_text,"aw"
 2468              		.align	2
 2469              		.set	.LANCHOR0,. + 0
 2472              	nyan_keys_welcome_text:
 2473 0000 4E79616E 		.ascii	"Nyan Keys Operating System (NOS) V0.01\015\012Made "
 2473      204B6579 
 2473      73204F70 
 2473      65726174 
 2473      696E6720 
 2474 002d 62792050 		.ascii	"by Portland.HODL\015\012\015\012\000"
 2474      6F72746C 
 2474      616E642E 
 2474      484F444C 
 2474      0D0A0D0A 
 2475              		.section	.data.nyan_keys_write_bitstream_error_size,"aw"
 2476              		.align	2
 2477              		.set	.LANCHOR5,. + 0
 2480              	nyan_keys_write_bitstream_error_size:
 2481 0000 4661696C 		.ascii	"Failed to parse bitstream length, size must be less"
 2481      65642074 
 2481      6F207061 
 2481      72736520 
 2481      62697473 
 2482 0033 20746861 		.ascii	" than 65535 bytes.\015\012\000"
 2482      6E203635 
ARM GAS  /tmp/cc7zS8Hs.s 			page 61


 2482      35333520 
 2482      62797465 
 2482      732E0D0A 
 2483              		.section	.data.nyan_keys_write_bitstream_error_size_tx_busy,"aw"
 2484              		.align	2
 2485              		.set	.LANCHOR6,. + 0
 2488              	nyan_keys_write_bitstream_error_size_tx_busy:
 2489 0000 4661696C 		.ascii	"Failed to write bitstream length, TX buffer is busy"
 2489      65642074 
 2489      6F207772 
 2489      69746520 
 2489      62697473 
 2490 0033 2E0D0A00 		.ascii	".\015\012\000"
 2491              		.section	.rodata.nyan_commands,"a"
 2492              		.align	2
 2493              		.set	.LANCHOR9,. + 0
 2496              	nyan_commands:
 2497 0000 00000000 		.word	.LC3
 2498 0004 08000000 		.word	.LC4
 2499 0008 18000000 		.word	.LC5
 2500              		.text
 2501              	.Letext0:
 2502              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2503              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2504              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2505              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 2506              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2507              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2508              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2509              		.file 9 "Core/Inc/24xx_eeprom.h"
 2510              		.file 10 "Core/Inc/tim.h"
 2511              		.file 11 "Core/Inc/lattice_ice_hx.h"
 2512              		.file 12 "Core/Inc/nyan_bitcoin.h"
 2513              		.file 13 "Core/Inc/nyan_os.h"
 2514              		.file 14 "Core/Inc/nyan_sha256.h"
 2515              		.file 15 "Core/Inc/nyan_strings.h"
 2516              		.file 16 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdlib.h"
 2517              		.file 17 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 2518              		.file 18 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 2519              		.file 19 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 2520              		.file 20 "<built-in>"
ARM GAS  /tmp/cc7zS8Hs.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nyan_os.c
     /tmp/cc7zS8Hs.s:20     .text.NyanPrint:0000000000000000 $t
     /tmp/cc7zS8Hs.s:26     .text.NyanPrint:0000000000000000 NyanPrint
     /tmp/cc7zS8Hs.s:195    .text.NyanWelcomeDisplay:0000000000000000 $t
     /tmp/cc7zS8Hs.s:201    .text.NyanWelcomeDisplay:0000000000000000 NyanWelcomeDisplay
     /tmp/cc7zS8Hs.s:268    .text.NyanWelcomeDisplay:0000000000000034 $d
     /tmp/cc7zS8Hs.s:274    .text.NyanCdcTX:0000000000000000 $t
     /tmp/cc7zS8Hs.s:280    .text.NyanCdcTX:0000000000000000 NyanCdcTX
     /tmp/cc7zS8Hs.s:449    .text.NyanExeGetinfo:0000000000000000 $t
     /tmp/cc7zS8Hs.s:455    .text.NyanExeGetinfo:0000000000000000 NyanExeGetinfo
     /tmp/cc7zS8Hs.s:548    .text.NyanExeGetinfo:0000000000000064 $d
     /tmp/cc7zS8Hs.s:555    .text.NyanExeSetOwner:0000000000000000 $t
     /tmp/cc7zS8Hs.s:561    .text.NyanExeSetOwner:0000000000000000 NyanExeSetOwner
     /tmp/cc7zS8Hs.s:834    .rodata.NyanExeWriteFpgaBitstream.str1.4:0000000000000000 $d
     /tmp/cc7zS8Hs.s:838    .text.NyanExeWriteFpgaBitstream:0000000000000000 $t
     /tmp/cc7zS8Hs.s:844    .text.NyanExeWriteFpgaBitstream:0000000000000000 NyanExeWriteFpgaBitstream
     /tmp/cc7zS8Hs.s:1332   .text.NyanExeWriteFpgaBitstream:00000000000001d8 $d
     /tmp/cc7zS8Hs.s:1341   .text.NyanExecute:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1347   .text.NyanExecute:0000000000000000 NyanExecute
     /tmp/cc7zS8Hs.s:1372   .text.NyanExecute:0000000000000010 $d
     /tmp/cc7zS8Hs.s:1516   .text.NyanExecute:00000000000000b8 $d
     /tmp/cc7zS8Hs.s:1525   .text.FreeNyanCommandArgs:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1531   .text.FreeNyanCommandArgs:0000000000000000 FreeNyanCommandArgs
     /tmp/cc7zS8Hs.s:1603   .rodata.NyanDecodeArgs.str1.4:0000000000000000 $d
     /tmp/cc7zS8Hs.s:1607   .text.NyanDecodeArgs:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1613   .text.NyanDecodeArgs:0000000000000000 NyanDecodeArgs
     /tmp/cc7zS8Hs.s:1788   .text.NyanDecodeArgs:0000000000000094 $d
     /tmp/cc7zS8Hs.s:1793   .text.NyanDecode:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1799   .text.NyanDecode:0000000000000000 NyanDecode
     /tmp/cc7zS8Hs.s:1891   .text.NyanDecode:0000000000000044 $d
     /tmp/cc7zS8Hs.s:1896   .text.FreeNyanString:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1902   .text.FreeNyanString:0000000000000000 FreeNyanString
     /tmp/cc7zS8Hs.s:1963   .text.ClearNyanCommandBuffer:0000000000000000 $t
     /tmp/cc7zS8Hs.s:1969   .text.ClearNyanCommandBuffer:0000000000000000 ClearNyanCommandBuffer
     /tmp/cc7zS8Hs.s:1999   .text.NyanOsInit:0000000000000000 $t
     /tmp/cc7zS8Hs.s:2005   .text.NyanOsInit:0000000000000000 NyanOsInit
     /tmp/cc7zS8Hs.s:2103   .text.NyanOsInit:0000000000000058 $d
     /tmp/cc7zS8Hs.s:2109   .rodata.NyanAddInputBuffer.str1.4:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2113   .text.NyanAddInputBuffer:0000000000000000 $t
     /tmp/cc7zS8Hs.s:2119   .text.NyanAddInputBuffer:0000000000000000 NyanAddInputBuffer
     /tmp/cc7zS8Hs.s:2409   .text.NyanAddInputBuffer:0000000000000154 $d
     /tmp/cc7zS8Hs.s:2415   .rodata.str1.4:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2425   .data.nyan_keys_getinfo:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2429   .data.nyan_keys_getinfo:0000000000000000 nyan_keys_getinfo
     /tmp/cc7zS8Hs.s:2433   .data.nyan_keys_getinfo_owner:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2437   .data.nyan_keys_getinfo_owner:0000000000000000 nyan_keys_getinfo_owner
     /tmp/cc7zS8Hs.s:2440   .data.nyan_keys_newline:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2444   .data.nyan_keys_newline:0000000000000000 nyan_keys_newline
     /tmp/cc7zS8Hs.s:2447   .data.nyan_keys_path_text:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2451   .data.nyan_keys_path_text:0000000000000000 nyan_keys_path_text
     /tmp/cc7zS8Hs.s:2454   .data.nyan_keys_set_owner_success:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2458   .data.nyan_keys_set_owner_success:0000000000000000 nyan_keys_set_owner_success
     /tmp/cc7zS8Hs.s:2461   .data.nyan_keys_unknown_command:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2465   .data.nyan_keys_unknown_command:0000000000000000 nyan_keys_unknown_command
     /tmp/cc7zS8Hs.s:2468   .data.nyan_keys_welcome_text:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2472   .data.nyan_keys_welcome_text:0000000000000000 nyan_keys_welcome_text
ARM GAS  /tmp/cc7zS8Hs.s 			page 63


     /tmp/cc7zS8Hs.s:2476   .data.nyan_keys_write_bitstream_error_size:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2480   .data.nyan_keys_write_bitstream_error_size:0000000000000000 nyan_keys_write_bitstream_error_size
     /tmp/cc7zS8Hs.s:2484   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2488   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 nyan_keys_write_bitstream_error_size_tx_busy
     /tmp/cc7zS8Hs.s:2492   .rodata.nyan_commands:0000000000000000 $d
     /tmp/cc7zS8Hs.s:2496   .rodata.nyan_commands:0000000000000000 nyan_commands
     /tmp/cc7zS8Hs.s:1377   .text.NyanExecute:0000000000000015 $d
     /tmp/cc7zS8Hs.s:1377   .text.NyanExecute:0000000000000016 $t

UNDEFINED SYMBOLS
realloc
memcpy
malloc
CDC_Transmit
EepromRead
strncpy
strlen
strcpy
EepromFlushTxBuff
free
EepromWrite
atoi
sha256_init
sha256_update
sha256_final
sprintf
nos_fpga
HAL_TIM_OC_Stop_IT
HAL_TIM_OC_Start_IT
htim8
strtok
memset
memcmp
nos_eeprom
nyan_bitcoin
