ARM GAS  /tmp/ccYEfmoV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_os.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/nyan_os.c"
  20              		.section	.text.NyanPrint,"ax",%progbits
  21              		.align	1
  22              		.global	NyanPrint
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NyanPrint:
  28              	.LVL0:
  29              	.LFB149:
   1:Core/Src/nyan_os.c **** /**
   2:Core/Src/nyan_os.c ****  * NyanOS (NOS) v0.01
   3:Core/Src/nyan_os.c ****  * Reese Russell
   4:Core/Src/nyan_os.c ****  * MIT License
   5:Core/Src/nyan_os.c ****  */
   6:Core/Src/nyan_os.c **** 
   7:Core/Src/nyan_os.c **** #include <ctype.h>
   8:Core/Src/nyan_os.c **** #include <stdio.h>
   9:Core/Src/nyan_os.c **** #include <stdlib.h> 
  10:Core/Src/nyan_os.c **** #include <string.h>
  11:Core/Src/nyan_os.c **** 
  12:Core/Src/nyan_os.c **** #include "main.h"
  13:Core/Src/nyan_os.c **** #include "24xx_eeprom.h"
  14:Core/Src/nyan_os.c **** #include "nyan_os.h"
  15:Core/Src/nyan_os.c **** #include "nyan_sha256.h"
  16:Core/Src/nyan_os.c **** #include "nyan_strings.h"
  17:Core/Src/nyan_os.c **** #include "tim.h"
  18:Core/Src/nyan_os.c **** #include "usbd_cdc_acm_if.h"
  19:Core/Src/nyan_os.c **** 
  20:Core/Src/nyan_os.c **** NyanReturn NyanOsInit(volatile NyanOS* nos, Eeprom24xx* eeprom)
  21:Core/Src/nyan_os.c **** {
  22:Core/Src/nyan_os.c ****     // Set the operational state
  23:Core/Src/nyan_os.c ****     nos->state = READY;
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
  25:Core/Src/nyan_os.c **** 
  26:Core/Src/nyan_os.c ****     // Default init the OS vars
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
ARM GAS  /tmp/ccYEfmoV.s 			page 2


  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
  34:Core/Src/nyan_os.c **** 
  35:Core/Src/nyan_os.c ****     // EEPROM Driver access
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
  37:Core/Src/nyan_os.c **** 
  38:Core/Src/nyan_os.c ****     // Manual Setting of the memory because of the volatile qualifier.
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
  40:Core/Src/nyan_os.c **** 
  41:Core/Src/nyan_os.c ****     // Set the arg pointer to a zero value
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
  44:Core/Src/nyan_os.c ****     }
  45:Core/Src/nyan_os.c **** 
  46:Core/Src/nyan_os.c ****     // Output Buffer Creation
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
  49:Core/Src/nyan_os.c ****     
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  51:Core/Src/nyan_os.c **** }
  52:Core/Src/nyan_os.c **** 
  53:Core/Src/nyan_os.c **** NyanReturn NyanWelcomeDisplay(volatile NyanOS *nos)
  54:Core/Src/nyan_os.c **** {
  55:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
  57:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
  59:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
  60:Core/Src/nyan_os.c ****         }
  61:Core/Src/nyan_os.c ****     }
  62:Core/Src/nyan_os.c **** 
  63:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  64:Core/Src/nyan_os.c **** };
  65:Core/Src/nyan_os.c **** 
  66:Core/Src/nyan_os.c **** NyanReturn NyanAddInputBuffer(volatile NyanOS *nos, uint8_t *pbuf, uint32_t *Len)
  67:Core/Src/nyan_os.c **** {
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
  72:Core/Src/nyan_os.c **** 
  73:Core/Src/nyan_os.c ****     // Lets copy the RX Buffer so that it doesn't get freed by an interrupt !!!FIXME!!! This can be
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
  78:Core/Src/nyan_os.c ****     }
  79:Core/Src/nyan_os.c **** 
  80:Core/Src/nyan_os.c ****     // Check which state we are in.
  81:Core/Src/nyan_os.c ****     switch(nos->state){
  82:Core/Src/nyan_os.c ****         case READY: {
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
  85:Core/Src/nyan_os.c ****                     // Handle backspace
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
ARM GAS  /tmp/ccYEfmoV.s 			page 3


  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
  91:Core/Src/nyan_os.c ****                     // Handle the action of executing a command by pressing enter
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
  95:Core/Src/nyan_os.c ****                     break;
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
  97:Core/Src/nyan_os.c ****                     // Handle out of command buffer space on next char
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 101:Core/Src/nyan_os.c ****                 }
 102:Core/Src/nyan_os.c ****             }
 103:Core/Src/nyan_os.c ****             break;
 104:Core/Src/nyan_os.c ****         }
 105:Core/Src/nyan_os.c ****         case DIRECT_BUFFER_ACCESS: {
 106:Core/Src/nyan_os.c ****             // In this state all signals are written directly to the buffer until the buffer is ful
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 110:Core/Src/nyan_os.c ****             }
 111:Core/Src/nyan_os.c ****         }
 112:Core/Src/nyan_os.c ****         default: 
 113:Core/Src/nyan_os.c ****             break;
 114:Core/Src/nyan_os.c ****     }
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 116:Core/Src/nyan_os.c **** }
 117:Core/Src/nyan_os.c **** 
 118:Core/Src/nyan_os.c **** NyanReturn NyanPrint(volatile NyanOS *nos, char* data, size_t len)
 119:Core/Src/nyan_os.c **** {
  30              		.loc 1 119 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/nyan_os.c ****     if (!nos || !data)
  34              		.loc 1 120 5 view .LVU1
  35              		.loc 1 120 8 is_stmt 0 view .LVU2
  36 0000 0029     		cmp	r1, #0
  37 0002 18BF     		it	ne
  38 0004 0028     		cmpne	r0, #0
  39 0006 43D0     		beq	.L5
 119:Core/Src/nyan_os.c ****     if (!nos || !data)
  40              		.loc 1 119 1 view .LVU3
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 5, -12
  45              		.cfi_offset 6, -8
  46              		.cfi_offset 14, -4
  47 000a 1546     		mov	r5, r2
  48 000c 0446     		mov	r4, r0
  49 000e 0E46     		mov	r6, r1
 121:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 122:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/ccYEfmoV.s 			page 4


 123:Core/Src/nyan_os.c ****     if (nos->tx_buffer.size + len > 2048) {
  50              		.loc 1 123 5 is_stmt 1 view .LVU4
  51              		.loc 1 123 23 is_stmt 0 view .LVU5
  52 0010 D0F89830 		ldr	r3, [r0, #152]
  53              		.loc 1 123 29 view .LVU6
  54 0014 1344     		add	r3, r3, r2
  55              		.loc 1 123 8 view .LVU7
  56 0016 B3F5006F 		cmp	r3, #2048
  57 001a 3BD8     		bhi	.L6
 124:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 125:Core/Src/nyan_os.c ****     }
 126:Core/Src/nyan_os.c ****     if (nos->tx_buffer.p_array == NULL) {
  58              		.loc 1 126 5 is_stmt 1 view .LVU8
  59              		.loc 1 126 23 is_stmt 0 view .LVU9
  60 001c D0F89430 		ldr	r3, [r0, #148]
  61              		.loc 1 126 8 view .LVU10
  62 0020 2BB3     		cbz	r3, .L13
  63              	.LBB2:
 127:Core/Src/nyan_os.c ****         // Since the pointer is null we need to create a new one to hold our new data!
 128:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = (uint8_t *)malloc(len);
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 131:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 132:Core/Src/nyan_os.c ****         }
 133:Core/Src/nyan_os.c ****         nos->tx_buffer.size = len;
 134:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 135:Core/Src/nyan_os.c ****     } else {
 136:Core/Src/nyan_os.c ****         
 137:Core/Src/nyan_os.c ****         // The pointer is not null, so we realloc and then add the contents of data to it
 138:Core/Src/nyan_os.c ****         uint8_t *new_buffer = (uint8_t *)realloc(nos->tx_buffer.p_array, nos->tx_buffer.size + len)
  64              		.loc 1 138 9 is_stmt 1 view .LVU11
  65              		.loc 1 138 64 is_stmt 0 view .LVU12
  66 0022 D0F89400 		ldr	r0, [r0, #148]
  67              	.LVL1:
  68              		.loc 1 138 88 view .LVU13
  69 0026 D4F89810 		ldr	r1, [r4, #152]
  70              	.LVL2:
  71              		.loc 1 138 42 view .LVU14
  72 002a 1144     		add	r1, r1, r2
  73 002c FFF7FEFF 		bl	realloc
  74              	.LVL3:
 139:Core/Src/nyan_os.c ****         if (new_buffer == NULL) {
  75              		.loc 1 139 9 is_stmt 1 view .LVU15
  76              		.loc 1 139 12 is_stmt 0 view .LVU16
  77 0030 A0B3     		cbz	r0, .L8
 140:Core/Src/nyan_os.c ****             // Handle failed memory reallocation
 141:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 142:Core/Src/nyan_os.c ****         }
 143:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = new_buffer;
  78              		.loc 1 143 9 is_stmt 1 view .LVU17
  79              		.loc 1 143 32 is_stmt 0 view .LVU18
  80 0032 C4F89400 		str	r0, [r4, #148]
 144:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array + nos->tx_buffer.size, data, len); // Append the new data
  81              		.loc 1 144 9 is_stmt 1 view .LVU19
  82              		.loc 1 144 30 is_stmt 0 view .LVU20
  83 0036 D4F89400 		ldr	r0, [r4, #148]
  84              	.LVL4:
ARM GAS  /tmp/ccYEfmoV.s 			page 5


  85              		.loc 1 144 55 view .LVU21
  86 003a D4F89830 		ldr	r3, [r4, #152]
  87              		.loc 1 144 9 view .LVU22
  88 003e 2A46     		mov	r2, r5
  89 0040 3146     		mov	r1, r6
  90 0042 1844     		add	r0, r0, r3
  91 0044 FFF7FEFF 		bl	memcpy
  92              	.LVL5:
 145:Core/Src/nyan_os.c ****         nos->tx_buffer.size += len; // Increase the size to reflect the new total size
  93              		.loc 1 145 9 is_stmt 1 view .LVU23
  94              		.loc 1 145 23 is_stmt 0 view .LVU24
  95 0048 D4F89830 		ldr	r3, [r4, #152]
  96              		.loc 1 145 29 view .LVU25
  97 004c 2B44     		add	r3, r3, r5
  98 004e C4F89830 		str	r3, [r4, #152]
  99              	.LVL6:
 100              	.L4:
 101              		.loc 1 145 29 view .LVU26
 102              	.LBE2:
 146:Core/Src/nyan_os.c ****     }
 147:Core/Src/nyan_os.c **** 
 148:Core/Src/nyan_os.c ****     // Now calculate the chunks
 149:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = nos->tx_buffer.size / _NYAN_CDC_TX_MAX_LEN;
 103              		.loc 1 149 5 is_stmt 1 view .LVU27
 104              		.loc 1 149 42 is_stmt 0 view .LVU28
 105 0052 D4F89830 		ldr	r3, [r4, #152]
 106              		.loc 1 149 26 view .LVU29
 107 0056 C3F3C713 		ubfx	r3, r3, #7, #8
 108 005a 84F89130 		strb	r3, [r4, #145]
 150:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = nos->tx_buffer.size % _NYAN_CDC_TX_MAX_LEN;
 109              		.loc 1 150 5 is_stmt 1 view .LVU30
 110              		.loc 1 150 50 is_stmt 0 view .LVU31
 111 005e D4F89830 		ldr	r3, [r4, #152]
 112              		.loc 1 150 56 view .LVU32
 113 0062 03F07F03 		and	r3, r3, #127
 114              		.loc 1 150 34 view .LVU33
 115 0066 84F89230 		strb	r3, [r4, #146]
 151:Core/Src/nyan_os.c **** 
 152:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 116              		.loc 1 152 5 is_stmt 1 view .LVU34
 117              		.loc 1 152 12 is_stmt 0 view .LVU35
 118 006a 0120     		movs	r0, #1
 119              	.L2:
 153:Core/Src/nyan_os.c **** }
 120              		.loc 1 153 1 view .LVU36
 121 006c 70BD     		pop	{r4, r5, r6, pc}
 122              	.LVL7:
 123              	.L13:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 124              		.loc 1 128 9 is_stmt 1 view .LVU37
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 125              		.loc 1 128 45 is_stmt 0 view .LVU38
 126 006e 1046     		mov	r0, r2
 127              	.LVL8:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 128              		.loc 1 128 45 view .LVU39
 129 0070 FFF7FEFF 		bl	malloc
ARM GAS  /tmp/ccYEfmoV.s 			page 6


 130              	.LVL9:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 131              		.loc 1 128 32 view .LVU40
 132 0074 C4F89400 		str	r0, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 133              		.loc 1 129 9 is_stmt 1 view .LVU41
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 134              		.loc 1 129 27 is_stmt 0 view .LVU42
 135 0078 D4F89430 		ldr	r3, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 136              		.loc 1 129 12 view .LVU43
 137 007c 63B1     		cbz	r3, .L7
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 138              		.loc 1 133 9 is_stmt 1 view .LVU44
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 139              		.loc 1 133 29 is_stmt 0 view .LVU45
 140 007e C4F89850 		str	r5, [r4, #152]
 134:Core/Src/nyan_os.c ****     } else {
 141              		.loc 1 134 9 is_stmt 1 view .LVU46
 134:Core/Src/nyan_os.c ****     } else {
 142              		.loc 1 134 30 is_stmt 0 view .LVU47
 143 0082 D4F89400 		ldr	r0, [r4, #148]
 134:Core/Src/nyan_os.c ****     } else {
 144              		.loc 1 134 9 view .LVU48
 145 0086 2A46     		mov	r2, r5
 146 0088 3146     		mov	r1, r6
 147 008a FFF7FEFF 		bl	memcpy
 148              	.LVL10:
 149 008e E0E7     		b	.L4
 150              	.LVL11:
 151              	.L5:
 152              		.cfi_def_cfa_offset 0
 153              		.cfi_restore 4
 154              		.cfi_restore 5
 155              		.cfi_restore 6
 156              		.cfi_restore 14
 121:Core/Src/nyan_os.c **** 
 157              		.loc 1 121 16 view .LVU49
 158 0090 0020     		movs	r0, #0
 159              	.LVL12:
 160              		.loc 1 153 1 view .LVU50
 161 0092 7047     		bx	lr
 162              	.LVL13:
 163              	.L6:
 164              		.cfi_def_cfa_offset 16
 165              		.cfi_offset 4, -16
 166              		.cfi_offset 5, -12
 167              		.cfi_offset 6, -8
 168              		.cfi_offset 14, -4
 124:Core/Src/nyan_os.c ****     }
 169              		.loc 1 124 20 view .LVU51
 170 0094 0020     		movs	r0, #0
 171              	.LVL14:
 124:Core/Src/nyan_os.c ****     }
 172              		.loc 1 124 20 view .LVU52
 173 0096 E9E7     		b	.L2
 174              	.LVL15:
ARM GAS  /tmp/ccYEfmoV.s 			page 7


 175              	.L7:
 131:Core/Src/nyan_os.c ****         }
 176              		.loc 1 131 20 view .LVU53
 177 0098 0020     		movs	r0, #0
 178 009a E7E7     		b	.L2
 179              	.LVL16:
 180              	.L8:
 181              	.LBB3:
 141:Core/Src/nyan_os.c ****         }
 182              		.loc 1 141 20 view .LVU54
 183 009c 0020     		movs	r0, #0
 184              	.LVL17:
 141:Core/Src/nyan_os.c ****         }
 185              		.loc 1 141 20 view .LVU55
 186 009e E5E7     		b	.L2
 187              	.LBE3:
 188              		.cfi_endproc
 189              	.LFE149:
 191              		.section	.text.NyanWelcomeDisplay,"ax",%progbits
 192              		.align	1
 193              		.global	NyanWelcomeDisplay
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	NyanWelcomeDisplay:
 199              	.LVL18:
 200              	.LFB147:
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 201              		.loc 1 54 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 205              		.loc 1 55 5 view .LVU57
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 206              		.loc 1 55 11 is_stmt 0 view .LVU58
 207 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 208              		.loc 1 55 7 view .LVU59
 209 0002 A3B1     		cbz	r3, .L17
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 210              		.loc 1 54 1 view .LVU60
 211 0004 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 215 0006 0446     		mov	r4, r0
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 216              		.loc 1 56 9 is_stmt 1 view .LVU61
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 217              		.loc 1 56 34 is_stmt 0 view .LVU62
 218 0008 0023     		movs	r3, #0
 219 000a 0370     		strb	r3, [r0]
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 220              		.loc 1 57 9 is_stmt 1 view .LVU63
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 221              		.loc 1 57 15 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccYEfmoV.s 			page 8


 222 000c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 223              		.loc 1 57 42 view .LVU65
 224 000e 531C     		adds	r3, r2, #1
 225 0010 DBB2     		uxtb	r3, r3
 226 0012 4370     		strb	r3, [r0, #1]
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 227              		.loc 1 57 11 view .LVU66
 228 0014 0AB1     		cbz	r2, .L20
 229              	.LVL19:
 230              	.L15:
  63:Core/Src/nyan_os.c **** };
 231              		.loc 1 63 5 is_stmt 1 view .LVU67
  64:Core/Src/nyan_os.c **** 
 232              		.loc 1 64 1 is_stmt 0 view .LVU68
 233 0016 0120     		movs	r0, #1
 234 0018 10BD     		pop	{r4, pc}
 235              	.LVL20:
 236              	.L20:
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 237              		.loc 1 58 13 is_stmt 1 view .LVU69
 238 001a 4222     		movs	r2, #66
 239 001c 0549     		ldr	r1, .L21
 240 001e FFF7FEFF 		bl	NyanPrint
 241              	.LVL21:
  59:Core/Src/nyan_os.c ****         }
 242              		.loc 1 59 13 view .LVU70
 243 0022 0F22     		movs	r2, #15
 244 0024 0449     		ldr	r1, .L21+4
 245 0026 2046     		mov	r0, r4
 246 0028 FFF7FEFF 		bl	NyanPrint
 247              	.LVL22:
 248 002c F3E7     		b	.L15
 249              	.LVL23:
 250              	.L17:
 251              		.cfi_def_cfa_offset 0
 252              		.cfi_restore 4
 253              		.cfi_restore 14
  63:Core/Src/nyan_os.c **** };
 254              		.loc 1 63 5 view .LVU71
  64:Core/Src/nyan_os.c **** 
 255              		.loc 1 64 1 is_stmt 0 view .LVU72
 256 002e 0120     		movs	r0, #1
 257              	.LVL24:
  64:Core/Src/nyan_os.c **** 
 258              		.loc 1 64 1 view .LVU73
 259 0030 7047     		bx	lr
 260              	.L22:
 261 0032 00BF     		.align	2
 262              	.L21:
 263 0034 00000000 		.word	nyan_keys_welcome_text
 264 0038 00000000 		.word	nyan_keys_path_text
 265              		.cfi_endproc
 266              	.LFE147:
 268              		.section	.text.NyanCdcTX,"ax",%progbits
 269              		.align	1
 270              		.global	NyanCdcTX
ARM GAS  /tmp/ccYEfmoV.s 			page 9


 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	NyanCdcTX:
 276              	.LVL25:
 277              	.LFB150:
 154:Core/Src/nyan_os.c **** 
 155:Core/Src/nyan_os.c **** NyanReturn NyanCdcTX(volatile NyanOS* nos)
 156:Core/Src/nyan_os.c **** {
 278              		.loc 1 156 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		.loc 1 156 1 is_stmt 0 view .LVU75
 283 0000 08B5     		push	{r3, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 3, -8
 286              		.cfi_offset 14, -4
 287 0002 0346     		mov	r3, r0
 157:Core/Src/nyan_os.c ****     // First we need to determine how many chunks we need to send
 158:Core/Src/nyan_os.c ****     uint8_t total_chunks = nos->tx_chunks_solid;
 288              		.loc 1 158 5 is_stmt 1 view .LVU76
 289              		.loc 1 158 13 is_stmt 0 view .LVU77
 290 0004 90F89100 		ldrb	r0, [r0, #145]	@ zero_extendqisi2
 291              	.LVL26:
 292              		.loc 1 158 13 view .LVU78
 293 0008 C0B2     		uxtb	r0, r0
 294              	.LVL27:
 159:Core/Src/nyan_os.c ****     uint8_t length = 0;
 295              		.loc 1 159 5 is_stmt 1 view .LVU79
 160:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 296              		.loc 1 160 5 view .LVU80
 297              		.loc 1 160 34 is_stmt 0 view .LVU81
 298 000a 93F89310 		ldrb	r1, [r3, #147]	@ zero_extendqisi2
 299              		.loc 1 160 45 view .LVU82
 300 000e C901     		lsls	r1, r1, #7
 301              	.LVL28:
 161:Core/Src/nyan_os.c **** 
 162:Core/Src/nyan_os.c ****     // If there are partial bytes we need to increment the send chunks by 1
 163:Core/Src/nyan_os.c ****     if(nos->tx_chunks_partial_bytes) {
 302              		.loc 1 163 5 is_stmt 1 view .LVU83
 303              		.loc 1 163 11 is_stmt 0 view .LVU84
 304 0010 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 305              		.loc 1 163 7 view .LVU85
 306 0014 0AB1     		cbz	r2, .L24
 164:Core/Src/nyan_os.c ****         total_chunks++;
 307              		.loc 1 164 9 is_stmt 1 view .LVU86
 308              		.loc 1 164 21 is_stmt 0 view .LVU87
 309 0016 0130     		adds	r0, r0, #1
 310              	.LVL29:
 311              		.loc 1 164 21 view .LVU88
 312 0018 C0B2     		uxtb	r0, r0
 313              	.LVL30:
 314              	.L24:
 165:Core/Src/nyan_os.c ****     }
 166:Core/Src/nyan_os.c **** 
 167:Core/Src/nyan_os.c ****     // If there are no chunks to send than just return a failure
ARM GAS  /tmp/ccYEfmoV.s 			page 10


 168:Core/Src/nyan_os.c ****     if(total_chunks == 0) {
 315              		.loc 1 168 5 is_stmt 1 view .LVU89
 316              		.loc 1 168 7 is_stmt 0 view .LVU90
 317 001a 0028     		cmp	r0, #0
 318 001c 49D0     		beq	.L25
 169:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 170:Core/Src/nyan_os.c ****     }
 171:Core/Src/nyan_os.c ****     
 172:Core/Src/nyan_os.c ****     // Do checks and transmit data;
 173:Core/Src/nyan_os.c ****     if((nos->tx_buffer.p_array != NULL || nos->tx_buffer.size != 0) && nos->tx_inflight == 0) {
 319              		.loc 1 173 5 is_stmt 1 view .LVU91
 320              		.loc 1 173 23 is_stmt 0 view .LVU92
 321 001e D3F89420 		ldr	r2, [r3, #148]
 322              		.loc 1 173 7 view .LVU93
 323 0022 E2B1     		cbz	r2, .L34
 324              	.L26:
 325              		.loc 1 173 75 discriminator 3 view .LVU94
 326 0024 93F88F20 		ldrb	r2, [r3, #143]	@ zero_extendqisi2
 327              		.loc 1 173 69 discriminator 3 view .LVU95
 328 0028 002A     		cmp	r2, #0
 329 002a 41D1     		bne	.L31
 174:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 330              		.loc 1 174 9 is_stmt 1 view .LVU96
 331              		.loc 1 174 43 is_stmt 0 view .LVU97
 332 002c 83F89020 		strb	r2, [r3, #144]
 175:Core/Src/nyan_os.c ****         
 176:Core/Src/nyan_os.c ****         // Lets begin to process the chunks
 177:Core/Src/nyan_os.c ****         if(nos->tx_chunk == total_chunks - 1) { // This would be the processing of the last chunk
 333              		.loc 1 177 9 is_stmt 1 view .LVU98
 334              		.loc 1 177 15 is_stmt 0 view .LVU99
 335 0030 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 336 0034 D2B2     		uxtb	r2, r2
 337              		.loc 1 177 42 view .LVU100
 338 0036 00F1FF3C 		add	ip, r0, #-1
 339              		.loc 1 177 11 view .LVU101
 340 003a 6245     		cmp	r2, ip
 341 003c 15D0     		beq	.L35
 178:Core/Src/nyan_os.c ****             length = nos->tx_chunks_partial_bytes;
 179:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 342              		.loc 1 180 16 is_stmt 1 view .LVU102
 343              		.loc 1 180 23 is_stmt 0 view .LVU103
 344 003e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 345 0042 D2B2     		uxtb	r2, r2
 346              		.loc 1 180 19 view .LVU104
 347 0044 9445     		cmp	ip, r2
 348 0046 31DD     		ble	.L32
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 349              		.loc 1 181 13 is_stmt 1 view .LVU105
 350              	.LVL31:
 182:Core/Src/nyan_os.c ****             nos->tx_bulk_transfer_in_progress = true;
 351              		.loc 1 182 13 view .LVU106
 352              		.loc 1 182 47 is_stmt 0 view .LVU107
 353 0048 0122     		movs	r2, #1
 354 004a 83F89020 		strb	r2, [r3, #144]
 183:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 355              		.loc 1 183 13 is_stmt 1 view .LVU108
ARM GAS  /tmp/ccYEfmoV.s 			page 11


 356              		.loc 1 183 18 is_stmt 0 view .LVU109
 357 004e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 358              		.loc 1 183 13 view .LVU110
 359 0052 0132     		adds	r2, r2, #1
 360 0054 D2B2     		uxtb	r2, r2
 361 0056 83F89320 		strb	r2, [r3, #147]
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 362              		.loc 1 181 20 view .LVU111
 363 005a 8022     		movs	r2, #128
 364 005c 10E0     		b	.L28
 365              	.LVL32:
 366              	.L34:
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 367              		.loc 1 173 57 discriminator 2 view .LVU112
 368 005e D3F89820 		ldr	r2, [r3, #152]
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 369              		.loc 1 173 40 discriminator 2 view .LVU113
 370 0062 002A     		cmp	r2, #0
 371 0064 DED1     		bne	.L26
 184:Core/Src/nyan_os.c ****         }
 185:Core/Src/nyan_os.c **** 
 186:Core/Src/nyan_os.c ****         // If we have reach the end reset everything
 187:Core/Src/nyan_os.c ****         if (nos->tx_chunk > total_chunks - 1) {
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_solid = 0;
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 191:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 192:Core/Src/nyan_os.c ****         }
 193:Core/Src/nyan_os.c **** 
 194:Core/Src/nyan_os.c ****         CDC_Transmit(nos->cdc_ch, nos->tx_buffer.p_array + address_offset, length);
 195:Core/Src/nyan_os.c ****     }
 196:Core/Src/nyan_os.c ****     
 197:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 372              		.loc 1 197 12 view .LVU114
 373 0066 0120     		movs	r0, #1
 374              	.LVL33:
 375              		.loc 1 197 12 view .LVU115
 376 0068 23E0     		b	.L25
 377              	.LVL34:
 378              	.L35:
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 379              		.loc 1 178 13 is_stmt 1 view .LVU116
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 380              		.loc 1 178 20 is_stmt 0 view .LVU117
 381 006a 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 382 006e D2B2     		uxtb	r2, r2
 383              	.LVL35:
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 384              		.loc 1 179 13 is_stmt 1 view .LVU118
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 385              		.loc 1 179 18 is_stmt 0 view .LVU119
 386 0070 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 387              		.loc 1 179 13 view .LVU120
 388 0074 0CF1010C 		add	ip, ip, #1
 389 0078 5FFA8CFC 		uxtb	ip, ip
 390 007c 83F893C0 		strb	ip, [r3, #147]
ARM GAS  /tmp/ccYEfmoV.s 			page 12


 391              	.LVL36:
 392              	.L28:
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 393              		.loc 1 187 9 is_stmt 1 view .LVU121
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 394              		.loc 1 187 16 is_stmt 0 view .LVU122
 395 0080 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 396 0084 5FFA8CFC 		uxtb	ip, ip
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 397              		.loc 1 187 12 view .LVU123
 398 0088 8445     		cmp	ip, r0
 399 008a 06D3     		bcc	.L29
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 400              		.loc 1 189 13 is_stmt 1 view .LVU124
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 401              		.loc 1 189 34 is_stmt 0 view .LVU125
 402 008c 0020     		movs	r0, #0
 403              	.LVL37:
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 404              		.loc 1 189 34 view .LVU126
 405 008e 83F89100 		strb	r0, [r3, #145]
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 406              		.loc 1 190 13 is_stmt 1 view .LVU127
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 407              		.loc 1 190 42 is_stmt 0 view .LVU128
 408 0092 83F89200 		strb	r0, [r3, #146]
 191:Core/Src/nyan_os.c ****         }
 409              		.loc 1 191 13 is_stmt 1 view .LVU129
 191:Core/Src/nyan_os.c ****         }
 410              		.loc 1 191 27 is_stmt 0 view .LVU130
 411 0096 83F89300 		strb	r0, [r3, #147]
 412              	.L29:
 194:Core/Src/nyan_os.c ****     }
 413              		.loc 1 194 9 is_stmt 1 view .LVU131
 194:Core/Src/nyan_os.c ****     }
 414              		.loc 1 194 25 is_stmt 0 view .LVU132
 415 009a 93F88E00 		ldrb	r0, [r3, #142]	@ zero_extendqisi2
 194:Core/Src/nyan_os.c ****     }
 416              		.loc 1 194 49 view .LVU133
 417 009e D3F89430 		ldr	r3, [r3, #148]
 418              	.LVL38:
 194:Core/Src/nyan_os.c ****     }
 419              		.loc 1 194 9 view .LVU134
 420 00a2 1944     		add	r1, r1, r3
 421              	.LVL39:
 194:Core/Src/nyan_os.c ****     }
 422              		.loc 1 194 9 view .LVU135
 423 00a4 FFF7FEFF 		bl	CDC_Transmit
 424              	.LVL40:
 425              		.loc 1 197 12 view .LVU136
 426 00a8 0120     		movs	r0, #1
 427 00aa 02E0     		b	.L25
 428              	.LVL41:
 429              	.L32:
 159:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 430              		.loc 1 159 13 view .LVU137
 431 00ac 0022     		movs	r2, #0
ARM GAS  /tmp/ccYEfmoV.s 			page 13


 432 00ae E7E7     		b	.L28
 433              	.L31:
 434              		.loc 1 197 12 view .LVU138
 435 00b0 0120     		movs	r0, #1
 436              	.LVL42:
 437              	.L25:
 198:Core/Src/nyan_os.c **** }
 438              		.loc 1 198 1 view .LVU139
 439 00b2 08BD     		pop	{r3, pc}
 440              		.cfi_endproc
 441              	.LFE150:
 443              		.section	.text.NyanExeGetinfo,"ax",%progbits
 444              		.align	1
 445              		.global	NyanExeGetinfo
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 450              	NyanExeGetinfo:
 451              	.LVL43:
 452              	.LFB154:
 199:Core/Src/nyan_os.c **** 
 200:Core/Src/nyan_os.c **** NyanReturn NyanDecode(volatile NyanOS* nos)
 201:Core/Src/nyan_os.c **** {
 202:Core/Src/nyan_os.c ****     // First set the nos state to idle
 203:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 204:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 205:Core/Src/nyan_os.c ****     for (uint8_t cmd_idx = 0; cmd_idx < _NYAN_NUM_COMMANDS; ++cmd_idx) {
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 207:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 208:Core/Src/nyan_os.c ****         if (_NYAN_CMD_BUF_LEN >= command_len && memcmp((const char*)nos->command_buffer, nyan_comma
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 210:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 211:Core/Src/nyan_os.c ****             nos->exe = (NyanExe)cmd_idx;
 212:Core/Src/nyan_os.c ****             break;
 213:Core/Src/nyan_os.c ****         } else {
 214:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_COMMAND_NOT_SUPPORTED;
 215:Core/Src/nyan_os.c ****         }
 216:Core/Src/nyan_os.c ****     }
 217:Core/Src/nyan_os.c **** 
 218:Core/Src/nyan_os.c ****     // If no command is matched, return some indication (e.g., NULL or a specific error string)
 219:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 220:Core/Src/nyan_os.c **** }
 221:Core/Src/nyan_os.c **** 
 222:Core/Src/nyan_os.c **** NyanReturn NyanExecute(volatile NyanOS* nos) {
 223:Core/Src/nyan_os.c ****     switch(nos->exe) {
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 225:Core/Src/nyan_os.c ****             NyanExeGetinfo(nos);
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 227:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 228:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 229:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 230:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 231:Core/Src/nyan_os.c ****             NyanExeSetOwner(nos);
 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 233:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 234:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 235:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
ARM GAS  /tmp/ccYEfmoV.s 			page 14


 236:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 237:Core/Src/nyan_os.c ****             HAL_TIM_OC_Stop_IT(&htim8, TIM_CHANNEL_1);
 238:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 239:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 240:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 242:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 243:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 244:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 245:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 246:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 247:Core/Src/nyan_os.c ****         case NYAN_EXE_COMMAND_NOT_SUPPORTED :
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_unknown_command[0], sizeof(nyan_keys_unknown_command))
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 250:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 251:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 252:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 253:Core/Src/nyan_os.c ****         default:
 254:Core/Src/nyan_os.c ****             // The execution state is out of bounds correct this.
 255:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 256:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 257:Core/Src/nyan_os.c ****     }
 258:Core/Src/nyan_os.c **** }
 259:Core/Src/nyan_os.c **** 
 260:Core/Src/nyan_os.c **** NyanReturn NyanDecodeArgs(volatile NyanOS* nos)
 261:Core/Src/nyan_os.c **** {
 262:Core/Src/nyan_os.c ****     if (!nos) {
 263:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 264:Core/Src/nyan_os.c ****     }
 265:Core/Src/nyan_os.c **** 
 266:Core/Src/nyan_os.c ****     // Destroy any previous allocated arguments
 267:Core/Src/nyan_os.c ****     FreeNyanCommandArgs(nos);
 268:Core/Src/nyan_os.c **** 
 269:Core/Src/nyan_os.c ****     nos->command_buffer[_NYAN_CMD_BUF_LEN] = '\0';
 270:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 271:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 272:Core/Src/nyan_os.c **** 
 273:Core/Src/nyan_os.c ****     int arg_count = 0;
 274:Core/Src/nyan_os.c ****     while (token != NULL) {
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 276:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 280:Core/Src/nyan_os.c ****                 for (int i = 0; i < arg_count; ++i) {
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 282:Core/Src/nyan_os.c ****                 }
 283:Core/Src/nyan_os.c ****                 return NOS_FAILURE;
 284:Core/Src/nyan_os.c ****             }
 285:Core/Src/nyan_os.c ****             strcpy((char *)nos->command_arg_buffer[arg_count], token);
 286:Core/Src/nyan_os.c ****             arg_count++;
 287:Core/Src/nyan_os.c ****         }
 288:Core/Src/nyan_os.c ****         token = strtok(NULL, delimiter);
 289:Core/Src/nyan_os.c ****     }
 290:Core/Src/nyan_os.c **** 
 291:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = arg_count;
 292:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/ccYEfmoV.s 			page 15


 293:Core/Src/nyan_os.c ****     // Nullify the command buffer
 294:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 295:Core/Src/nyan_os.c **** 
 296:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 297:Core/Src/nyan_os.c **** }
 298:Core/Src/nyan_os.c **** 
 299:Core/Src/nyan_os.c **** NyanReturn NyanExeGetinfo(volatile NyanOS* nos)
 300:Core/Src/nyan_os.c **** {
 453              		.loc 1 300 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 64
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		.loc 1 300 1 is_stmt 0 view .LVU141
 458 0000 10B5     		push	{r4, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
 462 0002 90B0     		sub	sp, sp, #64
 463              		.cfi_def_cfa_offset 72
 464 0004 0446     		mov	r4, r0
 301:Core/Src/nyan_os.c ****     // We need to fetch the owners name from the eeprom
 302:Core/Src/nyan_os.c ****     EepromRead(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 465              		.loc 1 302 5 is_stmt 1 view .LVU142
 466              		.loc 1 302 19 is_stmt 0 view .LVU143
 467 0006 4068     		ldr	r0, [r0, #4]
 468              	.LVL44:
 469              		.loc 1 302 5 view .LVU144
 470 0008 4023     		movs	r3, #64
 471 000a 2022     		movs	r2, #32
 472 000c 0021     		movs	r1, #0
 473 000e FFF7FEFF 		bl	EepromRead
 474              	.LVL45:
 303:Core/Src/nyan_os.c **** 
 304:Core/Src/nyan_os.c ****     // This has to be polling until callbacks are improved
 305:Core/Src/nyan_os.c ****     while(nos->eeprom->rx_inflight){}
 475              		.loc 1 305 5 is_stmt 1 view .LVU145
 476              	.L37:
 477              		.loc 1 305 37 discriminator 1 view .LVU146
 478              		.loc 1 305 11 discriminator 1 view .LVU147
 479              		.loc 1 305 14 is_stmt 0 discriminator 1 view .LVU148
 480 0012 6368     		ldr	r3, [r4, #4]
 481              		.loc 1 305 22 discriminator 1 view .LVU149
 482 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 483              		.loc 1 305 11 discriminator 1 view .LVU150
 484 0016 002B     		cmp	r3, #0
 485 0018 FBD1     		bne	.L37
 306:Core/Src/nyan_os.c **** 
 307:Core/Src/nyan_os.c ****     // Ensure data from EEPROM is null-terminated
 308:Core/Src/nyan_os.c ****     nos->eeprom->rx_buf[SIZE_BOARD_OWNER - 1] = '\0';
 486              		.loc 1 308 5 is_stmt 1 view .LVU151
 487              		.loc 1 308 8 is_stmt 0 view .LVU152
 488 001a 6368     		ldr	r3, [r4, #4]
 489              		.loc 1 308 47 view .LVU153
 490 001c 0022     		movs	r2, #0
 491 001e 83F8C420 		strb	r2, [r3, #196]
 309:Core/Src/nyan_os.c **** 
 310:Core/Src/nyan_os.c ****     char owner[SIZE_BOARD_OWNER];
ARM GAS  /tmp/ccYEfmoV.s 			page 16


 492              		.loc 1 310 5 is_stmt 1 view .LVU154
 311:Core/Src/nyan_os.c ****     strncpy(owner, (const char *)nos->eeprom->rx_buf, SIZE_BOARD_OWNER);
 493              		.loc 1 311 5 view .LVU155
 494              		.loc 1 311 37 is_stmt 0 view .LVU156
 495 0022 6168     		ldr	r1, [r4, #4]
 496              		.loc 1 311 5 view .LVU157
 497 0024 4022     		movs	r2, #64
 498 0026 8531     		adds	r1, r1, #133
 499 0028 6846     		mov	r0, sp
 500 002a FFF7FEFF 		bl	strncpy
 501              	.LVL46:
 312:Core/Src/nyan_os.c **** 
 313:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo[0], sizeof(nyan_keys_getinfo));
 502              		.loc 1 313 5 is_stmt 1 view .LVU158
 503 002e 3822     		movs	r2, #56
 504 0030 0C49     		ldr	r1, .L39
 505 0032 2046     		mov	r0, r4
 506 0034 FFF7FEFF 		bl	NyanPrint
 507              	.LVL47:
 314:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo_owner[0], sizeof(nyan_keys_getinfo_owner));
 508              		.loc 1 314 5 view .LVU159
 509 0038 0822     		movs	r2, #8
 510 003a 0B49     		ldr	r1, .L39+4
 511 003c 2046     		mov	r0, r4
 512 003e FFF7FEFF 		bl	NyanPrint
 513              	.LVL48:
 315:Core/Src/nyan_os.c ****     NyanPrint(nos, owner, strlen(owner));
 514              		.loc 1 315 5 view .LVU160
 515 0042 6846     		mov	r0, sp
 516 0044 FFF7FEFF 		bl	strlen
 517              	.LVL49:
 518 0048 0246     		mov	r2, r0
 519 004a 6946     		mov	r1, sp
 520 004c 2046     		mov	r0, r4
 521 004e FFF7FEFF 		bl	NyanPrint
 522              	.LVL50:
 316:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 523              		.loc 1 316 5 view .LVU161
 524 0052 0322     		movs	r2, #3
 525 0054 0549     		ldr	r1, .L39+8
 526 0056 2046     		mov	r0, r4
 527 0058 FFF7FEFF 		bl	NyanPrint
 528              	.LVL51:
 317:Core/Src/nyan_os.c **** 
 318:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 529              		.loc 1 318 5 view .LVU162
 319:Core/Src/nyan_os.c **** }
 530              		.loc 1 319 1 is_stmt 0 view .LVU163
 531 005c 0120     		movs	r0, #1
 532 005e 10B0     		add	sp, sp, #64
 533              		.cfi_def_cfa_offset 8
 534              		@ sp needed
 535 0060 10BD     		pop	{r4, pc}
 536              	.LVL52:
 537              	.L40:
 538              		.loc 1 319 1 view .LVU164
 539 0062 00BF     		.align	2
ARM GAS  /tmp/ccYEfmoV.s 			page 17


 540              	.L39:
 541 0064 00000000 		.word	nyan_keys_getinfo
 542 0068 00000000 		.word	nyan_keys_getinfo_owner
 543 006c 00000000 		.word	nyan_keys_newline
 544              		.cfi_endproc
 545              	.LFE154:
 547              		.section	.text.NyanExeSetOwner,"ax",%progbits
 548              		.align	1
 549              		.global	NyanExeSetOwner
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 554              	NyanExeSetOwner:
 555              	.LVL53:
 556              	.LFB155:
 320:Core/Src/nyan_os.c **** 
 321:Core/Src/nyan_os.c **** NyanReturn NyanExeSetOwner(volatile NyanOS* nos) 
 322:Core/Src/nyan_os.c **** {
 557              		.loc 1 322 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		.loc 1 322 1 is_stmt 0 view .LVU166
 562 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 563              		.cfi_def_cfa_offset 24
 564              		.cfi_offset 4, -24
 565              		.cfi_offset 5, -20
 566              		.cfi_offset 6, -16
 567              		.cfi_offset 7, -12
 568              		.cfi_offset 8, -8
 569              		.cfi_offset 14, -4
 323:Core/Src/nyan_os.c ****     if (!nos) {
 570              		.loc 1 323 5 is_stmt 1 view .LVU167
 571              		.loc 1 323 8 is_stmt 0 view .LVU168
 572 0004 0028     		cmp	r0, #0
 573 0006 78D0     		beq	.L54
 574 0008 0446     		mov	r4, r0
 324:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle null pointer
 325:Core/Src/nyan_os.c ****     }
 326:Core/Src/nyan_os.c **** 
 327:Core/Src/nyan_os.c ****     if (nos->command_buffer_num_args < 2) {
 575              		.loc 1 327 5 is_stmt 1 view .LVU169
 576              		.loc 1 327 12 is_stmt 0 view .LVU170
 577 000a 90F88D30 		ldrb	r3, [r0, #141]	@ zero_extendqisi2
 578 000e DBB2     		uxtb	r3, r3
 579              		.loc 1 327 8 view .LVU171
 580 0010 012B     		cmp	r3, #1
 581 0012 74D9     		bls	.L55
 582              	.LBB4:
 328:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Not enough args
 329:Core/Src/nyan_os.c ****     }
 330:Core/Src/nyan_os.c **** 
 331:Core/Src/nyan_os.c ****     size_t total_chars = 0;
 332:Core/Src/nyan_os.c **** 
 333:Core/Src/nyan_os.c ****     // Calculate total length needed, including spaces between arguments
 334:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 583              		.loc 1 334 14 view .LVU172
ARM GAS  /tmp/ccYEfmoV.s 			page 18


 584 0014 0125     		movs	r5, #1
 585              	.LBE4:
 331:Core/Src/nyan_os.c **** 
 586              		.loc 1 331 12 view .LVU173
 587 0016 0026     		movs	r6, #0
 588 0018 09E0     		b	.L43
 589              	.LVL54:
 590              	.L45:
 591              	.LBB5:
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 592              		.loc 1 335 9 is_stmt 1 discriminator 4 view .LVU174
 593              		.loc 1 335 62 is_stmt 0 discriminator 4 view .LVU175
 594 001a 05F1AA03 		add	r3, r5, #170
 595 001e 04EB8303 		add	r3, r4, r3, lsl #2
 596 0022 5868     		ldr	r0, [r3, #4]
 597              		.loc 1 335 24 discriminator 4 view .LVU176
 598 0024 FFF7FEFF 		bl	strlen
 599              	.LVL55:
 600              		.loc 1 335 67 discriminator 4 view .LVU177
 601 0028 0130     		adds	r0, r0, #1
 602              		.loc 1 335 21 discriminator 4 view .LVU178
 603 002a 0644     		add	r6, r6, r0
 604              	.LVL56:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 605              		.loc 1 334 94 is_stmt 1 discriminator 4 view .LVU179
 606 002c 0135     		adds	r5, r5, #1
 607              	.LVL57:
 608              	.L43:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 609              		.loc 1 334 54 discriminator 1 view .LVU180
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 610              		.loc 1 334 28 is_stmt 0 discriminator 1 view .LVU181
 611 002e 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 612 0032 DBB2     		uxtb	r3, r3
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 613              		.loc 1 334 54 discriminator 1 view .LVU182
 614 0034 AB42     		cmp	r3, r5
 615 0036 06DD     		ble	.L44
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 616              		.loc 1 334 80 discriminator 3 view .LVU183
 617 0038 05F1AA03 		add	r3, r5, #170
 618 003c 04EB8303 		add	r3, r4, r3, lsl #2
 619 0040 5B68     		ldr	r3, [r3, #4]
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 620              		.loc 1 334 54 discriminator 3 view .LVU184
 621 0042 002B     		cmp	r3, #0
 622 0044 E9D1     		bne	.L45
 623              	.L44:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 624              		.loc 1 334 54 discriminator 3 view .LVU185
 625              	.LBE5:
 336:Core/Src/nyan_os.c ****     }
 337:Core/Src/nyan_os.c **** 
 338:Core/Src/nyan_os.c ****     // Since the size cant exceed 63 chars with null terminator 
 339:Core/Src/nyan_os.c ****     if (total_chars > SIZE_BOARD_OWNER - nos->command_buffer_num_args - 1  || total_chars == 0) {
 626              		.loc 1 339 5 is_stmt 1 view .LVU186
 627              		.loc 1 339 45 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccYEfmoV.s 			page 19


 628 0046 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 629              		.loc 1 339 71 view .LVU188
 630 004a C3F13F03 		rsb	r3, r3, #63
 631              		.loc 1 339 8 view .LVU189
 632 004e B342     		cmp	r3, r6
 633 0050 59D3     		bcc	.L56
 634              		.loc 1 339 76 discriminator 1 view .LVU190
 635 0052 0EB9     		cbnz	r6, .L61
 340:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Would overflow memory boundaries 
 636              		.loc 1 340 16 view .LVU191
 637 0054 0026     		movs	r6, #0
 638              	.LVL58:
 639              		.loc 1 340 16 view .LVU192
 640 0056 53E0     		b	.L42
 641              	.LVL59:
 642              	.L61:
 341:Core/Src/nyan_os.c ****     }
 342:Core/Src/nyan_os.c **** 
 343:Core/Src/nyan_os.c ****     // Allocate memory for the new owner name
 344:Core/Src/nyan_os.c ****     char* owners_name = (char*)malloc(SIZE_BOARD_OWNER);
 643              		.loc 1 344 5 is_stmt 1 view .LVU193
 644              		.loc 1 344 32 is_stmt 0 view .LVU194
 645 0058 4020     		movs	r0, #64
 646 005a FFF7FEFF 		bl	malloc
 647              	.LVL60:
 345:Core/Src/nyan_os.c ****     if (!owners_name) {
 648              		.loc 1 345 5 is_stmt 1 view .LVU195
 649              		.loc 1 345 8 is_stmt 0 view .LVU196
 650 005e 0546     		mov	r5, r0
 651              	.LVL61:
 652              		.loc 1 345 8 view .LVU197
 653 0060 0028     		cmp	r0, #0
 654 0062 52D0     		beq	.L58
 655              	.LBB6:
 346:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle allocation failure
 347:Core/Src/nyan_os.c ****     }
 348:Core/Src/nyan_os.c **** 
 349:Core/Src/nyan_os.c ****     // Zero out the SIZE_BOARD_OWNER bytes
 350:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i) {
 656              		.loc 1 350 14 view .LVU198
 657 0064 0023     		movs	r3, #0
 658 0066 02E0     		b	.L46
 659              	.LVL62:
 660              	.L47:
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 661              		.loc 1 351 9 is_stmt 1 discriminator 3 view .LVU199
 662              		.loc 1 351 24 is_stmt 0 discriminator 3 view .LVU200
 663 0068 0022     		movs	r2, #0
 664 006a EA54     		strb	r2, [r5, r3]
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 665              		.loc 1 350 43 is_stmt 1 discriminator 3 view .LVU201
 666 006c 0133     		adds	r3, r3, #1
 667              	.LVL63:
 668              	.L46:
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 669              		.loc 1 350 23 discriminator 1 view .LVU202
 670 006e 3F2B     		cmp	r3, #63
ARM GAS  /tmp/ccYEfmoV.s 			page 20


 671 0070 FADD     		ble	.L47
 672              	.LBE6:
 352:Core/Src/nyan_os.c ****     }
 353:Core/Src/nyan_os.c **** 
 354:Core/Src/nyan_os.c ****     // Concatenate arguments with spaces
 355:Core/Src/nyan_os.c ****     char* current_pos = owners_name;
 673              		.loc 1 355 11 is_stmt 0 view .LVU203
 674 0072 A846     		mov	r8, r5
 675              	.LBB7:
 356:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 676              		.loc 1 356 14 view .LVU204
 677 0074 0126     		movs	r6, #1
 678              	.LVL64:
 679              		.loc 1 356 14 view .LVU205
 680 0076 00E0     		b	.L48
 681              	.LVL65:
 682              	.L49:
 683              		.loc 1 356 94 is_stmt 1 discriminator 2 view .LVU206
 684 0078 0136     		adds	r6, r6, #1
 685              	.LVL66:
 686              	.L48:
 687              		.loc 1 356 54 discriminator 1 view .LVU207
 688              		.loc 1 356 28 is_stmt 0 discriminator 1 view .LVU208
 689 007a 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 690 007e DBB2     		uxtb	r3, r3
 691              		.loc 1 356 54 discriminator 1 view .LVU209
 692 0080 B342     		cmp	r3, r6
 693 0082 21DD     		ble	.L50
 694              		.loc 1 356 80 discriminator 3 view .LVU210
 695 0084 06F1AA03 		add	r3, r6, #170
 696 0088 04EB8303 		add	r3, r4, r3, lsl #2
 697 008c 5B68     		ldr	r3, [r3, #4]
 698              		.loc 1 356 54 discriminator 3 view .LVU211
 699 008e DBB1     		cbz	r3, .L50
 357:Core/Src/nyan_os.c ****         strcpy(current_pos, (char *)nos->command_arg_buffer[i]);
 700              		.loc 1 357 9 is_stmt 1 view .LVU212
 701              		.loc 1 357 60 is_stmt 0 view .LVU213
 702 0090 06F1AA07 		add	r7, r6, #170
 703 0094 04EB8707 		add	r7, r4, r7, lsl #2
 704 0098 7968     		ldr	r1, [r7, #4]
 705              		.loc 1 357 9 view .LVU214
 706 009a 4046     		mov	r0, r8
 707 009c FFF7FEFF 		bl	strcpy
 708              	.LVL67:
 358:Core/Src/nyan_os.c ****         current_pos += strlen((char *)nos->command_arg_buffer[i]);
 709              		.loc 1 358 9 is_stmt 1 view .LVU215
 710              		.loc 1 358 62 is_stmt 0 view .LVU216
 711 00a0 7868     		ldr	r0, [r7, #4]
 712              		.loc 1 358 24 view .LVU217
 713 00a2 FFF7FEFF 		bl	strlen
 714              	.LVL68:
 715              		.loc 1 358 21 view .LVU218
 716 00a6 8044     		add	r8, r8, r0
 717              	.LVL69:
 359:Core/Src/nyan_os.c **** 
 360:Core/Src/nyan_os.c ****         // Add a space after each argument, except the last one
 361:Core/Src/nyan_os.c ****         if (i < nos->command_buffer_num_args - 1 && nos->command_arg_buffer[i + 1] != NULL) {
ARM GAS  /tmp/ccYEfmoV.s 			page 21


 718              		.loc 1 361 9 is_stmt 1 view .LVU219
 719              		.loc 1 361 20 is_stmt 0 view .LVU220
 720 00a8 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 721              		.loc 1 361 46 view .LVU221
 722 00ac 013B     		subs	r3, r3, #1
 723              		.loc 1 361 12 view .LVU222
 724 00ae B342     		cmp	r3, r6
 725 00b0 E2DD     		ble	.L49
 726              		.loc 1 361 76 discriminator 1 view .LVU223
 727 00b2 06F1AB03 		add	r3, r6, #171
 728 00b6 04EB8303 		add	r3, r4, r3, lsl #2
 729 00ba 5B68     		ldr	r3, [r3, #4]
 730              		.loc 1 361 50 discriminator 1 view .LVU224
 731 00bc 002B     		cmp	r3, #0
 732 00be DBD0     		beq	.L49
 362:Core/Src/nyan_os.c ****             *current_pos = ' ';
 733              		.loc 1 362 13 is_stmt 1 view .LVU225
 734              		.loc 1 362 26 is_stmt 0 view .LVU226
 735 00c0 2023     		movs	r3, #32
 736 00c2 08F8013B 		strb	r3, [r8], #1
 737              	.LVL70:
 363:Core/Src/nyan_os.c ****             current_pos++;
 738              		.loc 1 363 13 is_stmt 1 view .LVU227
 739              		.loc 1 363 13 is_stmt 0 view .LVU228
 740 00c6 D7E7     		b	.L49
 741              	.L50:
 742              		.loc 1 363 13 view .LVU229
 743              	.LBE7:
 364:Core/Src/nyan_os.c ****         }
 365:Core/Src/nyan_os.c ****     }
 366:Core/Src/nyan_os.c **** 
 367:Core/Src/nyan_os.c ****     // First lets clear out the TX buff
 368:Core/Src/nyan_os.c ****     if(EepromFlushTxBuff(nos->eeprom) != EEPROM_SUCCESS){
 744              		.loc 1 368 5 is_stmt 1 view .LVU230
 745              		.loc 1 368 29 is_stmt 0 view .LVU231
 746 00c8 6068     		ldr	r0, [r4, #4]
 747              		.loc 1 368 8 view .LVU232
 748 00ca FFF7FEFF 		bl	EepromFlushTxBuff
 749              	.LVL71:
 750 00ce 0646     		mov	r6, r0
 751              	.LVL72:
 752              		.loc 1 368 7 view .LVU233
 753 00d0 0128     		cmp	r0, #1
 754 00d2 1CD1     		bne	.L59
 755              	.LBB8:
 369:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 370:Core/Src/nyan_os.c ****     }
 371:Core/Src/nyan_os.c **** 
 372:Core/Src/nyan_os.c ****     // Second lets copy our new buffer over to the EEPROM driver
 373:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i){
 756              		.loc 1 373 14 view .LVU234
 757 00d4 0023     		movs	r3, #0
 758              	.L52:
 759              	.LVL73:
 760              		.loc 1 373 23 is_stmt 1 discriminator 1 view .LVU235
 761 00d6 3F2B     		cmp	r3, #63
 762 00d8 05DC     		bgt	.L62
ARM GAS  /tmp/ccYEfmoV.s 			page 22


 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 763              		.loc 1 374 9 discriminator 3 view .LVU236
 764              		.loc 1 374 12 is_stmt 0 discriminator 3 view .LVU237
 765 00da 6268     		ldr	r2, [r4, #4]
 766              		.loc 1 374 46 discriminator 3 view .LVU238
 767 00dc E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 768              		.loc 1 374 33 discriminator 3 view .LVU239
 769 00de 1A44     		add	r2, r2, r3
 770 00e0 5171     		strb	r1, [r2, #5]
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 771              		.loc 1 373 43 is_stmt 1 discriminator 3 view .LVU240
 772 00e2 0133     		adds	r3, r3, #1
 773              	.LVL74:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 774              		.loc 1 373 43 is_stmt 0 discriminator 3 view .LVU241
 775 00e4 F7E7     		b	.L52
 776              	.L62:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 777              		.loc 1 373 43 discriminator 3 view .LVU242
 778              	.LBE8:
 375:Core/Src/nyan_os.c ****     }
 376:Core/Src/nyan_os.c **** 
 377:Core/Src/nyan_os.c ****     // Free up the allocated memory
 378:Core/Src/nyan_os.c ****     free(owners_name);
 779              		.loc 1 378 5 is_stmt 1 view .LVU243
 780 00e6 2846     		mov	r0, r5
 781 00e8 FFF7FEFF 		bl	free
 782              	.LVL75:
 379:Core/Src/nyan_os.c **** 
 380:Core/Src/nyan_os.c ****     // Write the name to the eeprom, the delay exists to ensure the write, later the callback can b
 381:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 783              		.loc 1 381 5 view .LVU244
 784              		.loc 1 381 20 is_stmt 0 view .LVU245
 785 00ec 6068     		ldr	r0, [r4, #4]
 786              		.loc 1 381 5 view .LVU246
 787 00ee 4023     		movs	r3, #64
 788 00f0 2022     		movs	r2, #32
 789 00f2 0021     		movs	r1, #0
 790 00f4 FFF7FEFF 		bl	EepromWrite
 791              	.LVL76:
 382:Core/Src/nyan_os.c **** 
 383:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 792              		.loc 1 383 5 is_stmt 1 view .LVU247
 793              		.loc 1 383 12 is_stmt 0 view .LVU248
 794 00f8 02E0     		b	.L42
 795              	.LVL77:
 796              	.L54:
 324:Core/Src/nyan_os.c ****     }
 797              		.loc 1 324 16 view .LVU249
 798 00fa 0026     		movs	r6, #0
 799 00fc 00E0     		b	.L42
 800              	.L55:
 328:Core/Src/nyan_os.c ****     }
 801              		.loc 1 328 16 view .LVU250
 802 00fe 0026     		movs	r6, #0
 803              	.LVL78:
 804              	.L42:
ARM GAS  /tmp/ccYEfmoV.s 			page 23


 384:Core/Src/nyan_os.c **** }
 805              		.loc 1 384 1 view .LVU251
 806 0100 3046     		mov	r0, r6
 807 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 808              	.LVL79:
 809              	.L56:
 340:Core/Src/nyan_os.c ****     }
 810              		.loc 1 340 16 view .LVU252
 811 0106 0026     		movs	r6, #0
 812              	.LVL80:
 340:Core/Src/nyan_os.c ****     }
 813              		.loc 1 340 16 view .LVU253
 814 0108 FAE7     		b	.L42
 815              	.LVL81:
 816              	.L58:
 346:Core/Src/nyan_os.c ****     }
 817              		.loc 1 346 16 view .LVU254
 818 010a 0026     		movs	r6, #0
 819              	.LVL82:
 346:Core/Src/nyan_os.c ****     }
 820              		.loc 1 346 16 view .LVU255
 821 010c F8E7     		b	.L42
 822              	.LVL83:
 823              	.L59:
 369:Core/Src/nyan_os.c ****     }
 824              		.loc 1 369 16 view .LVU256
 825 010e 0026     		movs	r6, #0
 826 0110 F6E7     		b	.L42
 827              		.cfi_endproc
 828              	.LFE155:
 830              		.section	.rodata.NyanExeWriteFpgaBitstream.str1.4,"aMS",%progbits,1
 831              		.align	2
 832              	.LC0:
 833 0000 25303278 		.ascii	"%02x\000"
 833      00
 834              		.section	.text.NyanExeWriteFpgaBitstream,"ax",%progbits
 835              		.align	1
 836              		.global	NyanExeWriteFpgaBitstream
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 841              	NyanExeWriteFpgaBitstream:
 842              	.LVL84:
 843              	.LFB156:
 385:Core/Src/nyan_os.c **** 
 386:Core/Src/nyan_os.c **** NyanReturn NyanExeWriteFpgaBitstream(volatile NyanOS* nos)
 387:Core/Src/nyan_os.c **** {
 844              		.loc 1 387 1 is_stmt 1 view -0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 232
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 389:Core/Src/nyan_os.c ****     if(nos->state == DIRECT_BUFFER_ACCESS)
 848              		.loc 1 389 5 view .LVU258
 849              		.loc 1 389 11 is_stmt 0 view .LVU259
 850 0000 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 851 0002 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccYEfmoV.s 			page 24


 852              		.loc 1 389 7 view .LVU260
 853 0004 022B     		cmp	r3, #2
 854 0006 00F0E180 		beq	.L85
 387:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 855              		.loc 1 387 1 view .LVU261
 856 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 857              		.cfi_def_cfa_offset 28
 858              		.cfi_offset 4, -28
 859              		.cfi_offset 5, -24
 860              		.cfi_offset 6, -20
 861              		.cfi_offset 7, -16
 862              		.cfi_offset 8, -12
 863              		.cfi_offset 9, -8
 864              		.cfi_offset 14, -4
 865 000e BBB0     		sub	sp, sp, #236
 866              		.cfi_def_cfa_offset 264
 867 0010 0446     		mov	r4, r0
 390:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 391:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 392:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 868              		.loc 1 392 5 is_stmt 1 view .LVU262
 869              		.loc 1 392 14 is_stmt 0 view .LVU263
 870 0012 0423     		movs	r3, #4
 871 0014 4372     		strb	r3, [r0, #9]
 393:Core/Src/nyan_os.c **** 
 394:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 872              		.loc 1 394 5 is_stmt 1 view .LVU264
 873              		.loc 1 394 27 is_stmt 0 view .LVU265
 874 0016 0023     		movs	r3, #0
 875 0018 C0F8A432 		str	r3, [r0, #676]
 395:Core/Src/nyan_os.c ****     // Now we need to convert the arg 1 into an int - skip arg 0 because that is the command.
 396:Core/Src/nyan_os.c ****     nos->bytes_array_size = atoi((char *)nos->command_arg_buffer[1]);
 876              		.loc 1 396 5 is_stmt 1 view .LVU266
 877              		.loc 1 396 65 is_stmt 0 view .LVU267
 878 001c D0F8B002 		ldr	r0, [r0, #688]
 879              	.LVL85:
 880              		.loc 1 396 29 view .LVU268
 881 0020 FFF7FEFF 		bl	atoi
 882              	.LVL86:
 883              		.loc 1 396 27 view .LVU269
 884 0024 C4F8A402 		str	r0, [r4, #676]
 397:Core/Src/nyan_os.c ****     // Safety the size of the buffer to ensure that it doesn't exceed the size of a block 
 398:Core/Src/nyan_os.c ****     if(nos->bytes_array_size  > 0xFFFF) {
 885              		.loc 1 398 5 is_stmt 1 view .LVU270
 886              		.loc 1 398 11 is_stmt 0 view .LVU271
 887 0028 D4F8A432 		ldr	r3, [r4, #676]
 888              		.loc 1 398 7 view .LVU272
 889 002c B3F5803F 		cmp	r3, #65536
 890 0030 18D2     		bcs	.L93
 399:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 400:Core/Src/nyan_os.c ****         nos->bytes_array_size = 0;
 401:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 402:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 403:Core/Src/nyan_os.c ****     }
 404:Core/Src/nyan_os.c ****     // Write the length of the bitstream we are accepting to the EEPROM - 16 bytes
 405:Core/Src/nyan_os.c ****     unsigned int size_array[4] = { 0x00, 0x00, 0x00, nos->bytes_array_size };
 891              		.loc 1 405 5 is_stmt 1 view .LVU273
ARM GAS  /tmp/ccYEfmoV.s 			page 25


 892              		.loc 1 405 18 is_stmt 0 view .LVU274
 893 0032 0023     		movs	r3, #0
 894 0034 3693     		str	r3, [sp, #216]
 895 0036 3793     		str	r3, [sp, #220]
 896 0038 3893     		str	r3, [sp, #224]
 897              		.loc 1 405 57 view .LVU275
 898 003a D4F8A432 		ldr	r3, [r4, #676]
 899              		.loc 1 405 18 view .LVU276
 900 003e 3993     		str	r3, [sp, #228]
 406:Core/Src/nyan_os.c ****     if(nos->eeprom->tx_inflight) {
 901              		.loc 1 406 5 is_stmt 1 view .LVU277
 902              		.loc 1 406 11 is_stmt 0 view .LVU278
 903 0040 6368     		ldr	r3, [r4, #4]
 904              		.loc 1 406 19 view .LVU279
 905 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 906              		.loc 1 406 7 view .LVU280
 907 0044 C3B9     		cbnz	r3, .L94
 908              	.LBB9:
 407:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 408:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size_tx_busy[0], sizeof(nyan_keys_wr
 409:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 410:Core/Src/nyan_os.c ****     }
 411:Core/Src/nyan_os.c ****     // Copy the data to the EEPROM buffer for writing
 412:Core/Src/nyan_os.c ****     for(short i = 0; i < sizeof(size_array); ++i) {
 909              		.loc 1 412 15 view .LVU281
 910 0046 0022     		movs	r2, #0
 911              	.L66:
 912              	.LVL87:
 913              		.loc 1 412 24 is_stmt 1 discriminator 1 view .LVU282
 914 0048 93B2     		uxth	r3, r2
 915 004a 0F2B     		cmp	r3, #15
 916 004c 1BD8     		bhi	.L95
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 917              		.loc 1 413 9 discriminator 3 view .LVU283
 918              		.loc 1 413 12 is_stmt 0 discriminator 3 view .LVU284
 919 004e 6168     		ldr	r1, [r4, #4]
 920              		.loc 1 413 56 discriminator 3 view .LVU285
 921 0050 02F1E800 		add	r0, r2, #232
 922 0054 6844     		add	r0, sp, r0
 923 0056 10F8100C 		ldrb	r0, [r0, #-16]	@ zero_extendqisi2
 924              		.loc 1 413 32 discriminator 3 view .LVU286
 925 005a 0A44     		add	r2, r2, r1
 926              	.LVL88:
 927              		.loc 1 413 32 discriminator 3 view .LVU287
 928 005c 5071     		strb	r0, [r2, #5]
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 929              		.loc 1 412 46 is_stmt 1 discriminator 3 view .LVU288
 930 005e 0133     		adds	r3, r3, #1
 931              	.LVL89:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 932              		.loc 1 412 46 is_stmt 0 discriminator 3 view .LVU289
 933 0060 1AB2     		sxth	r2, r3
 934              	.LVL90:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 935              		.loc 1 412 46 discriminator 3 view .LVU290
 936 0062 F1E7     		b	.L66
 937              	.LVL91:
ARM GAS  /tmp/ccYEfmoV.s 			page 26


 938              	.L93:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 939              		.loc 1 412 46 discriminator 3 view .LVU291
 940              	.LBE9:
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 941              		.loc 1 400 9 is_stmt 1 view .LVU292
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 942              		.loc 1 400 31 is_stmt 0 view .LVU293
 943 0064 0025     		movs	r5, #0
 944 0066 C4F8A452 		str	r5, [r4, #676]
 401:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 945              		.loc 1 401 9 is_stmt 1 view .LVU294
 946 006a 4822     		movs	r2, #72
 947 006c 5949     		ldr	r1, .L99
 948 006e 2046     		mov	r0, r4
 949 0070 FFF7FEFF 		bl	NyanPrint
 950              	.LVL92:
 402:Core/Src/nyan_os.c ****     }
 951              		.loc 1 402 9 view .LVU295
 402:Core/Src/nyan_os.c ****     }
 952              		.loc 1 402 16 is_stmt 0 view .LVU296
 953 0074 2846     		mov	r0, r5
 954 0076 A6E0     		b	.L64
 955              	.L94:
 408:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 956              		.loc 1 408 9 is_stmt 1 view .LVU297
 957 0078 3722     		movs	r2, #55
 958 007a 5749     		ldr	r1, .L99+4
 959 007c 2046     		mov	r0, r4
 960 007e FFF7FEFF 		bl	NyanPrint
 961              	.LVL93:
 409:Core/Src/nyan_os.c ****     }
 962              		.loc 1 409 9 view .LVU298
 409:Core/Src/nyan_os.c ****     }
 963              		.loc 1 409 16 is_stmt 0 view .LVU299
 964 0082 0020     		movs	r0, #0
 965 0084 9FE0     		b	.L64
 966              	.LVL94:
 967              	.L95:
 414:Core/Src/nyan_os.c ****     }
 415:Core/Src/nyan_os.c ****     // Write the data to the eeprom - wait for the write to complete since this is DMA and order ma
 416:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_FPGA_BITSTREAM_LEN, SIZE_FPGA_BITSTREAM_LEN);
 968              		.loc 1 416 5 is_stmt 1 view .LVU300
 969              		.loc 1 416 20 is_stmt 0 view .LVU301
 970 0086 6068     		ldr	r0, [r4, #4]
 971              		.loc 1 416 5 view .LVU302
 972 0088 1023     		movs	r3, #16
 973 008a B022     		movs	r2, #176
 974              	.LVL95:
 975              		.loc 1 416 5 view .LVU303
 976 008c 0021     		movs	r1, #0
 977 008e FFF7FEFF 		bl	EepromWrite
 978              	.LVL96:
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 979              		.loc 1 417 5 is_stmt 1 view .LVU304
 980              	.L68:
 418:Core/Src/nyan_os.c ****         // Wait while the TX is in flight as to avoid bogus writes;
ARM GAS  /tmp/ccYEfmoV.s 			page 27


 419:Core/Src/nyan_os.c ****     }
 981              		.loc 1 419 5 discriminator 1 view .LVU305
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 982              		.loc 1 417 11 discriminator 1 view .LVU306
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 983              		.loc 1 417 14 is_stmt 0 discriminator 1 view .LVU307
 984 0092 6368     		ldr	r3, [r4, #4]
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 985              		.loc 1 417 22 discriminator 1 view .LVU308
 986 0094 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 987              		.loc 1 417 11 discriminator 1 view .LVU309
 988 0096 002E     		cmp	r6, #0
 989 0098 FBD1     		bne	.L68
 420:Core/Src/nyan_os.c **** 
 421:Core/Src/nyan_os.c ****     // Print the ready to accept bytes confirmation message - This does nothing because it's execut
 422:Core/Src/nyan_os.c ****     // NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_start[0], sizeof(nyan_keys_write_bitst
 423:Core/Src/nyan_os.c **** 
 424:Core/Src/nyan_os.c ****     // Lets allocate some memory to save this bitstream we are importing
 425:Core/Src/nyan_os.c ****     nos->bytes_array = (uint8_t*)malloc(nos->bytes_array_size * sizeof(uint8_t));
 990              		.loc 1 425 5 is_stmt 1 view .LVU310
 991              		.loc 1 425 44 is_stmt 0 view .LVU311
 992 009a D4F8A402 		ldr	r0, [r4, #676]
 993              		.loc 1 425 34 view .LVU312
 994 009e FFF7FEFF 		bl	malloc
 995              	.LVL97:
 996              		.loc 1 425 22 view .LVU313
 997 00a2 C4F8A802 		str	r0, [r4, #680]
 426:Core/Src/nyan_os.c ****     if(nos->bytes_array == NULL) {
 998              		.loc 1 426 5 is_stmt 1 view .LVU314
 999              		.loc 1 426 11 is_stmt 0 view .LVU315
 1000 00a6 D4F8A832 		ldr	r3, [r4, #680]
 1001              		.loc 1 426 7 view .LVU316
 1002 00aa BBB1     		cbz	r3, .L96
 427:Core/Src/nyan_os.c ****         // Handle memory allocation failure
 428:Core/Src/nyan_os.c ****         nos->state = READY; // or appropriate error state
 429:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 430:Core/Src/nyan_os.c ****     }
 431:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 432:Core/Src/nyan_os.c ****     nos->state = DIRECT_BUFFER_ACCESS;
 1003              		.loc 1 432 5 is_stmt 1 view .LVU317
 1004              		.loc 1 432 16 is_stmt 0 view .LVU318
 1005 00ac 0223     		movs	r3, #2
 1006 00ae 2372     		strb	r3, [r4, #8]
 433:Core/Src/nyan_os.c **** 
 434:Core/Src/nyan_os.c ****     while(nos->bytes_received != nos->bytes_array_size){
 1007              		.loc 1 434 5 is_stmt 1 view .LVU319
 1008              	.L70:
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 436:Core/Src/nyan_os.c ****         // The user can exit this loop by just filling the buffer up for now.
 437:Core/Src/nyan_os.c ****         // Enabling am abort sequence would be a next step
 438:Core/Src/nyan_os.c ****     }
 1009              		.loc 1 438 5 discriminator 1 view .LVU320
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1010              		.loc 1 434 31 discriminator 1 view .LVU321
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1011              		.loc 1 434 14 is_stmt 0 discriminator 1 view .LVU322
ARM GAS  /tmp/ccYEfmoV.s 			page 28


 1012 00b0 D4F8A022 		ldr	r2, [r4, #672]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1013              		.loc 1 434 37 discriminator 1 view .LVU323
 1014 00b4 D4F8A432 		ldr	r3, [r4, #676]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1015              		.loc 1 434 31 discriminator 1 view .LVU324
 1016 00b8 9A42     		cmp	r2, r3
 1017 00ba F9D1     		bne	.L70
 439:Core/Src/nyan_os.c **** 
 440:Core/Src/nyan_os.c ****     // Take a Sha256 Hash of the inputs for the user display
 441:Core/Src/nyan_os.c ****     BYTE buf[SHA256_BLOCK_SIZE];
 1018              		.loc 1 441 5 is_stmt 1 view .LVU325
 442:Core/Src/nyan_os.c ****     SHA256_CTX ctx;
 1019              		.loc 1 442 5 view .LVU326
 443:Core/Src/nyan_os.c ****     
 444:Core/Src/nyan_os.c ****     sha256_init(&ctx);
 1020              		.loc 1 444 5 view .LVU327
 1021 00bc 12A8     		add	r0, sp, #72
 1022 00be FFF7FEFF 		bl	sha256_init
 1023              	.LVL98:
 445:Core/Src/nyan_os.c ****     sha256_update(&ctx, nos->bytes_array, nos->bytes_array_size);
 1024              		.loc 1 445 5 view .LVU328
 1025              		.loc 1 445 28 is_stmt 0 view .LVU329
 1026 00c2 D4F8A812 		ldr	r1, [r4, #680]
 1027              		.loc 1 445 46 view .LVU330
 1028 00c6 D4F8A422 		ldr	r2, [r4, #676]
 1029              		.loc 1 445 5 view .LVU331
 1030 00ca 12A8     		add	r0, sp, #72
 1031 00cc FFF7FEFF 		bl	sha256_update
 1032              	.LVL99:
 446:Core/Src/nyan_os.c ****     sha256_final(&ctx, buf);
 1033              		.loc 1 446 5 is_stmt 1 view .LVU332
 1034 00d0 2EA9     		add	r1, sp, #184
 1035 00d2 12A8     		add	r0, sp, #72
 1036 00d4 FFF7FEFF 		bl	sha256_final
 1037              	.LVL100:
 447:Core/Src/nyan_os.c **** 
 448:Core/Src/nyan_os.c ****     // Print the sha256 output for the user to verify their bitstream
 449:Core/Src/nyan_os.c ****     char hexString[SHA256_BLOCK_SIZE * 2 + 1];
 1038              		.loc 1 449 5 view .LVU333
 450:Core/Src/nyan_os.c ****     for (int i = 0; i < SHA256_BLOCK_SIZE; i++) {
 1039              		.loc 1 450 5 view .LVU334
 1040              	.LBB10:
 1041              		.loc 1 450 10 view .LVU335
 1042              		.loc 1 450 14 is_stmt 0 view .LVU336
 1043 00d8 0025     		movs	r5, #0
 1044              		.loc 1 450 5 view .LVU337
 1045 00da 0FE0     		b	.L71
 1046              	.LVL101:
 1047              	.L96:
 1048              		.loc 1 450 5 view .LVU338
 1049              	.LBE10:
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1050              		.loc 1 428 9 is_stmt 1 view .LVU339
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1051              		.loc 1 428 20 is_stmt 0 view .LVU340
 1052 00dc 0123     		movs	r3, #1
ARM GAS  /tmp/ccYEfmoV.s 			page 29


 1053 00de 2372     		strb	r3, [r4, #8]
 429:Core/Src/nyan_os.c ****     }
 1054              		.loc 1 429 9 is_stmt 1 view .LVU341
 429:Core/Src/nyan_os.c ****     }
 1055              		.loc 1 429 16 is_stmt 0 view .LVU342
 1056 00e0 0020     		movs	r0, #0
 1057 00e2 70E0     		b	.L64
 1058              	.LVL102:
 1059              	.L72:
 1060              	.LBB11:
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1061              		.loc 1 451 9 is_stmt 1 discriminator 3 view .LVU343
 1062              		.loc 1 451 47 is_stmt 0 discriminator 3 view .LVU344
 1063 00e4 05F1E803 		add	r3, r5, #232
 1064 00e8 6B44     		add	r3, sp, r3
 1065              		.loc 1 451 9 discriminator 3 view .LVU345
 1066 00ea 13F8302C 		ldrb	r2, [r3, #-48]	@ zero_extendqisi2
 1067 00ee 3B49     		ldr	r1, .L99+8
 1068 00f0 01AB     		add	r3, sp, #4
 1069 00f2 03EB4500 		add	r0, r3, r5, lsl #1
 1070 00f6 FFF7FEFF 		bl	sprintf
 1071              	.LVL103:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1072              		.loc 1 450 45 is_stmt 1 discriminator 3 view .LVU346
 1073 00fa 0135     		adds	r5, r5, #1
 1074              	.LVL104:
 1075              	.L71:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1076              		.loc 1 450 23 discriminator 1 view .LVU347
 1077 00fc 1F2D     		cmp	r5, #31
 1078 00fe F1DD     		ble	.L72
 1079              	.LBE11:
 452:Core/Src/nyan_os.c ****     }
 453:Core/Src/nyan_os.c ****     hexString[SHA256_BLOCK_SIZE * 2] = '\0';
 1080              		.loc 1 453 5 view .LVU348
 1081              		.loc 1 453 38 is_stmt 0 view .LVU349
 1082 0100 0023     		movs	r3, #0
 1083 0102 8DF84430 		strb	r3, [sp, #68]
 454:Core/Src/nyan_os.c ****     
 455:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&hexString[0], SHA256_BLOCK_SIZE * 2);
 1084              		.loc 1 455 5 is_stmt 1 view .LVU350
 1085 0106 4022     		movs	r2, #64
 1086 0108 01A9     		add	r1, sp, #4
 1087 010a 2046     		mov	r0, r4
 1088 010c FFF7FEFF 		bl	NyanPrint
 1089              	.LVL105:
 456:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1090              		.loc 1 456 5 view .LVU351
 1091 0110 0322     		movs	r2, #3
 1092 0112 3349     		ldr	r1, .L99+12
 1093 0114 2046     		mov	r0, r4
 1094 0116 FFF7FEFF 		bl	NyanPrint
 1095              	.LVL106:
 457:Core/Src/nyan_os.c **** 
 458:Core/Src/nyan_os.c ****     // Calculate the number iterations 
 459:Core/Src/nyan_os.c ****     unsigned int r = nos->bytes_array_size % EEPROM_DRIVER_TX_BUF_SZ;
 1096              		.loc 1 459 5 view .LVU352
ARM GAS  /tmp/ccYEfmoV.s 			page 30


 1097              		.loc 1 459 25 is_stmt 0 view .LVU353
 1098 011a D4F8A432 		ldr	r3, [r4, #676]
 1099              	.LVL107:
 460:Core/Src/nyan_os.c ****     unsigned int q = nos->bytes_array_size / EEPROM_DRIVER_TX_BUF_SZ;
 1100              		.loc 1 460 5 is_stmt 1 view .LVU354
 1101              		.loc 1 460 25 is_stmt 0 view .LVU355
 1102 011e D4F8A472 		ldr	r7, [r4, #676]
 1103              		.loc 1 460 18 view .LVU356
 1104 0122 4FEAD718 		lsr	r8, r7, #7
 1105              	.LVL108:
 461:Core/Src/nyan_os.c ****     if(r > 0)
 1106              		.loc 1 461 5 is_stmt 1 view .LVU357
 1107              		.loc 1 461 7 is_stmt 0 view .LVU358
 1108 0126 13F07F0F 		tst	r3, #127
 1109 012a 01D0     		beq	.L73
 462:Core/Src/nyan_os.c ****         ++q;
 1110              		.loc 1 462 9 is_stmt 1 view .LVU359
 1111 012c 08F10108 		add	r8, r8, #1
 1112              	.LVL109:
 1113              	.L73:
 463:Core/Src/nyan_os.c ****     if (q == 0)
 1114              		.loc 1 463 5 view .LVU360
 1115              		.loc 1 463 8 is_stmt 0 view .LVU361
 1116 0130 B8F1000F 		cmp	r8, #0
 1117 0134 4CD0     		beq	.L87
 1118              	.LBB12:
 464:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 465:Core/Src/nyan_os.c **** 
 466:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the EEPROM, write, wait ...
 467:Core/Src/nyan_os.c ****     for(unsigned short page = 0; page < q; ++page) {
 1119              		.loc 1 467 24 view .LVU362
 1120 0136 0025     		movs	r5, #0
 1121              	.LVL110:
 1122              		.loc 1 467 24 view .LVU363
 1123 0138 31E0     		b	.L74
 1124              	.LVL111:
 1125              	.L76:
 1126              	.LBB13:
 1127              	.LBB14:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 469:Core/Src/nyan_os.c ****         bool txRetry = false;
 470:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 471:Core/Src/nyan_os.c ****         EepromFlushTxBuff(nos->eeprom);
 472:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 473:Core/Src/nyan_os.c ****         for(uint8_t byte = 0; byte < EEPROM_DRIVER_TX_BUF_SZ; ++byte) {
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1128              		.loc 1 474 13 is_stmt 1 discriminator 3 view .LVU364
 1129              		.loc 1 474 44 is_stmt 0 discriminator 3 view .LVU365
 1130 013a D4F8A802 		ldr	r0, [r4, #680]
 1131              		.loc 1 474 89 discriminator 3 view .LVU366
 1132 013e 03EBC511 		add	r1, r3, r5, lsl #7
 1133              		.loc 1 474 16 discriminator 3 view .LVU367
 1134 0142 6268     		ldr	r2, [r4, #4]
 1135              		.loc 1 474 57 discriminator 3 view .LVU368
 1136 0144 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1137              		.loc 1 474 39 discriminator 3 view .LVU369
 1138 0146 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccYEfmoV.s 			page 31


 1139 0148 5171     		strb	r1, [r2, #5]
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1140              		.loc 1 473 63 is_stmt 1 discriminator 3 view .LVU370
 1141 014a 0133     		adds	r3, r3, #1
 1142              	.LVL112:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1143              		.loc 1 473 63 is_stmt 0 discriminator 3 view .LVU371
 1144 014c DBB2     		uxtb	r3, r3
 1145              	.LVL113:
 1146              	.L75:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1147              		.loc 1 473 36 is_stmt 1 discriminator 1 view .LVU372
 1148 014e 13F0800F 		tst	r3, #128
 1149 0152 F2D0     		beq	.L76
 1150              	.LBE14:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1151              		.loc 1 469 14 is_stmt 0 view .LVU373
 1152 0154 B146     		mov	r9, r6
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1153              		.loc 1 468 14 view .LVU374
 1154 0156 3746     		mov	r7, r6
 1155              	.LVL114:
 1156              	.L79:
 475:Core/Src/nyan_os.c ****         }
 476:Core/Src/nyan_os.c ****         // Attempt to write the data to the EEPROM - Until the job is done.
 477:Core/Src/nyan_os.c ****         while(!txSuccess) {
 1157              		.loc 1 477 15 is_stmt 1 view .LVU375
 1158 0158 FFB9     		cbnz	r7, .L97
 478:Core/Src/nyan_os.c ****             if(EepromWrite(nos->eeprom, true, (EEPROM_DRIVER_TX_BUF_SZ * page) + ADDR_FPGA_BITSTREA
 1159              		.loc 1 478 13 view .LVU376
 1160              		.loc 1 478 31 is_stmt 0 view .LVU377
 1161 015a 6068     		ldr	r0, [r4, #4]
 1162              		.loc 1 478 16 view .LVU378
 1163 015c EA01     		lsls	r2, r5, #7
 1164 015e 8023     		movs	r3, #128
 1165 0160 12B2     		sxth	r2, r2
 1166 0162 0121     		movs	r1, #1
 1167 0164 FFF7FEFF 		bl	EepromWrite
 1168              	.LVL115:
 1169              		.loc 1 478 15 view .LVU379
 1170 0168 0028     		cmp	r0, #0
 1171 016a F5D0     		beq	.L79
 1172              	.LVL116:
 1173              	.L78:
 479:Core/Src/nyan_os.c ****                 while(nos->eeprom->tx_inflight) {
 1174              		.loc 1 479 23 is_stmt 1 view .LVU380
 1175              		.loc 1 479 26 is_stmt 0 view .LVU381
 1176 016c 6368     		ldr	r3, [r4, #4]
 1177              		.loc 1 479 34 view .LVU382
 1178 016e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1179              		.loc 1 479 23 view .LVU383
 1180 0170 53B1     		cbz	r3, .L80
 480:Core/Src/nyan_os.c ****                     // Check for transmission success
 481:Core/Src/nyan_os.c ****                     if(nos->eeprom->tx_failed) {
 1181              		.loc 1 481 21 is_stmt 1 view .LVU384
 1182              		.loc 1 481 27 is_stmt 0 view .LVU385
 1183 0172 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/ccYEfmoV.s 			page 32


 1184              		.loc 1 481 35 view .LVU386
 1185 0174 93F80390 		ldrb	r9, [r3, #3]	@ zero_extendqisi2
 1186              	.LVL117:
 1187              		.loc 1 481 23 view .LVU387
 1188 0178 B9F1000F 		cmp	r9, #0
 1189 017c F6D0     		beq	.L78
 482:Core/Src/nyan_os.c ****                         nos->eeprom->tx_inflight = false;
 1190              		.loc 1 482 25 is_stmt 1 view .LVU388
 1191              		.loc 1 482 28 is_stmt 0 view .LVU389
 1192 017e 6268     		ldr	r2, [r4, #4]
 1193              		.loc 1 482 50 view .LVU390
 1194 0180 0023     		movs	r3, #0
 1195 0182 9370     		strb	r3, [r2, #2]
 483:Core/Src/nyan_os.c ****                         nos->eeprom->tx_failed = false;
 1196              		.loc 1 483 25 is_stmt 1 view .LVU391
 1197              		.loc 1 483 28 is_stmt 0 view .LVU392
 1198 0184 6268     		ldr	r2, [r4, #4]
 1199              		.loc 1 483 48 view .LVU393
 1200 0186 D370     		strb	r3, [r2, #3]
 484:Core/Src/nyan_os.c ****                         txRetry = true;
 1201              		.loc 1 484 25 is_stmt 1 view .LVU394
 1202              	.LVL118:
 485:Core/Src/nyan_os.c ****                         break; // Break from the while loop on success
 1203              		.loc 1 485 25 view .LVU395
 1204              	.L80:
 486:Core/Src/nyan_os.c ****                     }
 487:Core/Src/nyan_os.c ****                     txRetry = false;
 488:Core/Src/nyan_os.c ****                 }
 489:Core/Src/nyan_os.c ****                 if(nos->eeprom->tx_inflight == 0 && txRetry == false) {
 1205              		.loc 1 489 17 view .LVU396
 1206              		.loc 1 489 23 is_stmt 0 view .LVU397
 1207 0188 6368     		ldr	r3, [r4, #4]
 1208              		.loc 1 489 31 view .LVU398
 1209 018a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1210              		.loc 1 489 19 view .LVU399
 1211 018c 002B     		cmp	r3, #0
 1212 018e E3D1     		bne	.L79
 1213              		.loc 1 489 50 discriminator 1 view .LVU400
 1214 0190 B9F1000F 		cmp	r9, #0
 1215 0194 E0D1     		bne	.L79
 490:Core/Src/nyan_os.c ****                     txSuccess = true;
 1216              		.loc 1 490 31 view .LVU401
 1217 0196 0127     		movs	r7, #1
 1218              	.LVL119:
 1219              		.loc 1 490 31 view .LVU402
 1220 0198 DEE7     		b	.L79
 1221              	.LVL120:
 1222              	.L97:
 1223              		.loc 1 490 31 view .LVU403
 1224              	.LBE13:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1225              		.loc 1 467 44 is_stmt 1 discriminator 2 view .LVU404
 1226 019a 0135     		adds	r5, r5, #1
 1227              	.LVL121:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1228              		.loc 1 467 44 is_stmt 0 discriminator 2 view .LVU405
 1229 019c ADB2     		uxth	r5, r5
ARM GAS  /tmp/ccYEfmoV.s 			page 33


 1230              	.LVL122:
 1231              	.L74:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1232              		.loc 1 467 39 is_stmt 1 discriminator 1 view .LVU406
 1233 019e 4545     		cmp	r5, r8
 1234 01a0 04D2     		bcs	.L98
 1235              	.LBB16:
 468:Core/Src/nyan_os.c ****         bool txRetry = false;
 1236              		.loc 1 468 9 view .LVU407
 1237              	.LVL123:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1238              		.loc 1 469 9 view .LVU408
 471:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1239              		.loc 1 471 9 view .LVU409
 471:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1240              		.loc 1 471 30 is_stmt 0 view .LVU410
 1241 01a2 6068     		ldr	r0, [r4, #4]
 471:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1242              		.loc 1 471 9 view .LVU411
 1243 01a4 FFF7FEFF 		bl	EepromFlushTxBuff
 1244              	.LVL124:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1245              		.loc 1 473 9 is_stmt 1 view .LVU412
 1246              	.LBB15:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1247              		.loc 1 473 13 view .LVU413
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1248              		.loc 1 473 21 is_stmt 0 view .LVU414
 1249 01a8 0023     		movs	r3, #0
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1250              		.loc 1 473 9 view .LVU415
 1251 01aa D0E7     		b	.L75
 1252              	.LVL125:
 1253              	.L98:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1254              		.loc 1 473 9 view .LVU416
 1255              	.LBE15:
 1256              	.LBE16:
 1257              	.LBE12:
 491:Core/Src/nyan_os.c ****                     txRetry = false;
 492:Core/Src/nyan_os.c ****                 }
 493:Core/Src/nyan_os.c ****             }
 494:Core/Src/nyan_os.c ****         }
 495:Core/Src/nyan_os.c ****     }
 496:Core/Src/nyan_os.c ****     // Perform function cleanup maintenance
 497:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 1258              		.loc 1 497 5 is_stmt 1 view .LVU417
 1259              		.loc 1 497 27 is_stmt 0 view .LVU418
 1260 01ac 0025     		movs	r5, #0
 1261              	.LVL126:
 1262              		.loc 1 497 27 view .LVU419
 1263 01ae C4F8A452 		str	r5, [r4, #676]
 498:Core/Src/nyan_os.c ****     nos->bytes_received = 0;
 1264              		.loc 1 498 5 is_stmt 1 view .LVU420
 1265              		.loc 1 498 25 is_stmt 0 view .LVU421
 1266 01b2 C4F8A052 		str	r5, [r4, #672]
 499:Core/Src/nyan_os.c ****     free(nos->bytes_array);
ARM GAS  /tmp/ccYEfmoV.s 			page 34


 1267              		.loc 1 499 5 is_stmt 1 view .LVU422
 1268              		.loc 1 499 13 is_stmt 0 view .LVU423
 1269 01b6 D4F8A802 		ldr	r0, [r4, #680]
 1270              		.loc 1 499 5 view .LVU424
 1271 01ba FFF7FEFF 		bl	free
 1272              	.LVL127:
 500:Core/Src/nyan_os.c ****     nos->bytes_array = NULL;
 1273              		.loc 1 500 5 is_stmt 1 view .LVU425
 1274              		.loc 1 500 22 is_stmt 0 view .LVU426
 1275 01be C4F8A852 		str	r5, [r4, #680]
 501:Core/Src/nyan_os.c ****     nos->state = READY;
 1276              		.loc 1 501 5 is_stmt 1 view .LVU427
 1277              		.loc 1 501 16 is_stmt 0 view .LVU428
 1278 01c2 0120     		movs	r0, #1
 1279 01c4 2072     		strb	r0, [r4, #8]
 502:Core/Src/nyan_os.c ****     //NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_success[0], sizeof(nyan_keys_write_bits
 503:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1280              		.loc 1 503 5 is_stmt 1 view .LVU429
 1281              	.LVL128:
 1282              	.L64:
 504:Core/Src/nyan_os.c **** }
 1283              		.loc 1 504 1 is_stmt 0 view .LVU430
 1284 01c6 3BB0     		add	sp, sp, #236
 1285              		.cfi_def_cfa_offset 28
 1286              		@ sp needed
 1287 01c8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1288              	.LVL129:
 1289              	.L85:
 1290              		.cfi_def_cfa_offset 0
 1291              		.cfi_restore 4
 1292              		.cfi_restore 5
 1293              		.cfi_restore 6
 1294              		.cfi_restore 7
 1295              		.cfi_restore 8
 1296              		.cfi_restore 9
 1297              		.cfi_restore 14
 390:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 1298              		.loc 1 390 16 view .LVU431
 1299 01cc 0020     		movs	r0, #0
 1300              	.LVL130:
 1301              		.loc 1 504 1 view .LVU432
 1302 01ce 7047     		bx	lr
 1303              	.LVL131:
 1304              	.L87:
 1305              		.cfi_def_cfa_offset 264
 1306              		.cfi_offset 4, -28
 1307              		.cfi_offset 5, -24
 1308              		.cfi_offset 6, -20
 1309              		.cfi_offset 7, -16
 1310              		.cfi_offset 8, -12
 1311              		.cfi_offset 9, -8
 1312              		.cfi_offset 14, -4
 464:Core/Src/nyan_os.c **** 
 1313              		.loc 1 464 16 view .LVU433
 1314 01d0 0020     		movs	r0, #0
 1315 01d2 F8E7     		b	.L64
 1316              	.L100:
ARM GAS  /tmp/ccYEfmoV.s 			page 35


 1317              		.align	2
 1318              	.L99:
 1319 01d4 00000000 		.word	nyan_keys_write_bitstream_error_size
 1320 01d8 00000000 		.word	nyan_keys_write_bitstream_error_size_tx_busy
 1321 01dc 00000000 		.word	.LC0
 1322 01e0 00000000 		.word	nyan_keys_newline
 1323              		.cfi_endproc
 1324              	.LFE156:
 1326              		.section	.text.NyanExecute,"ax",%progbits
 1327              		.align	1
 1328              		.global	NyanExecute
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1333              	NyanExecute:
 1334              	.LVL132:
 1335              	.LFB152:
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1336              		.loc 1 222 46 is_stmt 1 view -0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1340              		.loc 1 222 46 is_stmt 0 view .LVU435
 1341 0000 70B5     		push	{r4, r5, r6, lr}
 1342              		.cfi_def_cfa_offset 16
 1343              		.cfi_offset 4, -16
 1344              		.cfi_offset 5, -12
 1345              		.cfi_offset 6, -8
 1346              		.cfi_offset 14, -4
 1347 0002 0446     		mov	r4, r0
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1348              		.loc 1 223 5 is_stmt 1 view .LVU436
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1349              		.loc 1 223 15 is_stmt 0 view .LVU437
 1350 0004 457A     		ldrb	r5, [r0, #9]	@ zero_extendqisi2
 1351 0006 EDB2     		uxtb	r5, r5
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1352              		.loc 1 223 5 view .LVU438
 1353 0008 042D     		cmp	r5, #4
 1354 000a 4DD8     		bhi	.L102
 1355 000c DFE805F0 		tbb	[pc, r5]
 1356              	.L104:
 1357 0010 03       		.byte	(.L108-.L104)/2
 1358 0011 23       		.byte	(.L107-.L104)/2
 1359 0012 13       		.byte	(.L106-.L104)/2
 1360 0013 3A       		.byte	(.L105-.L104)/2
 1361 0014 50       		.byte	(.L109-.L104)/2
 1362 0015 00       		.p2align 1
 1363              	.L108:
 225:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1364              		.loc 1 225 13 is_stmt 1 view .LVU439
 1365 0016 FFF7FEFF 		bl	NyanExeGetinfo
 1366              	.LVL133:
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1367              		.loc 1 226 13 view .LVU440
 1368 001a 0322     		movs	r2, #3
ARM GAS  /tmp/ccYEfmoV.s 			page 36


 1369 001c 2649     		ldr	r1, .L111
 1370 001e 2046     		mov	r0, r4
 1371 0020 FFF7FEFF 		bl	NyanPrint
 1372              	.LVL134:
 227:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1373              		.loc 1 227 13 view .LVU441
 1374 0024 0F22     		movs	r2, #15
 1375 0026 2549     		ldr	r1, .L111+4
 1376 0028 2046     		mov	r0, r4
 1377 002a FFF7FEFF 		bl	NyanPrint
 1378              	.LVL135:
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1379              		.loc 1 228 13 view .LVU442
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1380              		.loc 1 228 22 is_stmt 0 view .LVU443
 1381 002e 0423     		movs	r3, #4
 1382 0030 6372     		strb	r3, [r4, #9]
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1383              		.loc 1 229 13 is_stmt 1 view .LVU444
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1384              		.loc 1 229 20 is_stmt 0 view .LVU445
 1385 0032 0125     		movs	r5, #1
 1386 0034 3DE0     		b	.L103
 1387              	.LVL136:
 1388              	.L106:
 231:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 1389              		.loc 1 231 13 is_stmt 1 view .LVU446
 1390 0036 FFF7FEFF 		bl	NyanExeSetOwner
 1391              	.LVL137:
 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1392              		.loc 1 232 13 view .LVU447
 1393 003a 2C22     		movs	r2, #44
 1394 003c 2049     		ldr	r1, .L111+8
 1395 003e 2046     		mov	r0, r4
 1396 0040 FFF7FEFF 		bl	NyanPrint
 1397              	.LVL138:
 233:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1398              		.loc 1 233 13 view .LVU448
 1399 0044 0F22     		movs	r2, #15
 1400 0046 1D49     		ldr	r1, .L111+4
 1401 0048 2046     		mov	r0, r4
 1402 004a FFF7FEFF 		bl	NyanPrint
 1403              	.LVL139:
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1404              		.loc 1 234 13 view .LVU449
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1405              		.loc 1 234 22 is_stmt 0 view .LVU450
 1406 004e 0423     		movs	r3, #4
 1407 0050 6372     		strb	r3, [r4, #9]
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1408              		.loc 1 235 13 is_stmt 1 view .LVU451
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1409              		.loc 1 235 20 is_stmt 0 view .LVU452
 1410 0052 0125     		movs	r5, #1
 1411 0054 2DE0     		b	.L103
 1412              	.LVL140:
 1413              	.L107:
ARM GAS  /tmp/ccYEfmoV.s 			page 37


 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1414              		.loc 1 237 13 is_stmt 1 view .LVU453
 1415 0056 1B4E     		ldr	r6, .L111+12
 1416 0058 0021     		movs	r1, #0
 1417 005a 3046     		mov	r0, r6
 1418              	.LVL141:
 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1419              		.loc 1 237 13 is_stmt 0 view .LVU454
 1420 005c FFF7FEFF 		bl	HAL_TIM_OC_Stop_IT
 1421              	.LVL142:
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1422              		.loc 1 238 13 is_stmt 1 view .LVU455
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1423              		.loc 1 238 34 is_stmt 0 view .LVU456
 1424 0060 0123     		movs	r3, #1
 1425 0062 A372     		strb	r3, [r4, #10]
 239:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1426              		.loc 1 239 13 is_stmt 1 view .LVU457
 1427 0064 2046     		mov	r0, r4
 1428 0066 FFF7FEFF 		bl	NyanExeWriteFpgaBitstream
 1429              	.LVL143:
 240:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 1430              		.loc 1 240 13 view .LVU458
 1431 006a 0F22     		movs	r2, #15
 1432 006c 1349     		ldr	r1, .L111+4
 1433 006e 2046     		mov	r0, r4
 1434 0070 FFF7FEFF 		bl	NyanPrint
 1435              	.LVL144:
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1436              		.loc 1 241 13 view .LVU459
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1437              		.loc 1 241 34 is_stmt 0 view .LVU460
 1438 0074 0021     		movs	r1, #0
 1439 0076 A172     		strb	r1, [r4, #10]
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1440              		.loc 1 242 13 is_stmt 1 view .LVU461
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1441              		.loc 1 242 22 is_stmt 0 view .LVU462
 1442 0078 0423     		movs	r3, #4
 1443 007a 6372     		strb	r3, [r4, #9]
 243:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1444              		.loc 1 243 13 is_stmt 1 view .LVU463
 1445 007c 3046     		mov	r0, r6
 1446 007e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1447              	.LVL145:
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1448              		.loc 1 244 13 view .LVU464
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1449              		.loc 1 244 20 is_stmt 0 view .LVU465
 1450 0082 16E0     		b	.L103
 1451              	.LVL146:
 1452              	.L105:
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1453              		.loc 1 248 13 is_stmt 1 view .LVU466
 1454 0084 2022     		movs	r2, #32
 1455 0086 1049     		ldr	r1, .L111+16
 1456 0088 FFF7FEFF 		bl	NyanPrint
ARM GAS  /tmp/ccYEfmoV.s 			page 38


 1457              	.LVL147:
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1458              		.loc 1 249 13 view .LVU467
 1459 008c 0322     		movs	r2, #3
 1460 008e 0A49     		ldr	r1, .L111
 1461 0090 2046     		mov	r0, r4
 1462 0092 FFF7FEFF 		bl	NyanPrint
 1463              	.LVL148:
 250:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1464              		.loc 1 250 13 view .LVU468
 1465 0096 0F22     		movs	r2, #15
 1466 0098 0849     		ldr	r1, .L111+4
 1467 009a 2046     		mov	r0, r4
 1468 009c FFF7FEFF 		bl	NyanPrint
 1469              	.LVL149:
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1470              		.loc 1 251 13 view .LVU469
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1471              		.loc 1 251 22 is_stmt 0 view .LVU470
 1472 00a0 0423     		movs	r3, #4
 1473 00a2 6372     		strb	r3, [r4, #9]
 252:Core/Src/nyan_os.c ****         default:
 1474              		.loc 1 252 13 is_stmt 1 view .LVU471
 252:Core/Src/nyan_os.c ****         default:
 1475              		.loc 1 252 20 is_stmt 0 view .LVU472
 1476 00a4 0125     		movs	r5, #1
 1477 00a6 04E0     		b	.L103
 1478              	.LVL150:
 1479              	.L102:
 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1480              		.loc 1 255 13 is_stmt 1 view .LVU473
 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1481              		.loc 1 255 22 is_stmt 0 view .LVU474
 1482 00a8 0423     		movs	r3, #4
 1483 00aa 4372     		strb	r3, [r0, #9]
 256:Core/Src/nyan_os.c ****     }
 1484              		.loc 1 256 13 is_stmt 1 view .LVU475
 256:Core/Src/nyan_os.c ****     }
 1485              		.loc 1 256 20 is_stmt 0 view .LVU476
 1486 00ac 0025     		movs	r5, #0
 1487 00ae 00E0     		b	.L103
 1488              	.L109:
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1489              		.loc 1 223 5 view .LVU477
 1490 00b0 0125     		movs	r5, #1
 1491              	.LVL151:
 1492              	.L103:
 258:Core/Src/nyan_os.c **** 
 1493              		.loc 1 258 1 view .LVU478
 1494 00b2 2846     		mov	r0, r5
 1495 00b4 70BD     		pop	{r4, r5, r6, pc}
 1496              	.LVL152:
 1497              	.L112:
 258:Core/Src/nyan_os.c **** 
 1498              		.loc 1 258 1 view .LVU479
 1499 00b6 00BF     		.align	2
 1500              	.L111:
ARM GAS  /tmp/ccYEfmoV.s 			page 39


 1501 00b8 00000000 		.word	nyan_keys_newline
 1502 00bc 00000000 		.word	nyan_keys_path_text
 1503 00c0 00000000 		.word	nyan_keys_set_owner_success
 1504 00c4 00000000 		.word	htim8
 1505 00c8 00000000 		.word	nyan_keys_unknown_command
 1506              		.cfi_endproc
 1507              	.LFE152:
 1509              		.section	.text.FreeNyanCommandArgs,"ax",%progbits
 1510              		.align	1
 1511              		.global	FreeNyanCommandArgs
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1516              	FreeNyanCommandArgs:
 1517              	.LVL153:
 1518              	.LFB157:
 505:Core/Src/nyan_os.c **** 
 506:Core/Src/nyan_os.c **** void FreeNyanCommandArgs(volatile NyanOS* nos)
 507:Core/Src/nyan_os.c **** {
 1519              		.loc 1 507 1 is_stmt 1 view -0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 508:Core/Src/nyan_os.c ****     if (!nos) {
 1523              		.loc 1 508 5 view .LVU481
 1524              		.loc 1 508 8 is_stmt 0 view .LVU482
 1525 0000 C0B1     		cbz	r0, .L119
 507:Core/Src/nyan_os.c ****     if (!nos) {
 1526              		.loc 1 507 1 view .LVU483
 1527 0002 70B5     		push	{r4, r5, r6, lr}
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 1533 0004 0646     		mov	r6, r0
 1534              	.LBB17:
 509:Core/Src/nyan_os.c ****         return;
 510:Core/Src/nyan_os.c ****     }
 511:Core/Src/nyan_os.c **** 
 512:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; i++) {
 1535              		.loc 1 512 14 view .LVU484
 1536 0006 0024     		movs	r4, #0
 1537 0008 00E0     		b	.L115
 1538              	.LVL154:
 1539              	.L116:
 1540              		.loc 1 512 46 is_stmt 1 discriminator 2 view .LVU485
 1541 000a 0134     		adds	r4, r4, #1
 1542              	.LVL155:
 1543              	.L115:
 1544              		.loc 1 512 23 discriminator 1 view .LVU486
 1545 000c 092C     		cmp	r4, #9
 1546 000e 10DC     		bgt	.L122
 513:Core/Src/nyan_os.c ****         if (nos->command_arg_buffer[i] != NULL) {
 1547              		.loc 1 513 9 view .LVU487
 1548              		.loc 1 513 36 is_stmt 0 view .LVU488
 1549 0010 04F1AA03 		add	r3, r4, #170
ARM GAS  /tmp/ccYEfmoV.s 			page 40


 1550 0014 06EB8303 		add	r3, r6, r3, lsl #2
 1551 0018 5B68     		ldr	r3, [r3, #4]
 1552              		.loc 1 513 12 view .LVU489
 1553 001a 002B     		cmp	r3, #0
 1554 001c F5D0     		beq	.L116
 514:Core/Src/nyan_os.c ****             free(nos->command_arg_buffer[i]); 
 1555              		.loc 1 514 13 is_stmt 1 view .LVU490
 1556              		.loc 1 514 41 is_stmt 0 view .LVU491
 1557 001e 04F1AA05 		add	r5, r4, #170
 1558 0022 06EB8505 		add	r5, r6, r5, lsl #2
 1559 0026 6868     		ldr	r0, [r5, #4]
 1560              		.loc 1 514 13 view .LVU492
 1561 0028 FFF7FEFF 		bl	free
 1562              	.LVL156:
 515:Core/Src/nyan_os.c ****             nos->command_arg_buffer[i] = NULL;
 1563              		.loc 1 515 13 is_stmt 1 view .LVU493
 1564              		.loc 1 515 40 is_stmt 0 view .LVU494
 1565 002c 0023     		movs	r3, #0
 1566 002e 6B60     		str	r3, [r5, #4]
 1567 0030 EBE7     		b	.L116
 1568              	.L122:
 1569              		.loc 1 515 40 view .LVU495
 1570              	.LBE17:
 516:Core/Src/nyan_os.c ****         }
 517:Core/Src/nyan_os.c ****     }
 518:Core/Src/nyan_os.c **** }
 1571              		.loc 1 518 1 view .LVU496
 1572 0032 70BD     		pop	{r4, r5, r6, pc}
 1573              	.LVL157:
 1574              	.L119:
 1575              		.cfi_def_cfa_offset 0
 1576              		.cfi_restore 4
 1577              		.cfi_restore 5
 1578              		.cfi_restore 6
 1579              		.cfi_restore 14
 1580              		.loc 1 518 1 view .LVU497
 1581 0034 7047     		bx	lr
 1582              		.cfi_endproc
 1583              	.LFE157:
 1585              		.section	.rodata.NyanDecodeArgs.str1.4,"aMS",%progbits,1
 1586              		.align	2
 1587              	.LC1:
 1588 0000 2000     		.ascii	" \000"
 1589              		.section	.text.NyanDecodeArgs,"ax",%progbits
 1590              		.align	1
 1591              		.global	NyanDecodeArgs
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1596              	NyanDecodeArgs:
 1597              	.LVL158:
 1598              	.LFB153:
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1599              		.loc 1 261 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccYEfmoV.s 			page 41


 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1603              		.loc 1 262 5 view .LVU499
 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1604              		.loc 1 262 8 is_stmt 0 view .LVU500
 1605 0000 0028     		cmp	r0, #0
 1606 0002 46D0     		beq	.L131
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1607              		.loc 1 261 1 view .LVU501
 1608 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1609              		.cfi_def_cfa_offset 24
 1610              		.cfi_offset 3, -24
 1611              		.cfi_offset 4, -20
 1612              		.cfi_offset 5, -16
 1613              		.cfi_offset 6, -12
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0006 0646     		mov	r6, r0
 267:Core/Src/nyan_os.c **** 
 1617              		.loc 1 267 5 is_stmt 1 view .LVU502
 1618 0008 FFF7FEFF 		bl	FreeNyanCommandArgs
 1619              	.LVL159:
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1620              		.loc 1 269 5 view .LVU503
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1621              		.loc 1 269 44 is_stmt 0 view .LVU504
 1622 000c 0025     		movs	r5, #0
 1623 000e 86F88B50 		strb	r5, [r6, #139]
 270:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 1624              		.loc 1 270 5 is_stmt 1 view .LVU505
 1625              	.LVL160:
 271:Core/Src/nyan_os.c **** 
 1626              		.loc 1 271 5 view .LVU506
 271:Core/Src/nyan_os.c **** 
 1627              		.loc 1 271 34 is_stmt 0 view .LVU507
 1628 0012 06F10B07 		add	r7, r6, #11
 271:Core/Src/nyan_os.c **** 
 1629              		.loc 1 271 19 view .LVU508
 1630 0016 2049     		ldr	r1, .L140
 1631 0018 3846     		mov	r0, r7
 1632 001a FFF7FEFF 		bl	strtok
 1633              	.LVL161:
 1634 001e 0446     		mov	r4, r0
 1635              	.LVL162:
 273:Core/Src/nyan_os.c ****     while (token != NULL) {
 1636              		.loc 1 273 5 is_stmt 1 view .LVU509
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1637              		.loc 1 274 5 view .LVU510
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1638              		.loc 1 274 11 is_stmt 0 view .LVU511
 1639 0020 12E0     		b	.L125
 1640              	.LVL163:
 1641              	.L129:
 1642              	.LBB18:
 1643              	.LBB19:
 281:Core/Src/nyan_os.c ****                 }
 1644              		.loc 1 281 21 is_stmt 1 discriminator 3 view .LVU512
 281:Core/Src/nyan_os.c ****                 }
ARM GAS  /tmp/ccYEfmoV.s 			page 42


 1645              		.loc 1 281 49 is_stmt 0 discriminator 3 view .LVU513
 1646 0022 04F1AA03 		add	r3, r4, #170
 1647 0026 06EB8303 		add	r3, r6, r3, lsl #2
 1648 002a 5868     		ldr	r0, [r3, #4]
 281:Core/Src/nyan_os.c ****                 }
 1649              		.loc 1 281 21 discriminator 3 view .LVU514
 1650 002c FFF7FEFF 		bl	free
 1651              	.LVL164:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1652              		.loc 1 280 48 is_stmt 1 discriminator 3 view .LVU515
 1653 0030 0134     		adds	r4, r4, #1
 1654              	.LVL165:
 1655              	.L127:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1656              		.loc 1 280 35 discriminator 1 view .LVU516
 1657 0032 A542     		cmp	r5, r4
 1658 0034 F5DC     		bgt	.L129
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1659              		.loc 1 280 35 is_stmt 0 discriminator 1 view .LVU517
 1660              	.LBE19:
 283:Core/Src/nyan_os.c ****             }
 1661              		.loc 1 283 24 view .LVU518
 1662 0036 0020     		movs	r0, #0
 1663 0038 2AE0     		b	.L124
 1664              	.LVL166:
 1665              	.L139:
 1666              	.LBB20:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1667              		.loc 1 280 26 view .LVU519
 1668 003a 0024     		movs	r4, #0
 1669              	.LVL167:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1670              		.loc 1 280 26 view .LVU520
 1671 003c F9E7     		b	.L127
 1672              	.LVL168:
 1673              	.L126:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1674              		.loc 1 280 26 view .LVU521
 1675              	.LBE20:
 1676              	.LBE18:
 288:Core/Src/nyan_os.c ****     }
 1677              		.loc 1 288 9 is_stmt 1 view .LVU522
 288:Core/Src/nyan_os.c ****     }
 1678              		.loc 1 288 17 is_stmt 0 view .LVU523
 1679 003e 1649     		ldr	r1, .L140
 1680 0040 0020     		movs	r0, #0
 1681 0042 FFF7FEFF 		bl	strtok
 1682              	.LVL169:
 1683 0046 0446     		mov	r4, r0
 1684              	.LVL170:
 1685              	.L125:
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1686              		.loc 1 274 18 is_stmt 1 view .LVU524
 1687 0048 CCB1     		cbz	r4, .L138
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1688              		.loc 1 275 9 view .LVU525
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
ARM GAS  /tmp/ccYEfmoV.s 			page 43


 1689              		.loc 1 275 12 is_stmt 0 view .LVU526
 1690 004a 092D     		cmp	r5, #9
 1691 004c F7DC     		bgt	.L126
 1692              	.LBB21:
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1693              		.loc 1 276 13 is_stmt 1 view .LVU527
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1694              		.loc 1 276 34 is_stmt 0 view .LVU528
 1695 004e 2046     		mov	r0, r4
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1696              		.loc 1 276 34 view .LVU529
 1697 0050 FFF7FEFF 		bl	strlen
 1698              	.LVL171:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1699              		.loc 1 277 13 is_stmt 1 view .LVU530
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1700              		.loc 1 277 50 is_stmt 0 view .LVU531
 1701 0054 0130     		adds	r0, r0, #1
 1702              	.LVL172:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1703              		.loc 1 277 50 view .LVU532
 1704 0056 FFF7FEFF 		bl	malloc
 1705              	.LVL173:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1706              		.loc 1 277 48 view .LVU533
 1707 005a 05F1AA03 		add	r3, r5, #170
 1708 005e 06EB8303 		add	r3, r6, r3, lsl #2
 1709 0062 5860     		str	r0, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1710              		.loc 1 278 13 is_stmt 1 view .LVU534
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1711              		.loc 1 278 40 is_stmt 0 view .LVU535
 1712 0064 5B68     		ldr	r3, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1713              		.loc 1 278 16 view .LVU536
 1714 0066 002B     		cmp	r3, #0
 1715 0068 E7D0     		beq	.L139
 285:Core/Src/nyan_os.c ****             arg_count++;
 1716              		.loc 1 285 13 is_stmt 1 view .LVU537
 285:Core/Src/nyan_os.c ****             arg_count++;
 1717              		.loc 1 285 51 is_stmt 0 view .LVU538
 1718 006a 05F1AA03 		add	r3, r5, #170
 1719 006e 06EB8303 		add	r3, r6, r3, lsl #2
 1720 0072 5868     		ldr	r0, [r3, #4]
 285:Core/Src/nyan_os.c ****             arg_count++;
 1721              		.loc 1 285 13 view .LVU539
 1722 0074 2146     		mov	r1, r4
 1723 0076 FFF7FEFF 		bl	strcpy
 1724              	.LVL174:
 286:Core/Src/nyan_os.c ****         }
 1725              		.loc 1 286 13 is_stmt 1 view .LVU540
 286:Core/Src/nyan_os.c ****         }
 1726              		.loc 1 286 22 is_stmt 0 view .LVU541
 1727 007a 0135     		adds	r5, r5, #1
 1728              	.LVL175:
 286:Core/Src/nyan_os.c ****         }
 1729              		.loc 1 286 22 view .LVU542
ARM GAS  /tmp/ccYEfmoV.s 			page 44


 1730 007c DFE7     		b	.L126
 1731              	.LVL176:
 1732              	.L138:
 286:Core/Src/nyan_os.c ****         }
 1733              		.loc 1 286 22 view .LVU543
 1734              	.LBE21:
 291:Core/Src/nyan_os.c **** 
 1735              		.loc 1 291 5 is_stmt 1 view .LVU544
 291:Core/Src/nyan_os.c **** 
 1736              		.loc 1 291 34 is_stmt 0 view .LVU545
 1737 007e EDB2     		uxtb	r5, r5
 1738              	.LVL177:
 291:Core/Src/nyan_os.c **** 
 1739              		.loc 1 291 34 view .LVU546
 1740 0080 86F88D50 		strb	r5, [r6, #141]
 294:Core/Src/nyan_os.c **** 
 1741              		.loc 1 294 5 is_stmt 1 view .LVU547
 1742 0084 8122     		movs	r2, #129
 1743 0086 0021     		movs	r1, #0
 1744 0088 3846     		mov	r0, r7
 1745              	.LVL178:
 294:Core/Src/nyan_os.c **** 
 1746              		.loc 1 294 5 is_stmt 0 view .LVU548
 1747 008a FFF7FEFF 		bl	memset
 1748              	.LVL179:
 296:Core/Src/nyan_os.c **** }
 1749              		.loc 1 296 5 is_stmt 1 view .LVU549
 296:Core/Src/nyan_os.c **** }
 1750              		.loc 1 296 12 is_stmt 0 view .LVU550
 1751 008e 0120     		movs	r0, #1
 1752              	.LVL180:
 1753              	.L124:
 297:Core/Src/nyan_os.c **** 
 1754              		.loc 1 297 1 view .LVU551
 1755 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1756              	.LVL181:
 1757              	.L131:
 1758              		.cfi_def_cfa_offset 0
 1759              		.cfi_restore 3
 1760              		.cfi_restore 4
 1761              		.cfi_restore 5
 1762              		.cfi_restore 6
 1763              		.cfi_restore 7
 1764              		.cfi_restore 14
 263:Core/Src/nyan_os.c ****     }
 1765              		.loc 1 263 16 view .LVU552
 1766 0092 0020     		movs	r0, #0
 1767              	.LVL182:
 297:Core/Src/nyan_os.c **** 
 1768              		.loc 1 297 1 view .LVU553
 1769 0094 7047     		bx	lr
 1770              	.L141:
 1771 0096 00BF     		.align	2
 1772              	.L140:
 1773 0098 00000000 		.word	.LC1
 1774              		.cfi_endproc
 1775              	.LFE153:
ARM GAS  /tmp/ccYEfmoV.s 			page 45


 1777              		.section	.text.NyanDecode,"ax",%progbits
 1778              		.align	1
 1779              		.global	NyanDecode
 1780              		.syntax unified
 1781              		.thumb
 1782              		.thumb_func
 1784              	NyanDecode:
 1785              	.LVL183:
 1786              	.LFB151:
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1787              		.loc 1 201 1 is_stmt 1 view -0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1791              		.loc 1 201 1 is_stmt 0 view .LVU555
 1792 0000 70B5     		push	{r4, r5, r6, lr}
 1793              		.cfi_def_cfa_offset 16
 1794              		.cfi_offset 4, -16
 1795              		.cfi_offset 5, -12
 1796              		.cfi_offset 6, -8
 1797              		.cfi_offset 14, -4
 1798 0002 0546     		mov	r5, r0
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1799              		.loc 1 203 5 is_stmt 1 view .LVU556
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1800              		.loc 1 203 14 is_stmt 0 view .LVU557
 1801 0004 0423     		movs	r3, #4
 1802 0006 4372     		strb	r3, [r0, #9]
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1803              		.loc 1 205 5 is_stmt 1 view .LVU558
 1804              	.LBB22:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1805              		.loc 1 205 10 view .LVU559
 1806              	.LVL184:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1807              		.loc 1 205 18 is_stmt 0 view .LVU560
 1808 0008 0024     		movs	r4, #0
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1809              		.loc 1 205 5 view .LVU561
 1810 000a 03E0     		b	.L143
 1811              	.LVL185:
 1812              	.L144:
 1813              	.LBB23:
 214:Core/Src/nyan_os.c ****         }
 1814              		.loc 1 214 13 is_stmt 1 discriminator 2 view .LVU562
 214:Core/Src/nyan_os.c ****         }
 1815              		.loc 1 214 22 is_stmt 0 discriminator 2 view .LVU563
 1816 000c 0323     		movs	r3, #3
 1817 000e 6B72     		strb	r3, [r5, #9]
 1818              	.LBE23:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1819              		.loc 1 205 61 is_stmt 1 discriminator 2 view .LVU564
 1820 0010 0134     		adds	r4, r4, #1
 1821              	.LVL186:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1822              		.loc 1 205 61 is_stmt 0 discriminator 2 view .LVU565
ARM GAS  /tmp/ccYEfmoV.s 			page 46


 1823 0012 E4B2     		uxtb	r4, r4
 1824              	.LVL187:
 1825              	.L143:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1826              		.loc 1 205 39 is_stmt 1 discriminator 1 view .LVU566
 1827 0014 022C     		cmp	r4, #2
 1828 0016 13D8     		bhi	.L145
 1829              	.LBB24:
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1830              		.loc 1 206 9 view .LVU567
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1831              		.loc 1 206 50 is_stmt 0 view .LVU568
 1832 0018 0A4B     		ldr	r3, .L148
 1833 001a 53F82460 		ldr	r6, [r3, r4, lsl #2]
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1834              		.loc 1 206 30 view .LVU569
 1835 001e 3046     		mov	r0, r6
 1836 0020 FFF7FEFF 		bl	strlen
 1837              	.LVL188:
 1838 0024 0246     		mov	r2, r0
 1839              	.LVL189:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1840              		.loc 1 208 9 is_stmt 1 view .LVU570
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1841              		.loc 1 208 12 is_stmt 0 view .LVU571
 1842 0026 8028     		cmp	r0, #128
 1843 0028 F0D8     		bhi	.L144
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1844              		.loc 1 208 49 discriminator 1 view .LVU572
 1845 002a 3146     		mov	r1, r6
 1846 002c 05F10B00 		add	r0, r5, #11
 1847              	.LVL190:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1848              		.loc 1 208 49 discriminator 1 view .LVU573
 1849 0030 FFF7FEFF 		bl	memcmp
 1850              	.LVL191:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1851              		.loc 1 208 46 discriminator 1 view .LVU574
 1852 0034 0028     		cmp	r0, #0
 1853 0036 E9D1     		bne	.L144
 209:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 1854              		.loc 1 209 13 is_stmt 1 view .LVU575
 1855 0038 2846     		mov	r0, r5
 1856 003a FFF7FEFF 		bl	NyanDecodeArgs
 1857              	.LVL192:
 211:Core/Src/nyan_os.c ****             break;
 1858              		.loc 1 211 13 view .LVU576
 211:Core/Src/nyan_os.c ****             break;
 1859              		.loc 1 211 22 is_stmt 0 view .LVU577
 1860 003e 6C72     		strb	r4, [r5, #9]
 212:Core/Src/nyan_os.c ****         } else {
 1861              		.loc 1 212 13 is_stmt 1 view .LVU578
 1862              	.LVL193:
 1863              	.L145:
 212:Core/Src/nyan_os.c ****         } else {
 1864              		.loc 1 212 13 is_stmt 0 view .LVU579
 1865              	.LBE24:
ARM GAS  /tmp/ccYEfmoV.s 			page 47


 1866              	.LBE22:
 219:Core/Src/nyan_os.c **** }
 1867              		.loc 1 219 5 is_stmt 1 view .LVU580
 220:Core/Src/nyan_os.c **** 
 1868              		.loc 1 220 1 is_stmt 0 view .LVU581
 1869 0040 0120     		movs	r0, #1
 1870 0042 70BD     		pop	{r4, r5, r6, pc}
 1871              	.LVL194:
 1872              	.L149:
 220:Core/Src/nyan_os.c **** 
 1873              		.loc 1 220 1 view .LVU582
 1874              		.align	2
 1875              	.L148:
 1876 0044 00000000 		.word	nyan_commands
 1877              		.cfi_endproc
 1878              	.LFE151:
 1880              		.section	.text.FreeNyanString,"ax",%progbits
 1881              		.align	1
 1882              		.global	FreeNyanString
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1887              	FreeNyanString:
 1888              	.LVL195:
 1889              	.LFB158:
 519:Core/Src/nyan_os.c **** 
 520:Core/Src/nyan_os.c **** void FreeNyanString(NyanString* nyanString)
 521:Core/Src/nyan_os.c **** {
 1890              		.loc 1 521 1 is_stmt 1 view -0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		.loc 1 521 1 is_stmt 0 view .LVU584
 1895 0000 10B5     		push	{r4, lr}
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 4, -8
 1898              		.cfi_offset 14, -4
 1899 0002 0446     		mov	r4, r0
 522:Core/Src/nyan_os.c ****     // Clear the memory contents
 523:Core/Src/nyan_os.c ****     for (uint32_t i = 0; i < nyanString->size; ++i) {
 1900              		.loc 1 523 5 is_stmt 1 view .LVU585
 1901              	.LBB25:
 1902              		.loc 1 523 10 view .LVU586
 1903              	.LVL196:
 1904              		.loc 1 523 19 is_stmt 0 view .LVU587
 1905 0004 0023     		movs	r3, #0
 1906              		.loc 1 523 5 view .LVU588
 1907 0006 03E0     		b	.L151
 1908              	.LVL197:
 1909              	.L152:
 524:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1910              		.loc 1 524 9 is_stmt 1 discriminator 3 view .LVU589
 1911              		.loc 1 524 19 is_stmt 0 discriminator 3 view .LVU590
 1912 0008 2268     		ldr	r2, [r4]
 1913              		.loc 1 524 32 discriminator 3 view .LVU591
 1914 000a 0021     		movs	r1, #0
 1915 000c D154     		strb	r1, [r2, r3]
ARM GAS  /tmp/ccYEfmoV.s 			page 48


 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1916              		.loc 1 523 48 is_stmt 1 discriminator 3 view .LVU592
 1917 000e 0133     		adds	r3, r3, #1
 1918              	.LVL198:
 1919              	.L151:
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1920              		.loc 1 523 28 discriminator 1 view .LVU593
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1921              		.loc 1 523 40 is_stmt 0 discriminator 1 view .LVU594
 1922 0010 6268     		ldr	r2, [r4, #4]
 523:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1923              		.loc 1 523 28 discriminator 1 view .LVU595
 1924 0012 9A42     		cmp	r2, r3
 1925 0014 F8D8     		bhi	.L152
 1926              	.LBE25:
 525:Core/Src/nyan_os.c ****     }
 526:Core/Src/nyan_os.c ****     // Free up the pointer and memory
 527:Core/Src/nyan_os.c ****     free(nyanString->p_array);
 1927              		.loc 1 527 5 is_stmt 1 view .LVU596
 1928 0016 2068     		ldr	r0, [r4]
 1929              	.LVL199:
 1930              		.loc 1 527 5 is_stmt 0 view .LVU597
 1931 0018 FFF7FEFF 		bl	free
 1932              	.LVL200:
 528:Core/Src/nyan_os.c ****     nyanString->p_array = NULL;
 1933              		.loc 1 528 5 is_stmt 1 view .LVU598
 1934              		.loc 1 528 25 is_stmt 0 view .LVU599
 1935 001c 0023     		movs	r3, #0
 1936 001e 2360     		str	r3, [r4]
 529:Core/Src/nyan_os.c ****     nyanString->size = 0;
 1937              		.loc 1 529 5 is_stmt 1 view .LVU600
 1938              		.loc 1 529 22 is_stmt 0 view .LVU601
 1939 0020 6360     		str	r3, [r4, #4]
 530:Core/Src/nyan_os.c **** }
 1940              		.loc 1 530 1 view .LVU602
 1941 0022 10BD     		pop	{r4, pc}
 1942              		.loc 1 530 1 view .LVU603
 1943              		.cfi_endproc
 1944              	.LFE158:
 1946              		.section	.text.ClearNyanCommandBuffer,"ax",%progbits
 1947              		.align	1
 1948              		.global	ClearNyanCommandBuffer
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1953              	ClearNyanCommandBuffer:
 1954              	.LVL201:
 1955              	.LFB159:
 531:Core/Src/nyan_os.c **** 
 532:Core/Src/nyan_os.c **** void ClearNyanCommandBuffer(volatile NyanOS* nos)
 533:Core/Src/nyan_os.c **** {
 1956              		.loc 1 533 1 is_stmt 1 view -0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              		.loc 1 533 1 is_stmt 0 view .LVU605
 1961 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccYEfmoV.s 			page 49


 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 3, -8
 1964              		.cfi_offset 14, -4
 534:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1965              		.loc 1 534 5 is_stmt 1 view .LVU606
 1966              		.loc 1 534 29 is_stmt 0 view .LVU607
 1967 0002 0021     		movs	r1, #0
 1968 0004 80F88C10 		strb	r1, [r0, #140]
 535:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 1969              		.loc 1 535 5 is_stmt 1 view .LVU608
 1970 0008 8122     		movs	r2, #129
 1971 000a 0B30     		adds	r0, r0, #11
 1972              	.LVL202:
 1973              		.loc 1 535 5 is_stmt 0 view .LVU609
 1974 000c FFF7FEFF 		bl	memset
 1975              	.LVL203:
 536:Core/Src/nyan_os.c **** };...
 1976              		.loc 1 536 1 view .LVU610
 1977 0010 08BD     		pop	{r3, pc}
 1978              		.cfi_endproc
 1979              	.LFE159:
 1981              		.section	.text.NyanOsInit,"ax",%progbits
 1982              		.align	1
 1983              		.global	NyanOsInit
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1988              	NyanOsInit:
 1989              	.LVL204:
 1990              	.LFB146:
  21:Core/Src/nyan_os.c **** {
 1991              		.loc 1 21 1 is_stmt 1 view -0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
  21:Core/Src/nyan_os.c **** {
 1995              		.loc 1 21 1 is_stmt 0 view .LVU612
 1996 0000 38B5     		push	{r3, r4, r5, lr}
 1997              		.cfi_def_cfa_offset 16
 1998              		.cfi_offset 3, -16
 1999              		.cfi_offset 4, -12
 2000              		.cfi_offset 5, -8
 2001              		.cfi_offset 14, -4
 2002 0002 0546     		mov	r5, r0
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2003              		.loc 1 23 5 is_stmt 1 view .LVU613
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2004              		.loc 1 23 16 is_stmt 0 view .LVU614
 2005 0004 0123     		movs	r3, #1
 2006 0006 0372     		strb	r3, [r0, #8]
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2007              		.loc 1 24 5 is_stmt 1 view .LVU615
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2008              		.loc 1 24 14 is_stmt 0 view .LVU616
 2009 0008 0423     		movs	r3, #4
 2010 000a 4372     		strb	r3, [r0, #9]
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
ARM GAS  /tmp/ccYEfmoV.s 			page 50


 2011              		.loc 1 27 5 is_stmt 1 view .LVU617
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2012              		.loc 1 27 34 is_stmt 0 view .LVU618
 2013 000c 0024     		movs	r4, #0
 2014 000e 80F88D40 		strb	r4, [r0, #141]
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2015              		.loc 1 28 5 is_stmt 1 view .LVU619
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2016              		.loc 1 28 29 is_stmt 0 view .LVU620
 2017 0012 80F88C40 		strb	r4, [r0, #140]
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2018              		.loc 1 29 5 is_stmt 1 view .LVU621
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2019              		.loc 1 29 23 is_stmt 0 view .LVU622
 2020 0016 80F89C42 		strb	r4, [r0, #668]
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2021              		.loc 1 30 5 is_stmt 1 view .LVU623
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2022              		.loc 1 30 26 is_stmt 0 view .LVU624
 2023 001a 80F89140 		strb	r4, [r0, #145]
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2024              		.loc 1 31 5 is_stmt 1 view .LVU625
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2025              		.loc 1 31 34 is_stmt 0 view .LVU626
 2026 001e 80F89240 		strb	r4, [r0, #146]
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2027              		.loc 1 32 5 is_stmt 1 view .LVU627
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2028              		.loc 1 32 19 is_stmt 0 view .LVU628
 2029 0022 80F89340 		strb	r4, [r0, #147]
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2030              		.loc 1 33 5 is_stmt 1 view .LVU629
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2031              		.loc 1 33 17 is_stmt 0 view .LVU630
 2032 0026 80F88E40 		strb	r4, [r0, #142]
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2033              		.loc 1 36 5 is_stmt 1 view .LVU631
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2034              		.loc 1 36 17 is_stmt 0 view .LVU632
 2035 002a 4160     		str	r1, [r0, #4]
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
 2036              		.loc 1 39 5 is_stmt 1 view .LVU633
 2037 002c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2038              	.LVL205:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2039              		.loc 1 42 5 view .LVU634
 2040              	.LBB26:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2041              		.loc 1 42 10 view .LVU635
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2042              		.loc 1 42 14 is_stmt 0 view .LVU636
 2043 0030 2346     		mov	r3, r4
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2044              		.loc 1 42 5 view .LVU637
 2045 0032 06E0     		b	.L157
 2046              	.LVL206:
 2047              	.L158:
ARM GAS  /tmp/ccYEfmoV.s 			page 51


  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2048              		.loc 1 43 9 is_stmt 1 discriminator 3 view .LVU638
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2049              		.loc 1 43 36 is_stmt 0 discriminator 3 view .LVU639
 2050 0034 03F1AA02 		add	r2, r3, #170
 2051 0038 05EB8202 		add	r2, r5, r2, lsl #2
 2052 003c 0021     		movs	r1, #0
 2053 003e 5160     		str	r1, [r2, #4]
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2054              		.loc 1 42 45 is_stmt 1 discriminator 3 view .LVU640
 2055 0040 0133     		adds	r3, r3, #1
 2056              	.LVL207:
 2057              	.L157:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2058              		.loc 1 42 23 discriminator 1 view .LVU641
 2059 0042 092B     		cmp	r3, #9
 2060 0044 F6DD     		ble	.L158
 2061              	.LBE26:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2062              		.loc 1 47 5 view .LVU642
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2063              		.loc 1 47 28 is_stmt 0 view .LVU643
 2064 0046 0023     		movs	r3, #0
 2065              	.LVL208:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2066              		.loc 1 47 28 view .LVU644
 2067 0048 C5F89430 		str	r3, [r5, #148]
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2068              		.loc 1 48 5 is_stmt 1 view .LVU645
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2069              		.loc 1 48 25 is_stmt 0 view .LVU646
 2070 004c C5F89830 		str	r3, [r5, #152]
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2071              		.loc 1 50 5 is_stmt 1 view .LVU647
  51:Core/Src/nyan_os.c **** }
 2072              		.loc 1 51 1 is_stmt 0 view .LVU648
 2073 0050 0120     		movs	r0, #1
 2074 0052 38BD     		pop	{r3, r4, r5, pc}
  51:Core/Src/nyan_os.c **** }
 2075              		.loc 1 51 1 view .LVU649
 2076              		.cfi_endproc
 2077              	.LFE146:
 2079              		.section	.rodata.NyanAddInputBuffer.str1.4,"aMS",%progbits,1
 2080              		.align	2
 2081              	.LC2:
 2082 0000 08200800 		.ascii	"\010 \010\000"
 2083              		.section	.text.NyanAddInputBuffer,"ax",%progbits
 2084              		.align	1
 2085              		.global	NyanAddInputBuffer
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2090              	NyanAddInputBuffer:
 2091              	.LVL209:
 2092              	.LFB148:
  67:Core/Src/nyan_os.c **** {
 2093              		.loc 1 67 1 is_stmt 1 view -0
ARM GAS  /tmp/ccYEfmoV.s 			page 52


 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 8
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Core/Src/nyan_os.c **** {
 2097              		.loc 1 67 1 is_stmt 0 view .LVU651
 2098 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2099              		.cfi_def_cfa_offset 24
 2100              		.cfi_offset 4, -24
 2101              		.cfi_offset 5, -20
 2102              		.cfi_offset 6, -16
 2103              		.cfi_offset 7, -12
 2104              		.cfi_offset 8, -8
 2105              		.cfi_offset 14, -4
 2106 0004 82B0     		sub	sp, sp, #8
 2107              		.cfi_def_cfa_offset 32
 2108 0006 0446     		mov	r4, r0
 2109 0008 8846     		mov	r8, r1
 2110 000a 1646     		mov	r6, r2
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
 2111              		.loc 1 68 5 is_stmt 1 view .LVU652
 2112              	.LVL210:
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
 2113              		.loc 1 69 5 view .LVU653
  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
 2114              		.loc 1 70 5 view .LVU654
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
 2115              		.loc 1 71 5 view .LVU655
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2116              		.loc 1 74 5 view .LVU656
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2117              		.loc 1 74 19 is_stmt 0 view .LVU657
 2118 000c 00F19C07 		add	r7, r0, #156
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2119              		.loc 1 74 5 view .LVU658
 2120 0010 4FF40072 		mov	r2, #512
 2121              	.LVL211:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2122              		.loc 1 74 5 view .LVU659
 2123 0014 0021     		movs	r1, #0
 2124              	.LVL212:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2125              		.loc 1 74 5 view .LVU660
 2126 0016 3846     		mov	r0, r7
 2127              	.LVL213:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2128              		.loc 1 74 5 view .LVU661
 2129 0018 FFF7FEFF 		bl	memset
 2130              	.LVL214:
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2131              		.loc 1 75 5 is_stmt 1 view .LVU662
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2132              		.loc 1 75 23 is_stmt 0 view .LVU663
 2133 001c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2134 001e 84F89C32 		strb	r3, [r4, #668]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2135              		.loc 1 76 5 is_stmt 1 view .LVU664
 2136              	.LBB27:
ARM GAS  /tmp/ccYEfmoV.s 			page 53


  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2137              		.loc 1 76 9 view .LVU665
 2138              	.LVL215:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2139              		.loc 1 76 18 is_stmt 0 view .LVU666
 2140 0022 0023     		movs	r3, #0
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2141              		.loc 1 76 5 view .LVU667
 2142 0024 05E0     		b	.L161
 2143              	.LVL216:
 2144              	.L162:
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2145              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU668
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2146              		.loc 1 77 33 is_stmt 0 discriminator 3 view .LVU669
 2147 0026 18F80350 		ldrb	r5, [r8, r3]	@ zero_extendqisi2
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2148              		.loc 1 77 27 discriminator 3 view .LVU670
 2149 002a E018     		adds	r0, r4, r3
 2150 002c 80F89C50 		strb	r5, [r0, #156]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2151              		.loc 1 76 35 is_stmt 1 discriminator 3 view .LVU671
 2152 0030 0133     		adds	r3, r3, #1
 2153              	.LVL217:
 2154              	.L161:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2155              		.loc 1 76 27 discriminator 1 view .LVU672
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2156              		.loc 1 76 29 is_stmt 0 discriminator 1 view .LVU673
 2157 0032 3068     		ldr	r0, [r6]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2158              		.loc 1 76 27 discriminator 1 view .LVU674
 2159 0034 9842     		cmp	r0, r3
 2160 0036 F6D8     		bhi	.L162
 2161              	.LBE27:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2162              		.loc 1 81 5 is_stmt 1 view .LVU675
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2163              		.loc 1 81 15 is_stmt 0 view .LVU676
 2164 0038 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2165              	.LVL218:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2166              		.loc 1 81 15 view .LVU677
 2167 003a DBB2     		uxtb	r3, r3
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2168              		.loc 1 81 5 view .LVU678
 2169 003c 012B     		cmp	r3, #1
 2170 003e 6DD0     		beq	.L174
 2171 0040 022B     		cmp	r3, #2
 2172 0042 00F08580 		beq	.L175
 2173              	.L165:
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2174              		.loc 1 115 5 is_stmt 1 view .LVU679
 116:Core/Src/nyan_os.c **** }
 2175              		.loc 1 116 1 is_stmt 0 view .LVU680
 2176 0046 0120     		movs	r0, #1
 2177 0048 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccYEfmoV.s 			page 54


 2178              		.cfi_remember_state
 2179              		.cfi_def_cfa_offset 24
 2180              		@ sp needed
 2181 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2182              	.LVL219:
 2183              	.L166:
 2184              		.cfi_restore_state
 2185              	.LBB28:
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2186              		.loc 1 84 102 discriminator 3 view .LVU681
 2187 004e 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2188              		.loc 1 84 96 discriminator 3 view .LVU682
 2189 0052 43B3     		cbz	r3, .L167
 2190              	.LBB29:
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2191              		.loc 1 86 21 is_stmt 1 view .LVU683
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2192              		.loc 1 86 29 is_stmt 0 view .LVU684
 2193 0054 3F4B     		ldr	r3, .L177
 2194 0056 1B68     		ldr	r3, [r3]
 2195 0058 ADF80430 		strh	r3, [sp, #4]	@ movhi
 2196 005c 1B0C     		lsrs	r3, r3, #16
 2197 005e 8DF80630 		strb	r3, [sp, #6]
  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
 2198              		.loc 1 87 21 is_stmt 1 view .LVU685
 2199 0062 0322     		movs	r2, #3
 2200 0064 01A9     		add	r1, sp, #4
 2201 0066 2046     		mov	r0, r4
 2202 0068 FFF7FEFF 		bl	NyanPrint
 2203              	.LVL220:
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2204              		.loc 1 88 21 view .LVU686
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2205              		.loc 1 88 44 is_stmt 0 view .LVU687
 2206 006c 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2207              		.loc 1 88 66 view .LVU688
 2208 0070 2344     		add	r3, r3, r4
 2209 0072 0022     		movs	r2, #0
 2210 0074 DA72     		strb	r2, [r3, #11]
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2211              		.loc 1 89 21 is_stmt 1 view .LVU689
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2212              		.loc 1 89 26 is_stmt 0 view .LVU690
 2213 0076 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2214              		.loc 1 89 21 view .LVU691
 2215 007a 013B     		subs	r3, r3, #1
 2216 007c DBB2     		uxtb	r3, r3
 2217 007e 84F88C30 		strb	r3, [r4, #140]
 2218              	.L168:
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2219              		.loc 1 89 21 view .LVU692
 2220              	.LBE29:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2221              		.loc 1 83 60 is_stmt 1 discriminator 2 view .LVU693
ARM GAS  /tmp/ccYEfmoV.s 			page 55


 2222 0082 0135     		adds	r5, r5, #1
 2223              	.LVL221:
 2224              	.L163:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2225              		.loc 1 83 39 discriminator 1 view .LVU694
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2226              		.loc 1 83 44 is_stmt 0 discriminator 1 view .LVU695
 2227 0084 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2228 0088 DBB2     		uxtb	r3, r3
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2229              		.loc 1 83 39 discriminator 1 view .LVU696
 2230 008a AB42     		cmp	r3, r5
 2231 008c DBD9     		bls	.L165
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2232              		.loc 1 84 17 is_stmt 1 view .LVU697
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2233              		.loc 1 84 35 is_stmt 0 view .LVU698
 2234 008e 6319     		adds	r3, r4, r5
 2235 0090 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2236 0094 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2237              		.loc 1 84 19 view .LVU699
 2238 0096 082B     		cmp	r3, #8
 2239 0098 D9D0     		beq	.L166
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2240              		.loc 1 84 77 discriminator 2 view .LVU700
 2241 009a 6319     		adds	r3, r4, r5
 2242 009c 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2243 00a0 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2244              		.loc 1 84 59 discriminator 2 view .LVU701
 2245 00a2 7F2B     		cmp	r3, #127
 2246 00a4 D3D0     		beq	.L166
 2247              	.L167:
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2248              		.loc 1 90 24 is_stmt 1 view .LVU702
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2249              		.loc 1 90 41 is_stmt 0 view .LVU703
 2250 00a6 6319     		adds	r3, r4, r5
 2251 00a8 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2252 00ac DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2253              		.loc 1 90 26 view .LVU704
 2254 00ae 0A2B     		cmp	r3, #10
 2255 00b0 28D0     		beq	.L169
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2256              		.loc 1 90 77 discriminator 1 view .LVU705
 2257 00b2 6319     		adds	r3, r4, r5
 2258 00b4 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2259 00b8 DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2260              		.loc 1 90 60 discriminator 1 view .LVU706
 2261 00ba 0D2B     		cmp	r3, #13
 2262 00bc 22D0     		beq	.L169
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2263              		.loc 1 96 24 is_stmt 1 view .LVU707
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
ARM GAS  /tmp/ccYEfmoV.s 			page 56


 2264              		.loc 1 96 30 is_stmt 0 view .LVU708
 2265 00be 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 2266 00c2 DBB2     		uxtb	r3, r3
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2267              		.loc 1 96 26 view .LVU709
 2268 00c4 7E2B     		cmp	r3, #126
 2269 00c6 DCD8     		bhi	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2270              		.loc 1 98 24 is_stmt 1 view .LVU710
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2271              		.loc 1 98 41 is_stmt 0 view .LVU711
 2272 00c8 6319     		adds	r3, r4, r5
 2273 00ca 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2274 00ce DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2275              		.loc 1 98 26 view .LVU712
 2276 00d0 1F2B     		cmp	r3, #31
 2277 00d2 D6D9     		bls	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2278              		.loc 1 98 72 discriminator 1 view .LVU713
 2279 00d4 6319     		adds	r3, r4, r5
 2280 00d6 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2281 00da DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2282              		.loc 1 98 55 discriminator 1 view .LVU714
 2283 00dc 7E2B     		cmp	r3, #126
 2284 00de D0D8     		bhi	.L168
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2285              		.loc 1 99 21 is_stmt 1 view .LVU715
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2286              		.loc 1 99 44 is_stmt 0 view .LVU716
 2287 00e0 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2288              		.loc 1 99 64 view .LVU717
 2289 00e4 5A1C     		adds	r2, r3, #1
 2290 00e6 D2B2     		uxtb	r2, r2
 2291 00e8 84F88C20 		strb	r2, [r4, #140]
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2292              		.loc 1 99 84 view .LVU718
 2293 00ec 6219     		adds	r2, r4, r5
 2294 00ee 92F89C20 		ldrb	r2, [r2, #156]	@ zero_extendqisi2
 2295 00f2 D2B2     		uxtb	r2, r2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2296              		.loc 1 99 68 view .LVU719
 2297 00f4 2344     		add	r3, r3, r4
 2298 00f6 DA72     		strb	r2, [r3, #11]
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 2299              		.loc 1 100 21 is_stmt 1 view .LVU720
 2300 00f8 3268     		ldr	r2, [r6]
 2301 00fa 3946     		mov	r1, r7
 2302 00fc 2046     		mov	r0, r4
 2303 00fe FFF7FEFF 		bl	NyanPrint
 2304              	.LVL222:
 2305 0102 BEE7     		b	.L168
 2306              	.L169:
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
 2307              		.loc 1 92 21 view .LVU721
ARM GAS  /tmp/ccYEfmoV.s 			page 57


 2308 0104 2046     		mov	r0, r4
 2309 0106 FFF7FEFF 		bl	NyanDecode
 2310              	.LVL223:
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
 2311              		.loc 1 93 21 view .LVU722
 2312 010a 2046     		mov	r0, r4
 2313 010c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2314              	.LVL224:
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 2315              		.loc 1 94 21 view .LVU723
 2316 0110 0322     		movs	r2, #3
 2317 0112 1149     		ldr	r1, .L177+4
 2318 0114 2046     		mov	r0, r4
 2319 0116 FFF7FEFF 		bl	NyanPrint
 2320              	.LVL225:
  95:Core/Src/nyan_os.c ****                     break;
 2321              		.loc 1 95 21 view .LVU724
 2322 011a 94E7     		b	.L165
 2323              	.LVL226:
 2324              	.L174:
  95:Core/Src/nyan_os.c ****                     break;
 2325              		.loc 1 95 21 is_stmt 0 view .LVU725
 2326              	.LBE28:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2327              		.loc 1 81 5 view .LVU726
 2328 011c 0025     		movs	r5, #0
 2329 011e B1E7     		b	.L163
 2330              	.LVL227:
 2331              	.L172:
 2332              	.LBB30:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2333              		.loc 1 107 60 is_stmt 1 discriminator 2 view .LVU727
 2334 0120 0132     		adds	r2, r2, #1
 2335              	.LVL228:
 2336              	.L164:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2337              		.loc 1 107 39 discriminator 1 view .LVU728
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2338              		.loc 1 107 44 is_stmt 0 discriminator 1 view .LVU729
 2339 0122 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2340 0126 DBB2     		uxtb	r3, r3
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2341              		.loc 1 107 39 discriminator 1 view .LVU730
 2342 0128 9342     		cmp	r3, r2
 2343 012a 8CD9     		bls	.L165
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2344              		.loc 1 108 17 is_stmt 1 view .LVU731
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2345              		.loc 1 108 23 is_stmt 0 view .LVU732
 2346 012c D4F8A012 		ldr	r1, [r4, #672]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2347              		.loc 1 108 45 view .LVU733
 2348 0130 D4F8A432 		ldr	r3, [r4, #676]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2349              		.loc 1 108 19 view .LVU734
 2350 0134 9942     		cmp	r1, r3
 2351 0136 F3D2     		bcs	.L172
ARM GAS  /tmp/ccYEfmoV.s 			page 58


 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2352              		.loc 1 109 21 is_stmt 1 view .LVU735
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2353              		.loc 1 109 24 is_stmt 0 view .LVU736
 2354 0138 D4F8A812 		ldr	r1, [r4, #680]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2355              		.loc 1 109 41 view .LVU737
 2356 013c D4F8A032 		ldr	r3, [r4, #672]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2357              		.loc 1 109 57 view .LVU738
 2358 0140 581C     		adds	r0, r3, #1
 2359 0142 C4F8A002 		str	r0, [r4, #672]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2360              		.loc 1 109 77 view .LVU739
 2361 0146 A018     		adds	r0, r4, r2
 2362 0148 90F89C00 		ldrb	r0, [r0, #156]	@ zero_extendqisi2
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2363              		.loc 1 109 61 view .LVU740
 2364 014c C854     		strb	r0, [r1, r3]
 2365 014e E7E7     		b	.L172
 2366              	.LVL229:
 2367              	.L175:
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2368              		.loc 1 109 61 view .LVU741
 2369              	.LBE30:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2370              		.loc 1 81 5 view .LVU742
 2371 0150 0022     		movs	r2, #0
 2372 0152 E6E7     		b	.L164
 2373              	.L178:
 2374              		.align	2
 2375              	.L177:
 2376 0154 00000000 		.word	.LC2
 2377 0158 00000000 		.word	nyan_keys_newline
 2378              		.cfi_endproc
 2379              	.LFE148:
 2381              		.section	.data.nyan_keys_write_bitstream_error_size_tx_busy,"aw"
 2382              		.align	2
 2385              	nyan_keys_write_bitstream_error_size_tx_busy:
 2386 0000 4661696C 		.ascii	"Failed to write bitstream length, TX buffer is busy"
 2386      65642074 
 2386      6F207772 
 2386      69746520 
 2386      62697473 
 2387 0033 2E0D0A00 		.ascii	".\015\012\000"
 2388              		.section	.data.nyan_keys_write_bitstream_error_size,"aw"
 2389              		.align	2
 2392              	nyan_keys_write_bitstream_error_size:
 2393 0000 4661696C 		.ascii	"Failed to parse bitstream length, size must be less"
 2393      65642074 
 2393      6F207061 
 2393      72736520 
 2393      62697473 
 2394 0033 20746861 		.ascii	" than 65535 bytes.\015\012\000"
 2394      6E203635 
 2394      35333520 
 2394      62797465 
ARM GAS  /tmp/ccYEfmoV.s 			page 59


 2394      732E0D0A 
 2395              		.section	.data.nyan_keys_unknown_command,"aw"
 2396              		.align	2
 2399              	nyan_keys_unknown_command:
 2400 0000 436F6D6D 		.ascii	"Command not supported by NyanOS\000"
 2400      616E6420 
 2400      6E6F7420 
 2400      73757070 
 2400      6F727465 
 2401              		.section	.data.nyan_keys_set_owner_success,"aw"
 2402              		.align	2
 2405              	nyan_keys_set_owner_success:
 2406 0000 4E79616E 		.ascii	"Nyan Keys owner has been successfully set\015\012\000"
 2406      204B6579 
 2406      73206F77 
 2406      6E657220 
 2406      68617320 
 2407              		.section	.data.nyan_keys_getinfo_owner,"aw"
 2408              		.align	2
 2411              	nyan_keys_getinfo_owner:
 2412 0000 4F776E65 		.ascii	"Owner: \000"
 2412      723A2000 
 2413              		.section	.data.nyan_keys_getinfo,"aw"
 2414              		.align	2
 2417              	nyan_keys_getinfo:
 2418 0000 56657273 		.ascii	"Version: 0.01\015\012Author: Portland.HODL\015\012B"
 2418      696F6E3A 
 2418      20302E30 
 2418      310D0A41 
 2418      7574686F 
 2419 0027 75696C74 		.ascii	"uilt: 07/11/23\015\012\000"
 2419      3A203037 
 2419      2F31312F 
 2419      32330D0A 
 2419      00
 2420              		.section	.data.nyan_keys_path_text,"aw"
 2421              		.align	2
 2424              	nyan_keys_path_text:
 2425 0000 4E79616E 		.ascii	"NyanOS \360\237\220\261 > \000"
 2425      4F5320F0 
 2425      9F90B120 
 2425      3E2000
 2426              		.section	.data.nyan_keys_newline,"aw"
 2427              		.align	2
 2430              	nyan_keys_newline:
 2431 0000 0D0A00   		.ascii	"\015\012\000"
 2432              		.section	.data.nyan_keys_welcome_text,"aw"
 2433              		.align	2
 2436              	nyan_keys_welcome_text:
 2437 0000 4E79616E 		.ascii	"Nyan Keys Operating System (NOS) V0.01\015\012Made "
 2437      204B6579 
 2437      73204F70 
 2437      65726174 
 2437      696E6720 
 2438 002d 62792050 		.ascii	"by Portland.HODL\015\012\015\012\000"
 2438      6F72746C 
 2438      616E642E 
ARM GAS  /tmp/ccYEfmoV.s 			page 60


 2438      484F444C 
 2438      0D0A0D0A 
 2439              		.section	.rodata.str1.4,"aMS",%progbits,1
 2440              		.align	2
 2441              	.LC3:
 2442 0000 67657469 		.ascii	"getinfo\000"
 2442      6E666F00 
 2443              		.align	2
 2444              	.LC4:
 2445 0008 77726974 		.ascii	"write-bitstream\000"
 2445      652D6269 
 2445      74737472 
 2445      65616D00 
 2446              		.align	2
 2447              	.LC5:
 2448 0018 7365742D 		.ascii	"set-owner\000"
 2448      6F776E65 
 2448      7200
 2449              		.section	.rodata.nyan_commands,"a"
 2450              		.align	2
 2453              	nyan_commands:
 2454 0000 00000000 		.word	.LC3
 2455 0004 08000000 		.word	.LC4
 2456 0008 18000000 		.word	.LC5
 2457              		.text
 2458              	.Letext0:
 2459              		.file 2 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 2460              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 2461              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 2462              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 2463              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2464              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2465              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2466              		.file 9 "Core/Inc/24xx_eeprom.h"
 2467              		.file 10 "Core/Inc/nyan_os.h"
 2468              		.file 11 "Core/Inc/nyan_sha256.h"
 2469              		.file 12 "Core/Inc/nyan_strings.h"
 2470              		.file 13 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2471              		.file 14 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2472              		.file 15 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2473              		.file 16 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 2474              		.file 17 "Core/Inc/tim.h"
 2475              		.file 18 "<built-in>"
ARM GAS  /tmp/ccYEfmoV.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 nyan_os.c
     /tmp/ccYEfmoV.s:21     .text.NyanPrint:00000000 $t
     /tmp/ccYEfmoV.s:27     .text.NyanPrint:00000000 NyanPrint
     /tmp/ccYEfmoV.s:192    .text.NyanWelcomeDisplay:00000000 $t
     /tmp/ccYEfmoV.s:198    .text.NyanWelcomeDisplay:00000000 NyanWelcomeDisplay
     /tmp/ccYEfmoV.s:263    .text.NyanWelcomeDisplay:00000034 $d
     /tmp/ccYEfmoV.s:2436   .data.nyan_keys_welcome_text:00000000 nyan_keys_welcome_text
     /tmp/ccYEfmoV.s:2424   .data.nyan_keys_path_text:00000000 nyan_keys_path_text
     /tmp/ccYEfmoV.s:269    .text.NyanCdcTX:00000000 $t
     /tmp/ccYEfmoV.s:275    .text.NyanCdcTX:00000000 NyanCdcTX
     /tmp/ccYEfmoV.s:444    .text.NyanExeGetinfo:00000000 $t
     /tmp/ccYEfmoV.s:450    .text.NyanExeGetinfo:00000000 NyanExeGetinfo
     /tmp/ccYEfmoV.s:541    .text.NyanExeGetinfo:00000064 $d
     /tmp/ccYEfmoV.s:2417   .data.nyan_keys_getinfo:00000000 nyan_keys_getinfo
     /tmp/ccYEfmoV.s:2411   .data.nyan_keys_getinfo_owner:00000000 nyan_keys_getinfo_owner
     /tmp/ccYEfmoV.s:2430   .data.nyan_keys_newline:00000000 nyan_keys_newline
     /tmp/ccYEfmoV.s:548    .text.NyanExeSetOwner:00000000 $t
     /tmp/ccYEfmoV.s:554    .text.NyanExeSetOwner:00000000 NyanExeSetOwner
     /tmp/ccYEfmoV.s:831    .rodata.NyanExeWriteFpgaBitstream.str1.4:00000000 $d
     /tmp/ccYEfmoV.s:835    .text.NyanExeWriteFpgaBitstream:00000000 $t
     /tmp/ccYEfmoV.s:841    .text.NyanExeWriteFpgaBitstream:00000000 NyanExeWriteFpgaBitstream
     /tmp/ccYEfmoV.s:1319   .text.NyanExeWriteFpgaBitstream:000001d4 $d
     /tmp/ccYEfmoV.s:2392   .data.nyan_keys_write_bitstream_error_size:00000000 nyan_keys_write_bitstream_error_size
     /tmp/ccYEfmoV.s:2385   .data.nyan_keys_write_bitstream_error_size_tx_busy:00000000 nyan_keys_write_bitstream_error_size_tx_busy
     /tmp/ccYEfmoV.s:1327   .text.NyanExecute:00000000 $t
     /tmp/ccYEfmoV.s:1333   .text.NyanExecute:00000000 NyanExecute
     /tmp/ccYEfmoV.s:1357   .text.NyanExecute:00000010 $d
     /tmp/ccYEfmoV.s:1501   .text.NyanExecute:000000b8 $d
     /tmp/ccYEfmoV.s:2405   .data.nyan_keys_set_owner_success:00000000 nyan_keys_set_owner_success
     /tmp/ccYEfmoV.s:2399   .data.nyan_keys_unknown_command:00000000 nyan_keys_unknown_command
     /tmp/ccYEfmoV.s:1510   .text.FreeNyanCommandArgs:00000000 $t
     /tmp/ccYEfmoV.s:1516   .text.FreeNyanCommandArgs:00000000 FreeNyanCommandArgs
     /tmp/ccYEfmoV.s:1586   .rodata.NyanDecodeArgs.str1.4:00000000 $d
     /tmp/ccYEfmoV.s:1590   .text.NyanDecodeArgs:00000000 $t
     /tmp/ccYEfmoV.s:1596   .text.NyanDecodeArgs:00000000 NyanDecodeArgs
     /tmp/ccYEfmoV.s:1773   .text.NyanDecodeArgs:00000098 $d
     /tmp/ccYEfmoV.s:1778   .text.NyanDecode:00000000 $t
     /tmp/ccYEfmoV.s:1784   .text.NyanDecode:00000000 NyanDecode
     /tmp/ccYEfmoV.s:1876   .text.NyanDecode:00000044 $d
     /tmp/ccYEfmoV.s:2453   .rodata.nyan_commands:00000000 nyan_commands
     /tmp/ccYEfmoV.s:1881   .text.FreeNyanString:00000000 $t
     /tmp/ccYEfmoV.s:1887   .text.FreeNyanString:00000000 FreeNyanString
     /tmp/ccYEfmoV.s:1947   .text.ClearNyanCommandBuffer:00000000 $t
     /tmp/ccYEfmoV.s:1953   .text.ClearNyanCommandBuffer:00000000 ClearNyanCommandBuffer
     /tmp/ccYEfmoV.s:1982   .text.NyanOsInit:00000000 $t
     /tmp/ccYEfmoV.s:1988   .text.NyanOsInit:00000000 NyanOsInit
     /tmp/ccYEfmoV.s:2080   .rodata.NyanAddInputBuffer.str1.4:00000000 $d
     /tmp/ccYEfmoV.s:2084   .text.NyanAddInputBuffer:00000000 $t
     /tmp/ccYEfmoV.s:2090   .text.NyanAddInputBuffer:00000000 NyanAddInputBuffer
     /tmp/ccYEfmoV.s:2376   .text.NyanAddInputBuffer:00000154 $d
     /tmp/ccYEfmoV.s:2382   .data.nyan_keys_write_bitstream_error_size_tx_busy:00000000 $d
     /tmp/ccYEfmoV.s:2389   .data.nyan_keys_write_bitstream_error_size:00000000 $d
     /tmp/ccYEfmoV.s:2396   .data.nyan_keys_unknown_command:00000000 $d
     /tmp/ccYEfmoV.s:2402   .data.nyan_keys_set_owner_success:00000000 $d
     /tmp/ccYEfmoV.s:2408   .data.nyan_keys_getinfo_owner:00000000 $d
     /tmp/ccYEfmoV.s:2414   .data.nyan_keys_getinfo:00000000 $d
ARM GAS  /tmp/ccYEfmoV.s 			page 62


     /tmp/ccYEfmoV.s:2421   .data.nyan_keys_path_text:00000000 $d
     /tmp/ccYEfmoV.s:2427   .data.nyan_keys_newline:00000000 $d
     /tmp/ccYEfmoV.s:2433   .data.nyan_keys_welcome_text:00000000 $d
     /tmp/ccYEfmoV.s:2440   .rodata.str1.4:00000000 $d
     /tmp/ccYEfmoV.s:2450   .rodata.nyan_commands:00000000 $d
     /tmp/ccYEfmoV.s:1362   .text.NyanExecute:00000015 $d
     /tmp/ccYEfmoV.s:1362   .text.NyanExecute:00000016 $t

UNDEFINED SYMBOLS
realloc
memcpy
malloc
CDC_Transmit
EepromRead
strncpy
strlen
strcpy
EepromFlushTxBuff
free
EepromWrite
atoi
sha256_init
sha256_update
sha256_final
sprintf
HAL_TIM_OC_Stop_IT
HAL_TIM_OC_Start_IT
htim8
strtok
memset
memcmp
