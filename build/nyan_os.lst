ARM GAS  /tmp/ccxXT9BN.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_os.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NyanPrint,"ax",%progbits
  20              		.align	1
  21              		.global	NyanPrint
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NyanPrint:
  27              	.LVL0:
  28              	.LFB149:
  29              		.file 1 "Core/Src/nyan_os.c"
   1:Core/Src/nyan_os.c **** /**
   2:Core/Src/nyan_os.c ****  * NyanOS (NOS) v0.01
   3:Core/Src/nyan_os.c ****  * Reese Russell
   4:Core/Src/nyan_os.c ****  * MIT License
   5:Core/Src/nyan_os.c ****  */
   6:Core/Src/nyan_os.c **** 
   7:Core/Src/nyan_os.c **** #include <ctype.h>
   8:Core/Src/nyan_os.c **** #include <stdio.h>
   9:Core/Src/nyan_os.c **** #include <stdlib.h> 
  10:Core/Src/nyan_os.c **** #include <string.h>
  11:Core/Src/nyan_os.c **** 
  12:Core/Src/nyan_os.c **** #include "main.h"
  13:Core/Src/nyan_os.c **** #include "24xx_eeprom.h"
  14:Core/Src/nyan_os.c **** #include "tim.h"
  15:Core/Src/nyan_os.c **** #include "usbd_cdc_acm_if.h"
  16:Core/Src/nyan_os.c **** #include "nyan_os.h"
  17:Core/Src/nyan_os.c **** #include "nyan_sha256.h"
  18:Core/Src/nyan_os.c **** #include "nyan_strings.h"
  19:Core/Src/nyan_os.c **** 
  20:Core/Src/nyan_os.c **** NyanReturn NyanOsInit(volatile NyanOS* nos, Eeprom24xx* eeprom)
  21:Core/Src/nyan_os.c **** {
  22:Core/Src/nyan_os.c ****     // Set the operational state
  23:Core/Src/nyan_os.c ****     nos->state = READY;
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
  25:Core/Src/nyan_os.c **** 
  26:Core/Src/nyan_os.c ****     // Default init the OS vars
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
ARM GAS  /tmp/ccxXT9BN.s 			page 2


  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
  34:Core/Src/nyan_os.c **** 
  35:Core/Src/nyan_os.c ****     // EEPROM Driver access
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
  37:Core/Src/nyan_os.c **** 
  38:Core/Src/nyan_os.c ****     // Manual Setting of the memory because of the volatile qualifier.
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
  40:Core/Src/nyan_os.c **** 
  41:Core/Src/nyan_os.c ****     // Set the arg pointer to a zero value
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
  44:Core/Src/nyan_os.c ****     }
  45:Core/Src/nyan_os.c **** 
  46:Core/Src/nyan_os.c ****     // Output Buffer Creation
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
  49:Core/Src/nyan_os.c ****     
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  51:Core/Src/nyan_os.c **** }
  52:Core/Src/nyan_os.c **** 
  53:Core/Src/nyan_os.c **** NyanReturn NyanWelcomeDisplay(volatile NyanOS *nos)
  54:Core/Src/nyan_os.c **** {
  55:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
  56:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
  57:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
  59:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
  60:Core/Src/nyan_os.c ****         }
  61:Core/Src/nyan_os.c ****     }
  62:Core/Src/nyan_os.c **** 
  63:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  64:Core/Src/nyan_os.c **** };
  65:Core/Src/nyan_os.c **** 
  66:Core/Src/nyan_os.c **** NyanReturn NyanAddInputBuffer(volatile NyanOS *nos, uint8_t *pbuf, uint32_t *Len)
  67:Core/Src/nyan_os.c **** {
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
  72:Core/Src/nyan_os.c **** 
  73:Core/Src/nyan_os.c ****     // Lets copy the RX Buffer so that it doesn't get freed by an interrupt !!!FIXME!!! This can be
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
  78:Core/Src/nyan_os.c ****     }
  79:Core/Src/nyan_os.c **** 
  80:Core/Src/nyan_os.c ****     // Check which state we are in.
  81:Core/Src/nyan_os.c ****     switch(nos->state){
  82:Core/Src/nyan_os.c ****         case READY: {
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
  85:Core/Src/nyan_os.c ****                     // Handle backspace
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
ARM GAS  /tmp/ccxXT9BN.s 			page 3


  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
  91:Core/Src/nyan_os.c ****                     // Handle the action of executing a command by pressing enter
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
  95:Core/Src/nyan_os.c ****                     break;
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
  97:Core/Src/nyan_os.c ****                     // Handle out of command buffer space on next char
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 101:Core/Src/nyan_os.c ****                 }
 102:Core/Src/nyan_os.c ****             }
 103:Core/Src/nyan_os.c ****             break;
 104:Core/Src/nyan_os.c ****         }
 105:Core/Src/nyan_os.c ****         case DIRECT_BUFFER_ACCESS: {
 106:Core/Src/nyan_os.c ****             // In this state all signals are written directly to the buffer until the buffer is ful
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 110:Core/Src/nyan_os.c ****             }
 111:Core/Src/nyan_os.c ****         }
 112:Core/Src/nyan_os.c ****         default: 
 113:Core/Src/nyan_os.c ****             break;
 114:Core/Src/nyan_os.c ****     }
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 116:Core/Src/nyan_os.c **** }
 117:Core/Src/nyan_os.c **** 
 118:Core/Src/nyan_os.c **** NyanReturn NyanPrint(volatile NyanOS *nos, char* data, size_t len)
 119:Core/Src/nyan_os.c **** {
  30              		.loc 1 119 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/nyan_os.c ****     if (!nos || !data)
  34              		.loc 1 120 5 view .LVU1
  35              		.loc 1 120 8 is_stmt 0 view .LVU2
  36 0000 0029     		cmp	r1, #0
  37 0002 18BF     		it	ne
  38 0004 0028     		cmpne	r0, #0
  39 0006 43D0     		beq	.L5
 119:Core/Src/nyan_os.c ****     if (!nos || !data)
  40              		.loc 1 119 1 view .LVU3
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 16
  44              		.cfi_offset 4, -16
  45              		.cfi_offset 5, -12
  46              		.cfi_offset 6, -8
  47              		.cfi_offset 14, -4
  48 000a 1546     		mov	r5, r2
  49 000c 0446     		mov	r4, r0
  50 000e 0E46     		mov	r6, r1
 121:Core/Src/nyan_os.c ****         return NOS_FAILURE;
ARM GAS  /tmp/ccxXT9BN.s 			page 4


 122:Core/Src/nyan_os.c **** 
 123:Core/Src/nyan_os.c ****     if (nos->tx_buffer.size + len > 2048) {
  51              		.loc 1 123 5 is_stmt 1 view .LVU4
  52              		.loc 1 123 23 is_stmt 0 view .LVU5
  53 0010 D0F89830 		ldr	r3, [r0, #152]
  54              		.loc 1 123 29 view .LVU6
  55 0014 1344     		add	r3, r3, r2
  56              		.loc 1 123 8 view .LVU7
  57 0016 B3F5006F 		cmp	r3, #2048
  58 001a 3BD8     		bhi	.L6
 124:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 125:Core/Src/nyan_os.c ****     }
 126:Core/Src/nyan_os.c ****     if (nos->tx_buffer.p_array == NULL) {
  59              		.loc 1 126 5 is_stmt 1 view .LVU8
  60              		.loc 1 126 23 is_stmt 0 view .LVU9
  61 001c D0F89430 		ldr	r3, [r0, #148]
  62              		.loc 1 126 8 view .LVU10
  63 0020 2BB3     		cbz	r3, .L13
  64              	.LBB2:
 127:Core/Src/nyan_os.c ****         // Since the pointer is null we need to create a new one to hold our new data!
 128:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = (uint8_t *)malloc(len);
 129:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 130:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 131:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 132:Core/Src/nyan_os.c ****         }
 133:Core/Src/nyan_os.c ****         nos->tx_buffer.size = len;
 134:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 135:Core/Src/nyan_os.c ****     } else {
 136:Core/Src/nyan_os.c ****         
 137:Core/Src/nyan_os.c ****         // The pointer is not null, so we realloc and then add the contents of data to it
 138:Core/Src/nyan_os.c ****         uint8_t *new_buffer = (uint8_t *)realloc(nos->tx_buffer.p_array, nos->tx_buffer.size + len)
  65              		.loc 1 138 9 is_stmt 1 view .LVU11
  66              		.loc 1 138 64 is_stmt 0 view .LVU12
  67 0022 D0F89400 		ldr	r0, [r0, #148]
  68              	.LVL1:
  69              		.loc 1 138 88 view .LVU13
  70 0026 D4F89810 		ldr	r1, [r4, #152]
  71              	.LVL2:
  72              		.loc 1 138 42 view .LVU14
  73 002a 1144     		add	r1, r1, r2
  74 002c FFF7FEFF 		bl	realloc
  75              	.LVL3:
 139:Core/Src/nyan_os.c ****         if (new_buffer == NULL) {
  76              		.loc 1 139 9 is_stmt 1 view .LVU15
  77              		.loc 1 139 12 is_stmt 0 view .LVU16
  78 0030 A0B3     		cbz	r0, .L8
 140:Core/Src/nyan_os.c ****             // Handle failed memory reallocation
 141:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 142:Core/Src/nyan_os.c ****         }
 143:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = new_buffer;
  79              		.loc 1 143 9 is_stmt 1 view .LVU17
  80              		.loc 1 143 32 is_stmt 0 view .LVU18
  81 0032 C4F89400 		str	r0, [r4, #148]
 144:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array + nos->tx_buffer.size, data, len); // Append the new data
  82              		.loc 1 144 9 is_stmt 1 view .LVU19
  83              		.loc 1 144 30 is_stmt 0 view .LVU20
  84 0036 D4F89400 		ldr	r0, [r4, #148]
ARM GAS  /tmp/ccxXT9BN.s 			page 5


  85              	.LVL4:
  86              		.loc 1 144 55 view .LVU21
  87 003a D4F89830 		ldr	r3, [r4, #152]
  88              		.loc 1 144 9 view .LVU22
  89 003e 2A46     		mov	r2, r5
  90 0040 3146     		mov	r1, r6
  91 0042 1844     		add	r0, r0, r3
  92 0044 FFF7FEFF 		bl	memcpy
  93              	.LVL5:
 145:Core/Src/nyan_os.c ****         nos->tx_buffer.size += len; // Increase the size to reflect the new total size
  94              		.loc 1 145 9 is_stmt 1 view .LVU23
  95              		.loc 1 145 29 is_stmt 0 view .LVU24
  96 0048 D4F89820 		ldr	r2, [r4, #152]
  97 004c 1544     		add	r5, r5, r2
  98              	.LVL6:
  99              		.loc 1 145 29 view .LVU25
 100 004e C4F89850 		str	r5, [r4, #152]
 101              	.L4:
 102              		.loc 1 145 29 view .LVU26
 103              	.LBE2:
 146:Core/Src/nyan_os.c ****     }
 147:Core/Src/nyan_os.c **** 
 148:Core/Src/nyan_os.c ****     // Now calculate the chunks
 149:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = nos->tx_buffer.size / _NYAN_CDC_TX_MAX_LEN;
 104              		.loc 1 149 5 is_stmt 1 view .LVU27
 105              		.loc 1 149 42 is_stmt 0 view .LVU28
 106 0052 D4F89830 		ldr	r3, [r4, #152]
 107              		.loc 1 149 26 view .LVU29
 108 0056 C3F3C713 		ubfx	r3, r3, #7, #8
 109 005a 84F89130 		strb	r3, [r4, #145]
 150:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = nos->tx_buffer.size % _NYAN_CDC_TX_MAX_LEN;
 110              		.loc 1 150 5 is_stmt 1 view .LVU30
 111              		.loc 1 150 50 is_stmt 0 view .LVU31
 112 005e D4F89830 		ldr	r3, [r4, #152]
 113              		.loc 1 150 56 view .LVU32
 114 0062 03F07F03 		and	r3, r3, #127
 115              		.loc 1 150 34 view .LVU33
 116 0066 84F89230 		strb	r3, [r4, #146]
 151:Core/Src/nyan_os.c **** 
 152:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 117              		.loc 1 152 5 is_stmt 1 view .LVU34
 118              		.loc 1 152 12 is_stmt 0 view .LVU35
 119 006a 0120     		movs	r0, #1
 120              	.L2:
 153:Core/Src/nyan_os.c **** }
 121              		.loc 1 153 1 view .LVU36
 122 006c 70BD     		pop	{r4, r5, r6, pc}
 123              	.LVL7:
 124              	.L13:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 125              		.loc 1 128 9 is_stmt 1 view .LVU37
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 126              		.loc 1 128 45 is_stmt 0 view .LVU38
 127 006e 1046     		mov	r0, r2
 128              	.LVL8:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 129              		.loc 1 128 45 view .LVU39
ARM GAS  /tmp/ccxXT9BN.s 			page 6


 130 0070 FFF7FEFF 		bl	malloc
 131              	.LVL9:
 128:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 132              		.loc 1 128 32 view .LVU40
 133 0074 C4F89400 		str	r0, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 134              		.loc 1 129 9 is_stmt 1 view .LVU41
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 135              		.loc 1 129 27 is_stmt 0 view .LVU42
 136 0078 D4F89430 		ldr	r3, [r4, #148]
 129:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 137              		.loc 1 129 12 view .LVU43
 138 007c 63B1     		cbz	r3, .L7
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 139              		.loc 1 133 9 is_stmt 1 view .LVU44
 133:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 140              		.loc 1 133 29 is_stmt 0 view .LVU45
 141 007e C4F89850 		str	r5, [r4, #152]
 134:Core/Src/nyan_os.c ****     } else {
 142              		.loc 1 134 9 is_stmt 1 view .LVU46
 134:Core/Src/nyan_os.c ****     } else {
 143              		.loc 1 134 30 is_stmt 0 view .LVU47
 144 0082 D4F89400 		ldr	r0, [r4, #148]
 134:Core/Src/nyan_os.c ****     } else {
 145              		.loc 1 134 9 view .LVU48
 146 0086 2A46     		mov	r2, r5
 147 0088 3146     		mov	r1, r6
 148 008a FFF7FEFF 		bl	memcpy
 149              	.LVL10:
 150 008e E0E7     		b	.L4
 151              	.LVL11:
 152              	.L5:
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 0
 155              		.cfi_restore 4
 156              		.cfi_restore 5
 157              		.cfi_restore 6
 158              		.cfi_restore 14
 121:Core/Src/nyan_os.c **** 
 159              		.loc 1 121 16 view .LVU49
 160 0090 0020     		movs	r0, #0
 161              	.LVL12:
 162              		.loc 1 153 1 view .LVU50
 163 0092 7047     		bx	lr
 164              	.LVL13:
 165              	.L6:
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 124:Core/Src/nyan_os.c ****     }
 172              		.loc 1 124 20 view .LVU51
 173 0094 0020     		movs	r0, #0
 174              	.LVL14:
 124:Core/Src/nyan_os.c ****     }
ARM GAS  /tmp/ccxXT9BN.s 			page 7


 175              		.loc 1 124 20 view .LVU52
 176 0096 E9E7     		b	.L2
 177              	.LVL15:
 178              	.L7:
 131:Core/Src/nyan_os.c ****         }
 179              		.loc 1 131 20 view .LVU53
 180 0098 0020     		movs	r0, #0
 181 009a E7E7     		b	.L2
 182              	.LVL16:
 183              	.L8:
 184              	.LBB3:
 141:Core/Src/nyan_os.c ****         }
 185              		.loc 1 141 20 view .LVU54
 186 009c 0020     		movs	r0, #0
 187              	.LVL17:
 141:Core/Src/nyan_os.c ****         }
 188              		.loc 1 141 20 view .LVU55
 189 009e E5E7     		b	.L2
 190              	.LBE3:
 191              		.cfi_endproc
 192              	.LFE149:
 194              		.section	.text.NyanWelcomeDisplay,"ax",%progbits
 195              		.align	1
 196              		.global	NyanWelcomeDisplay
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	NyanWelcomeDisplay:
 202              	.LVL18:
 203              	.LFB147:
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 204              		.loc 1 54 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 208              		.loc 1 55 5 view .LVU57
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 209              		.loc 1 55 11 is_stmt 0 view .LVU58
 210 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  55:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 211              		.loc 1 55 7 view .LVU59
 212 0002 A3B1     		cbz	r3, .L17
  54:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen) {
 213              		.loc 1 54 1 view .LVU60
 214 0004 10B5     		push	{r4, lr}
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 14, -4
 219 0006 0446     		mov	r4, r0
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 220              		.loc 1 56 9 is_stmt 1 view .LVU61
  56:Core/Src/nyan_os.c ****         if(nos->send_welcome_screen_guard++ == 0){
 221              		.loc 1 56 34 is_stmt 0 view .LVU62
 222 0008 0023     		movs	r3, #0
 223 000a 0370     		strb	r3, [r0]
ARM GAS  /tmp/ccxXT9BN.s 			page 8


  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 224              		.loc 1 57 9 is_stmt 1 view .LVU63
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 225              		.loc 1 57 15 is_stmt 0 view .LVU64
 226 000c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 227              		.loc 1 57 42 view .LVU65
 228 000e 531C     		adds	r3, r2, #1
 229 0010 DBB2     		uxtb	r3, r3
 230 0012 4370     		strb	r3, [r0, #1]
  57:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 231              		.loc 1 57 11 view .LVU66
 232 0014 0AB1     		cbz	r2, .L20
 233              	.LVL19:
 234              	.L15:
  63:Core/Src/nyan_os.c **** };
 235              		.loc 1 63 5 is_stmt 1 view .LVU67
  64:Core/Src/nyan_os.c **** 
 236              		.loc 1 64 1 is_stmt 0 view .LVU68
 237 0016 0120     		movs	r0, #1
 238 0018 10BD     		pop	{r4, pc}
 239              	.LVL20:
 240              	.L20:
  58:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241              		.loc 1 58 13 is_stmt 1 view .LVU69
 242 001a 4222     		movs	r2, #66
 243 001c 0549     		ldr	r1, .L21
 244 001e FFF7FEFF 		bl	NyanPrint
 245              	.LVL21:
  59:Core/Src/nyan_os.c ****         }
 246              		.loc 1 59 13 view .LVU70
 247 0022 0F22     		movs	r2, #15
 248 0024 0449     		ldr	r1, .L21+4
 249 0026 2046     		mov	r0, r4
 250 0028 FFF7FEFF 		bl	NyanPrint
 251              	.LVL22:
 252 002c F3E7     		b	.L15
 253              	.LVL23:
 254              	.L17:
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 0
 257              		.cfi_restore 4
 258              		.cfi_restore 14
  63:Core/Src/nyan_os.c **** };
 259              		.loc 1 63 5 view .LVU71
  64:Core/Src/nyan_os.c **** 
 260              		.loc 1 64 1 is_stmt 0 view .LVU72
 261 002e 0120     		movs	r0, #1
 262              	.LVL24:
  64:Core/Src/nyan_os.c **** 
 263              		.loc 1 64 1 view .LVU73
 264 0030 7047     		bx	lr
 265              	.L22:
 266 0032 00BF     		.align	2
 267              	.L21:
 268 0034 00000000 		.word	.LANCHOR0
 269 0038 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccxXT9BN.s 			page 9


 270              		.cfi_endproc
 271              	.LFE147:
 273              		.section	.text.NyanCdcTX,"ax",%progbits
 274              		.align	1
 275              		.global	NyanCdcTX
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	NyanCdcTX:
 281              	.LVL25:
 282              	.LFB150:
 154:Core/Src/nyan_os.c **** 
 155:Core/Src/nyan_os.c **** NyanReturn NyanCdcTX(volatile NyanOS* nos)
 156:Core/Src/nyan_os.c **** {
 283              		.loc 1 156 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 156 1 is_stmt 0 view .LVU75
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 293 0002 0346     		mov	r3, r0
 157:Core/Src/nyan_os.c ****     // First we need to determine how many chunks we need to send
 158:Core/Src/nyan_os.c ****     uint8_t total_chunks = nos->tx_chunks_solid;
 294              		.loc 1 158 5 is_stmt 1 view .LVU76
 295              		.loc 1 158 13 is_stmt 0 view .LVU77
 296 0004 90F89100 		ldrb	r0, [r0, #145]	@ zero_extendqisi2
 297              	.LVL26:
 298              		.loc 1 158 13 view .LVU78
 299 0008 C0B2     		uxtb	r0, r0
 300              	.LVL27:
 159:Core/Src/nyan_os.c ****     uint8_t length = 0;
 301              		.loc 1 159 5 is_stmt 1 view .LVU79
 160:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 302              		.loc 1 160 5 view .LVU80
 303              		.loc 1 160 34 is_stmt 0 view .LVU81
 304 000a 93F89310 		ldrb	r1, [r3, #147]	@ zero_extendqisi2
 305              		.loc 1 160 45 view .LVU82
 306 000e C901     		lsls	r1, r1, #7
 307              	.LVL28:
 161:Core/Src/nyan_os.c **** 
 162:Core/Src/nyan_os.c ****     // If there are partial bytes we need to increment the send chunks by 1
 163:Core/Src/nyan_os.c ****     if(nos->tx_chunks_partial_bytes) {
 308              		.loc 1 163 5 is_stmt 1 view .LVU83
 309              		.loc 1 163 11 is_stmt 0 view .LVU84
 310 0010 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 311              		.loc 1 163 7 view .LVU85
 312 0014 0AB1     		cbz	r2, .L24
 164:Core/Src/nyan_os.c ****         total_chunks++;
 313              		.loc 1 164 9 is_stmt 1 view .LVU86
 314              		.loc 1 164 21 is_stmt 0 view .LVU87
 315 0016 0130     		adds	r0, r0, #1
 316              	.LVL29:
 317              		.loc 1 164 21 view .LVU88
ARM GAS  /tmp/ccxXT9BN.s 			page 10


 318 0018 C0B2     		uxtb	r0, r0
 319              	.LVL30:
 320              	.L24:
 165:Core/Src/nyan_os.c ****     }
 166:Core/Src/nyan_os.c **** 
 167:Core/Src/nyan_os.c ****     // If there are no chunks to send than just return a failure
 168:Core/Src/nyan_os.c ****     if(total_chunks == 0) {
 321              		.loc 1 168 5 is_stmt 1 view .LVU89
 322              		.loc 1 168 7 is_stmt 0 view .LVU90
 323 001a 0028     		cmp	r0, #0
 324 001c 49D0     		beq	.L25
 169:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 170:Core/Src/nyan_os.c ****     }
 171:Core/Src/nyan_os.c ****     
 172:Core/Src/nyan_os.c ****     // Do checks and transmit data;
 173:Core/Src/nyan_os.c ****     if((nos->tx_buffer.p_array != NULL || nos->tx_buffer.size != 0) && nos->tx_inflight == 0) {
 325              		.loc 1 173 5 is_stmt 1 view .LVU91
 326              		.loc 1 173 23 is_stmt 0 view .LVU92
 327 001e D3F89420 		ldr	r2, [r3, #148]
 328              		.loc 1 173 7 view .LVU93
 329 0022 E2B1     		cbz	r2, .L34
 330              	.L26:
 331              		.loc 1 173 75 discriminator 3 view .LVU94
 332 0024 93F88F20 		ldrb	r2, [r3, #143]	@ zero_extendqisi2
 333              		.loc 1 173 69 discriminator 3 view .LVU95
 334 0028 002A     		cmp	r2, #0
 335 002a 41D1     		bne	.L31
 174:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 336              		.loc 1 174 9 is_stmt 1 view .LVU96
 337              		.loc 1 174 43 is_stmt 0 view .LVU97
 338 002c 83F89020 		strb	r2, [r3, #144]
 175:Core/Src/nyan_os.c ****         
 176:Core/Src/nyan_os.c ****         // Lets begin to process the chunks
 177:Core/Src/nyan_os.c ****         if(nos->tx_chunk == total_chunks - 1) { // This would be the processing of the last chunk
 339              		.loc 1 177 9 is_stmt 1 view .LVU98
 340              		.loc 1 177 15 is_stmt 0 view .LVU99
 341 0030 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 342 0034 D2B2     		uxtb	r2, r2
 343              		.loc 1 177 42 view .LVU100
 344 0036 00F1FF3C 		add	ip, r0, #-1
 345              		.loc 1 177 11 view .LVU101
 346 003a 6245     		cmp	r2, ip
 347 003c 15D0     		beq	.L35
 178:Core/Src/nyan_os.c ****             length = nos->tx_chunks_partial_bytes;
 179:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 180:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 348              		.loc 1 180 16 is_stmt 1 view .LVU102
 349              		.loc 1 180 23 is_stmt 0 view .LVU103
 350 003e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 351 0042 D2B2     		uxtb	r2, r2
 352              		.loc 1 180 19 view .LVU104
 353 0044 9445     		cmp	ip, r2
 354 0046 31DD     		ble	.L32
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 355              		.loc 1 181 13 is_stmt 1 view .LVU105
 356              	.LVL31:
 182:Core/Src/nyan_os.c ****             nos->tx_bulk_transfer_in_progress = true;
ARM GAS  /tmp/ccxXT9BN.s 			page 11


 357              		.loc 1 182 13 view .LVU106
 358              		.loc 1 182 47 is_stmt 0 view .LVU107
 359 0048 0122     		movs	r2, #1
 360 004a 83F89020 		strb	r2, [r3, #144]
 183:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 361              		.loc 1 183 13 is_stmt 1 view .LVU108
 362              		.loc 1 183 18 is_stmt 0 view .LVU109
 363 004e 93F89320 		ldrb	r2, [r3, #147]	@ zero_extendqisi2
 364              		.loc 1 183 13 view .LVU110
 365 0052 0132     		adds	r2, r2, #1
 366 0054 D2B2     		uxtb	r2, r2
 367 0056 83F89320 		strb	r2, [r3, #147]
 181:Core/Src/nyan_os.c ****             length = _NYAN_CDC_TX_MAX_LEN;
 368              		.loc 1 181 20 view .LVU111
 369 005a 8022     		movs	r2, #128
 370 005c 10E0     		b	.L28
 371              	.LVL32:
 372              	.L34:
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 373              		.loc 1 173 57 discriminator 2 view .LVU112
 374 005e D3F89820 		ldr	r2, [r3, #152]
 173:Core/Src/nyan_os.c ****         nos->tx_bulk_transfer_in_progress = false;
 375              		.loc 1 173 40 discriminator 2 view .LVU113
 376 0062 002A     		cmp	r2, #0
 377 0064 DED1     		bne	.L26
 184:Core/Src/nyan_os.c ****         }
 185:Core/Src/nyan_os.c **** 
 186:Core/Src/nyan_os.c ****         // If we have reach the end reset everything
 187:Core/Src/nyan_os.c ****         if (nos->tx_chunk > total_chunks - 1) {
 188:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_solid = 0;
 190:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 191:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 192:Core/Src/nyan_os.c ****         }
 193:Core/Src/nyan_os.c **** 
 194:Core/Src/nyan_os.c ****         CDC_Transmit(nos->cdc_ch, nos->tx_buffer.p_array + address_offset, length);
 195:Core/Src/nyan_os.c ****     }
 196:Core/Src/nyan_os.c ****     
 197:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 378              		.loc 1 197 12 view .LVU114
 379 0066 0120     		movs	r0, #1
 380              	.LVL33:
 381              		.loc 1 197 12 view .LVU115
 382 0068 23E0     		b	.L25
 383              	.LVL34:
 384              	.L35:
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 385              		.loc 1 178 13 is_stmt 1 view .LVU116
 178:Core/Src/nyan_os.c ****             ++nos->tx_chunk;
 386              		.loc 1 178 20 is_stmt 0 view .LVU117
 387 006a 93F89220 		ldrb	r2, [r3, #146]	@ zero_extendqisi2
 388 006e D2B2     		uxtb	r2, r2
 389              	.LVL35:
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 390              		.loc 1 179 13 is_stmt 1 view .LVU118
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 391              		.loc 1 179 18 is_stmt 0 view .LVU119
ARM GAS  /tmp/ccxXT9BN.s 			page 12


 392 0070 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 179:Core/Src/nyan_os.c ****         } else if (nos->tx_chunk < total_chunks - 1) {
 393              		.loc 1 179 13 view .LVU120
 394 0074 0CF1010C 		add	ip, ip, #1
 395 0078 5FFA8CFC 		uxtb	ip, ip
 396 007c 83F893C0 		strb	ip, [r3, #147]
 397              	.LVL36:
 398              	.L28:
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 399              		.loc 1 187 9 is_stmt 1 view .LVU121
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 400              		.loc 1 187 16 is_stmt 0 view .LVU122
 401 0080 93F893C0 		ldrb	ip, [r3, #147]	@ zero_extendqisi2
 402 0084 5FFA8CFC 		uxtb	ip, ip
 187:Core/Src/nyan_os.c ****             // Set all of the counter values to 0; Once we have cleared the buffer.
 403              		.loc 1 187 12 view .LVU123
 404 0088 8445     		cmp	ip, r0
 405 008a 06D3     		bcc	.L29
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 406              		.loc 1 189 13 is_stmt 1 view .LVU124
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 407              		.loc 1 189 34 is_stmt 0 view .LVU125
 408 008c 0020     		movs	r0, #0
 409              	.LVL37:
 189:Core/Src/nyan_os.c ****             nos->tx_chunks_partial_bytes = 0;
 410              		.loc 1 189 34 view .LVU126
 411 008e 83F89100 		strb	r0, [r3, #145]
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 412              		.loc 1 190 13 is_stmt 1 view .LVU127
 190:Core/Src/nyan_os.c ****             nos->tx_chunk = 0;
 413              		.loc 1 190 42 is_stmt 0 view .LVU128
 414 0092 83F89200 		strb	r0, [r3, #146]
 191:Core/Src/nyan_os.c ****         }
 415              		.loc 1 191 13 is_stmt 1 view .LVU129
 191:Core/Src/nyan_os.c ****         }
 416              		.loc 1 191 27 is_stmt 0 view .LVU130
 417 0096 83F89300 		strb	r0, [r3, #147]
 418              	.L29:
 194:Core/Src/nyan_os.c ****     }
 419              		.loc 1 194 9 is_stmt 1 view .LVU131
 420 009a 93F88E00 		ldrb	r0, [r3, #142]	@ zero_extendqisi2
 194:Core/Src/nyan_os.c ****     }
 421              		.loc 1 194 49 is_stmt 0 view .LVU132
 422 009e D3F89430 		ldr	r3, [r3, #148]
 423              	.LVL38:
 194:Core/Src/nyan_os.c ****     }
 424              		.loc 1 194 9 view .LVU133
 425 00a2 1944     		add	r1, r1, r3
 426              	.LVL39:
 194:Core/Src/nyan_os.c ****     }
 427              		.loc 1 194 9 view .LVU134
 428 00a4 FFF7FEFF 		bl	CDC_Transmit
 429              	.LVL40:
 430              		.loc 1 197 12 view .LVU135
 431 00a8 0120     		movs	r0, #1
 432 00aa 02E0     		b	.L25
 433              	.LVL41:
ARM GAS  /tmp/ccxXT9BN.s 			page 13


 434              	.L32:
 159:Core/Src/nyan_os.c ****     uint32_t address_offset = nos->tx_chunk * _NYAN_CDC_TX_MAX_LEN;
 435              		.loc 1 159 13 view .LVU136
 436 00ac 0022     		movs	r2, #0
 437 00ae E7E7     		b	.L28
 438              	.L31:
 439              		.loc 1 197 12 view .LVU137
 440 00b0 0120     		movs	r0, #1
 441              	.LVL42:
 442              	.L25:
 198:Core/Src/nyan_os.c **** }
 443              		.loc 1 198 1 view .LVU138
 444 00b2 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE150:
 448              		.section	.text.NyanExeGetinfo,"ax",%progbits
 449              		.align	1
 450              		.global	NyanExeGetinfo
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	NyanExeGetinfo:
 456              	.LVL43:
 457              	.LFB154:
 199:Core/Src/nyan_os.c **** 
 200:Core/Src/nyan_os.c **** NyanReturn NyanDecode(volatile NyanOS* nos)
 201:Core/Src/nyan_os.c **** {
 202:Core/Src/nyan_os.c ****     // First set the nos state to idle
 203:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 204:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 205:Core/Src/nyan_os.c ****     for (uint8_t cmd_idx = 0; cmd_idx < _NYAN_NUM_COMMANDS; ++cmd_idx) {
 206:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 207:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 208:Core/Src/nyan_os.c ****         if (_NYAN_CMD_BUF_LEN >= command_len && memcmp((const char*)nos->command_buffer, nyan_comma
 209:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 210:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 211:Core/Src/nyan_os.c ****             nos->exe = (NyanExe)cmd_idx;
 212:Core/Src/nyan_os.c ****             break;
 213:Core/Src/nyan_os.c ****         } else {
 214:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_COMMAND_NOT_SUPPORTED;
 215:Core/Src/nyan_os.c ****         }
 216:Core/Src/nyan_os.c ****     }
 217:Core/Src/nyan_os.c **** 
 218:Core/Src/nyan_os.c ****     // If no command is matched, return some indication (e.g., NULL or a specific error string)
 219:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 220:Core/Src/nyan_os.c **** }
 221:Core/Src/nyan_os.c **** 
 222:Core/Src/nyan_os.c **** NyanReturn NyanExecute(volatile NyanOS* nos) {
 223:Core/Src/nyan_os.c ****     switch(nos->exe) {
 224:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 225:Core/Src/nyan_os.c ****             NyanExeGetinfo(nos);
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 227:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 228:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 229:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 230:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 231:Core/Src/nyan_os.c ****             NyanExeSetOwner(nos);
ARM GAS  /tmp/ccxXT9BN.s 			page 14


 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 233:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 234:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 235:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 236:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 237:Core/Src/nyan_os.c ****             HAL_TIM_OC_Stop_IT(&htim8, TIM_CHANNEL_1);
 238:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 239:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 240:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 241:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 242:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 243:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 244:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 245:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 246:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 247:Core/Src/nyan_os.c ****         case NYAN_EXE_COMMAND_NOT_SUPPORTED :
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_unknown_command[0], sizeof(nyan_keys_unknown_command))
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 250:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 251:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 252:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 253:Core/Src/nyan_os.c ****         default:
 254:Core/Src/nyan_os.c ****             // The execution state is out of bounds correct this.
 255:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 256:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 257:Core/Src/nyan_os.c ****     }
 258:Core/Src/nyan_os.c **** }
 259:Core/Src/nyan_os.c **** 
 260:Core/Src/nyan_os.c **** NyanReturn NyanDecodeArgs(volatile NyanOS* nos)
 261:Core/Src/nyan_os.c **** {
 262:Core/Src/nyan_os.c ****     if (!nos) {
 263:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 264:Core/Src/nyan_os.c ****     }
 265:Core/Src/nyan_os.c **** 
 266:Core/Src/nyan_os.c ****     // Destroy any previous allocated arguments
 267:Core/Src/nyan_os.c ****     FreeNyanCommandArgs(nos);
 268:Core/Src/nyan_os.c **** 
 269:Core/Src/nyan_os.c ****     nos->command_buffer[_NYAN_CMD_BUF_LEN] = '\0';
 270:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 271:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 272:Core/Src/nyan_os.c **** 
 273:Core/Src/nyan_os.c ****     int arg_count = 0;
 274:Core/Src/nyan_os.c ****     while (token != NULL) {
 275:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 276:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 277:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 278:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 279:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 280:Core/Src/nyan_os.c ****                 for (int i = 0; i < arg_count; ++i) {
 281:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 282:Core/Src/nyan_os.c ****                 }
 283:Core/Src/nyan_os.c ****                 return NOS_FAILURE;
 284:Core/Src/nyan_os.c ****             }
 285:Core/Src/nyan_os.c ****             strcpy((char *)nos->command_arg_buffer[arg_count], token);
 286:Core/Src/nyan_os.c ****             arg_count++;
 287:Core/Src/nyan_os.c ****         }
 288:Core/Src/nyan_os.c ****         token = strtok(NULL, delimiter);
ARM GAS  /tmp/ccxXT9BN.s 			page 15


 289:Core/Src/nyan_os.c ****     }
 290:Core/Src/nyan_os.c **** 
 291:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = arg_count;
 292:Core/Src/nyan_os.c **** 
 293:Core/Src/nyan_os.c ****     // Nullify the command buffer
 294:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 295:Core/Src/nyan_os.c **** 
 296:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 297:Core/Src/nyan_os.c **** }
 298:Core/Src/nyan_os.c **** 
 299:Core/Src/nyan_os.c **** NyanReturn NyanExeGetinfo(volatile NyanOS* nos)
 300:Core/Src/nyan_os.c **** {
 458              		.loc 1 300 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 64
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 300 1 is_stmt 0 view .LVU140
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI6:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 90B0     		sub	sp, sp, #64
 469              	.LCFI7:
 470              		.cfi_def_cfa_offset 72
 471 0004 0446     		mov	r4, r0
 301:Core/Src/nyan_os.c ****     // We need to fetch the owners name from the eeprom
 302:Core/Src/nyan_os.c ****     EepromRead(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 472              		.loc 1 302 5 is_stmt 1 view .LVU141
 473 0006 4068     		ldr	r0, [r0, #4]
 474              	.LVL44:
 475              		.loc 1 302 5 is_stmt 0 view .LVU142
 476 0008 4023     		movs	r3, #64
 477 000a 2022     		movs	r2, #32
 478 000c 0021     		movs	r1, #0
 479 000e FFF7FEFF 		bl	EepromRead
 480              	.LVL45:
 303:Core/Src/nyan_os.c **** 
 304:Core/Src/nyan_os.c ****     // This has to be polling until callbacks are improved
 305:Core/Src/nyan_os.c ****     while(nos->eeprom->rx_inflight){}
 481              		.loc 1 305 5 is_stmt 1 view .LVU143
 482              	.L37:
 483              		.loc 1 305 37 discriminator 1 view .LVU144
 484              		.loc 1 305 10 discriminator 1 view .LVU145
 485              		.loc 1 305 14 is_stmt 0 discriminator 1 view .LVU146
 486 0012 6368     		ldr	r3, [r4, #4]
 487              		.loc 1 305 22 discriminator 1 view .LVU147
 488 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 489              		.loc 1 305 10 discriminator 1 view .LVU148
 490 0016 002B     		cmp	r3, #0
 491 0018 FBD1     		bne	.L37
 306:Core/Src/nyan_os.c **** 
 307:Core/Src/nyan_os.c ****     // Ensure data from EEPROM is null-terminated
 308:Core/Src/nyan_os.c ****     nos->eeprom->rx_buf[SIZE_BOARD_OWNER - 1] = '\0';
 492              		.loc 1 308 5 is_stmt 1 view .LVU149
 493              		.loc 1 308 8 is_stmt 0 view .LVU150
 494 001a 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/ccxXT9BN.s 			page 16


 495              		.loc 1 308 47 view .LVU151
 496 001c 0022     		movs	r2, #0
 497 001e 83F8C420 		strb	r2, [r3, #196]
 309:Core/Src/nyan_os.c **** 
 310:Core/Src/nyan_os.c ****     char owner[SIZE_BOARD_OWNER];
 498              		.loc 1 310 5 is_stmt 1 view .LVU152
 311:Core/Src/nyan_os.c ****     strncpy(owner, (const char *)nos->eeprom->rx_buf, SIZE_BOARD_OWNER);
 499              		.loc 1 311 5 view .LVU153
 500              		.loc 1 311 37 is_stmt 0 view .LVU154
 501 0022 6168     		ldr	r1, [r4, #4]
 502              		.loc 1 311 5 view .LVU155
 503 0024 4022     		movs	r2, #64
 504 0026 8531     		adds	r1, r1, #133
 505 0028 6846     		mov	r0, sp
 506 002a FFF7FEFF 		bl	strncpy
 507              	.LVL46:
 312:Core/Src/nyan_os.c **** 
 313:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo[0], sizeof(nyan_keys_getinfo));
 508              		.loc 1 313 5 is_stmt 1 view .LVU156
 509 002e 3822     		movs	r2, #56
 510 0030 0C49     		ldr	r1, .L39
 511 0032 2046     		mov	r0, r4
 512 0034 FFF7FEFF 		bl	NyanPrint
 513              	.LVL47:
 314:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo_owner[0], sizeof(nyan_keys_getinfo_owner));
 514              		.loc 1 314 5 view .LVU157
 515 0038 0822     		movs	r2, #8
 516 003a 0B49     		ldr	r1, .L39+4
 517 003c 2046     		mov	r0, r4
 518 003e FFF7FEFF 		bl	NyanPrint
 519              	.LVL48:
 315:Core/Src/nyan_os.c ****     NyanPrint(nos, owner, strlen(owner));
 520              		.loc 1 315 5 view .LVU158
 521 0042 6846     		mov	r0, sp
 522 0044 FFF7FEFF 		bl	strlen
 523              	.LVL49:
 524 0048 0246     		mov	r2, r0
 525 004a 6946     		mov	r1, sp
 526 004c 2046     		mov	r0, r4
 527 004e FFF7FEFF 		bl	NyanPrint
 528              	.LVL50:
 316:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 529              		.loc 1 316 5 view .LVU159
 530 0052 0322     		movs	r2, #3
 531 0054 0549     		ldr	r1, .L39+8
 532 0056 2046     		mov	r0, r4
 533 0058 FFF7FEFF 		bl	NyanPrint
 534              	.LVL51:
 317:Core/Src/nyan_os.c **** 
 318:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 535              		.loc 1 318 5 view .LVU160
 319:Core/Src/nyan_os.c **** }
 536              		.loc 1 319 1 is_stmt 0 view .LVU161
 537 005c 0120     		movs	r0, #1
 538 005e 10B0     		add	sp, sp, #64
 539              	.LCFI8:
 540              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccxXT9BN.s 			page 17


 541              		@ sp needed
 542 0060 10BD     		pop	{r4, pc}
 543              	.LVL52:
 544              	.L40:
 545              		.loc 1 319 1 view .LVU162
 546 0062 00BF     		.align	2
 547              	.L39:
 548 0064 00000000 		.word	.LANCHOR2
 549 0068 00000000 		.word	.LANCHOR3
 550 006c 00000000 		.word	.LANCHOR4
 551              		.cfi_endproc
 552              	.LFE154:
 554              		.section	.text.NyanExeSetOwner,"ax",%progbits
 555              		.align	1
 556              		.global	NyanExeSetOwner
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 561              	NyanExeSetOwner:
 562              	.LVL53:
 563              	.LFB155:
 320:Core/Src/nyan_os.c **** 
 321:Core/Src/nyan_os.c **** NyanReturn NyanExeSetOwner(volatile NyanOS* nos) 
 322:Core/Src/nyan_os.c **** {
 564              		.loc 1 322 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		.loc 1 322 1 is_stmt 0 view .LVU164
 569 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 570              	.LCFI9:
 571              		.cfi_def_cfa_offset 24
 572              		.cfi_offset 4, -24
 573              		.cfi_offset 5, -20
 574              		.cfi_offset 6, -16
 575              		.cfi_offset 7, -12
 576              		.cfi_offset 8, -8
 577              		.cfi_offset 14, -4
 323:Core/Src/nyan_os.c ****     if (!nos) {
 578              		.loc 1 323 5 is_stmt 1 view .LVU165
 579              		.loc 1 323 8 is_stmt 0 view .LVU166
 580 0004 0028     		cmp	r0, #0
 581 0006 78D0     		beq	.L54
 582 0008 0446     		mov	r4, r0
 324:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle null pointer
 325:Core/Src/nyan_os.c ****     }
 326:Core/Src/nyan_os.c **** 
 327:Core/Src/nyan_os.c ****     if (nos->command_buffer_num_args < 2) {
 583              		.loc 1 327 5 is_stmt 1 view .LVU167
 584              		.loc 1 327 12 is_stmt 0 view .LVU168
 585 000a 90F88D30 		ldrb	r3, [r0, #141]	@ zero_extendqisi2
 586 000e DBB2     		uxtb	r3, r3
 587              		.loc 1 327 8 view .LVU169
 588 0010 012B     		cmp	r3, #1
 589 0012 74D9     		bls	.L55
 590              	.LBB4:
 328:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Not enough args
ARM GAS  /tmp/ccxXT9BN.s 			page 18


 329:Core/Src/nyan_os.c ****     }
 330:Core/Src/nyan_os.c **** 
 331:Core/Src/nyan_os.c ****     size_t total_chars = 0;
 332:Core/Src/nyan_os.c **** 
 333:Core/Src/nyan_os.c ****     // Calculate total length needed, including spaces between arguments
 334:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 591              		.loc 1 334 14 view .LVU170
 592 0014 0125     		movs	r5, #1
 593              	.LBE4:
 331:Core/Src/nyan_os.c **** 
 594              		.loc 1 331 12 view .LVU171
 595 0016 0026     		movs	r6, #0
 596 0018 09E0     		b	.L43
 597              	.LVL54:
 598              	.L45:
 599              	.LBB5:
 335:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 600              		.loc 1 335 9 is_stmt 1 discriminator 4 view .LVU172
 601              		.loc 1 335 62 is_stmt 0 discriminator 4 view .LVU173
 602 001a 05F1AA03 		add	r3, r5, #170
 603 001e 04EB8303 		add	r3, r4, r3, lsl #2
 604 0022 5868     		ldr	r0, [r3, #4]
 605              		.loc 1 335 24 discriminator 4 view .LVU174
 606 0024 FFF7FEFF 		bl	strlen
 607              	.LVL55:
 608              		.loc 1 335 67 discriminator 4 view .LVU175
 609 0028 0130     		adds	r0, r0, #1
 610              		.loc 1 335 21 discriminator 4 view .LVU176
 611 002a 0644     		add	r6, r6, r0
 612              	.LVL56:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 613              		.loc 1 334 93 is_stmt 1 discriminator 4 view .LVU177
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 614              		.loc 1 334 94 is_stmt 0 discriminator 4 view .LVU178
 615 002c 0135     		adds	r5, r5, #1
 616              	.LVL57:
 617              	.L43:
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 618              		.loc 1 334 21 is_stmt 1 discriminator 1 view .LVU179
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 619              		.loc 1 334 28 is_stmt 0 discriminator 1 view .LVU180
 620 002e 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 621 0032 DBB2     		uxtb	r3, r3
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 622              		.loc 1 334 5 discriminator 1 view .LVU181
 623 0034 AB42     		cmp	r3, r5
 624 0036 06DD     		ble	.L44
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 625              		.loc 1 334 80 discriminator 3 view .LVU182
 626 0038 05F1AA03 		add	r3, r5, #170
 627 003c 04EB8303 		add	r3, r4, r3, lsl #2
 628 0040 5B68     		ldr	r3, [r3, #4]
 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 629              		.loc 1 334 54 discriminator 3 view .LVU183
 630 0042 002B     		cmp	r3, #0
 631 0044 E9D1     		bne	.L45
 632              	.L44:
ARM GAS  /tmp/ccxXT9BN.s 			page 19


 334:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 633              		.loc 1 334 54 discriminator 3 view .LVU184
 634              	.LBE5:
 336:Core/Src/nyan_os.c ****     }
 337:Core/Src/nyan_os.c **** 
 338:Core/Src/nyan_os.c ****     // Since the size cant exceed 63 chars with null terminator 
 339:Core/Src/nyan_os.c ****     if (total_chars > SIZE_BOARD_OWNER - nos->command_buffer_num_args - 1  || total_chars == 0) {
 635              		.loc 1 339 5 is_stmt 1 view .LVU185
 636              		.loc 1 339 45 is_stmt 0 view .LVU186
 637 0046 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 638              		.loc 1 339 71 view .LVU187
 639 004a C3F13F03 		rsb	r3, r3, #63
 640              		.loc 1 339 8 view .LVU188
 641 004e B342     		cmp	r3, r6
 642 0050 59D3     		bcc	.L56
 643              		.loc 1 339 76 discriminator 1 view .LVU189
 644 0052 0EB9     		cbnz	r6, .L61
 340:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Would overflow memory boundaries 
 645              		.loc 1 340 16 view .LVU190
 646 0054 0026     		movs	r6, #0
 647              	.LVL58:
 648              		.loc 1 340 16 view .LVU191
 649 0056 53E0     		b	.L42
 650              	.LVL59:
 651              	.L61:
 341:Core/Src/nyan_os.c ****     }
 342:Core/Src/nyan_os.c **** 
 343:Core/Src/nyan_os.c ****     // Allocate memory for the new owner name
 344:Core/Src/nyan_os.c ****     char* owners_name = (char*)malloc(SIZE_BOARD_OWNER);
 652              		.loc 1 344 5 is_stmt 1 view .LVU192
 653              		.loc 1 344 32 is_stmt 0 view .LVU193
 654 0058 4020     		movs	r0, #64
 655 005a FFF7FEFF 		bl	malloc
 656              	.LVL60:
 345:Core/Src/nyan_os.c ****     if (!owners_name) {
 657              		.loc 1 345 5 is_stmt 1 view .LVU194
 658              		.loc 1 345 8 is_stmt 0 view .LVU195
 659 005e 0546     		mov	r5, r0
 660              	.LVL61:
 661              		.loc 1 345 8 view .LVU196
 662 0060 0028     		cmp	r0, #0
 663 0062 52D0     		beq	.L58
 664              	.LBB6:
 346:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle allocation failure
 347:Core/Src/nyan_os.c ****     }
 348:Core/Src/nyan_os.c **** 
 349:Core/Src/nyan_os.c ****     // Zero out the SIZE_BOARD_OWNER bytes
 350:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i) {
 665              		.loc 1 350 14 view .LVU197
 666 0064 0023     		movs	r3, #0
 667 0066 02E0     		b	.L46
 668              	.LVL62:
 669              	.L47:
 351:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 670              		.loc 1 351 9 is_stmt 1 discriminator 3 view .LVU198
 671              		.loc 1 351 24 is_stmt 0 discriminator 3 view .LVU199
 672 0068 0022     		movs	r2, #0
ARM GAS  /tmp/ccxXT9BN.s 			page 20


 673 006a EA54     		strb	r2, [r5, r3]
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 674              		.loc 1 350 43 is_stmt 1 discriminator 3 view .LVU200
 675 006c 0133     		adds	r3, r3, #1
 676              	.LVL63:
 677              	.L46:
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 678              		.loc 1 350 21 discriminator 1 view .LVU201
 350:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 679              		.loc 1 350 5 is_stmt 0 discriminator 1 view .LVU202
 680 006e 3F2B     		cmp	r3, #63
 681 0070 FADD     		ble	.L47
 682              	.LBE6:
 352:Core/Src/nyan_os.c ****     }
 353:Core/Src/nyan_os.c **** 
 354:Core/Src/nyan_os.c ****     // Concatenate arguments with spaces
 355:Core/Src/nyan_os.c ****     char* current_pos = owners_name;
 683              		.loc 1 355 11 view .LVU203
 684 0072 A846     		mov	r8, r5
 685              	.LBB7:
 356:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 686              		.loc 1 356 14 view .LVU204
 687 0074 0126     		movs	r6, #1
 688              	.LVL64:
 689              		.loc 1 356 14 view .LVU205
 690 0076 00E0     		b	.L48
 691              	.LVL65:
 692              	.L49:
 693              		.loc 1 356 93 is_stmt 1 discriminator 2 view .LVU206
 694              		.loc 1 356 94 is_stmt 0 discriminator 2 view .LVU207
 695 0078 0136     		adds	r6, r6, #1
 696              	.LVL66:
 697              	.L48:
 698              		.loc 1 356 21 is_stmt 1 discriminator 1 view .LVU208
 699              		.loc 1 356 28 is_stmt 0 discriminator 1 view .LVU209
 700 007a 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 701 007e DBB2     		uxtb	r3, r3
 702              		.loc 1 356 5 discriminator 1 view .LVU210
 703 0080 B342     		cmp	r3, r6
 704 0082 21DD     		ble	.L50
 705              		.loc 1 356 80 discriminator 3 view .LVU211
 706 0084 06F1AA03 		add	r3, r6, #170
 707 0088 04EB8303 		add	r3, r4, r3, lsl #2
 708 008c 5B68     		ldr	r3, [r3, #4]
 709              		.loc 1 356 54 discriminator 3 view .LVU212
 710 008e DBB1     		cbz	r3, .L50
 357:Core/Src/nyan_os.c ****         strcpy(current_pos, (char *)nos->command_arg_buffer[i]);
 711              		.loc 1 357 9 is_stmt 1 view .LVU213
 712              		.loc 1 357 60 is_stmt 0 view .LVU214
 713 0090 06F1AA07 		add	r7, r6, #170
 714 0094 04EB8707 		add	r7, r4, r7, lsl #2
 715 0098 7968     		ldr	r1, [r7, #4]
 716              		.loc 1 357 9 view .LVU215
 717 009a 4046     		mov	r0, r8
 718 009c FFF7FEFF 		bl	strcpy
 719              	.LVL67:
 358:Core/Src/nyan_os.c ****         current_pos += strlen((char *)nos->command_arg_buffer[i]);
ARM GAS  /tmp/ccxXT9BN.s 			page 21


 720              		.loc 1 358 9 is_stmt 1 view .LVU216
 721              		.loc 1 358 62 is_stmt 0 view .LVU217
 722 00a0 7868     		ldr	r0, [r7, #4]
 723              		.loc 1 358 24 view .LVU218
 724 00a2 FFF7FEFF 		bl	strlen
 725              	.LVL68:
 726              		.loc 1 358 21 view .LVU219
 727 00a6 8044     		add	r8, r8, r0
 728              	.LVL69:
 359:Core/Src/nyan_os.c **** 
 360:Core/Src/nyan_os.c ****         // Add a space after each argument, except the last one
 361:Core/Src/nyan_os.c ****         if (i < nos->command_buffer_num_args - 1 && nos->command_arg_buffer[i + 1] != NULL) {
 729              		.loc 1 361 9 is_stmt 1 view .LVU220
 730              		.loc 1 361 20 is_stmt 0 view .LVU221
 731 00a8 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 732              		.loc 1 361 46 view .LVU222
 733 00ac 013B     		subs	r3, r3, #1
 734              		.loc 1 361 12 view .LVU223
 735 00ae B342     		cmp	r3, r6
 736 00b0 E2DD     		ble	.L49
 737              		.loc 1 361 76 discriminator 1 view .LVU224
 738 00b2 06F1AB03 		add	r3, r6, #171
 739 00b6 04EB8303 		add	r3, r4, r3, lsl #2
 740 00ba 5B68     		ldr	r3, [r3, #4]
 741              		.loc 1 361 50 discriminator 1 view .LVU225
 742 00bc 002B     		cmp	r3, #0
 743 00be DBD0     		beq	.L49
 362:Core/Src/nyan_os.c ****             *current_pos = ' ';
 744              		.loc 1 362 13 is_stmt 1 view .LVU226
 745              		.loc 1 362 26 is_stmt 0 view .LVU227
 746 00c0 2023     		movs	r3, #32
 747 00c2 08F8013B 		strb	r3, [r8], #1
 748              	.LVL70:
 363:Core/Src/nyan_os.c ****             current_pos++;
 749              		.loc 1 363 13 is_stmt 1 view .LVU228
 750              		.loc 1 363 13 is_stmt 0 view .LVU229
 751 00c6 D7E7     		b	.L49
 752              	.L50:
 753              		.loc 1 363 13 view .LVU230
 754              	.LBE7:
 364:Core/Src/nyan_os.c ****         }
 365:Core/Src/nyan_os.c ****     }
 366:Core/Src/nyan_os.c **** 
 367:Core/Src/nyan_os.c ****     // First lets clear out the TX buff
 368:Core/Src/nyan_os.c ****     if(EepromFlushTxBuff(nos->eeprom) != EEPROM_SUCCESS){
 755              		.loc 1 368 5 is_stmt 1 view .LVU231
 756              		.loc 1 368 8 is_stmt 0 view .LVU232
 757 00c8 6068     		ldr	r0, [r4, #4]
 758 00ca FFF7FEFF 		bl	EepromFlushTxBuff
 759              	.LVL71:
 760 00ce 0646     		mov	r6, r0
 761              	.LVL72:
 762              		.loc 1 368 7 view .LVU233
 763 00d0 0128     		cmp	r0, #1
 764 00d2 1CD1     		bne	.L59
 765              	.LBB8:
 369:Core/Src/nyan_os.c ****         return NOS_FAILURE;
ARM GAS  /tmp/ccxXT9BN.s 			page 22


 370:Core/Src/nyan_os.c ****     }
 371:Core/Src/nyan_os.c **** 
 372:Core/Src/nyan_os.c ****     // Second lets copy our new buffer over to the EEPROM driver
 373:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i){
 766              		.loc 1 373 14 view .LVU234
 767 00d4 0023     		movs	r3, #0
 768              	.L52:
 769              	.LVL73:
 770              		.loc 1 373 21 is_stmt 1 discriminator 1 view .LVU235
 771              		.loc 1 373 5 is_stmt 0 discriminator 1 view .LVU236
 772 00d6 3F2B     		cmp	r3, #63
 773 00d8 05DC     		bgt	.L62
 374:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 774              		.loc 1 374 9 is_stmt 1 discriminator 3 view .LVU237
 775              		.loc 1 374 12 is_stmt 0 discriminator 3 view .LVU238
 776 00da 6268     		ldr	r2, [r4, #4]
 777              		.loc 1 374 46 discriminator 3 view .LVU239
 778 00dc E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 779              		.loc 1 374 33 discriminator 3 view .LVU240
 780 00de 1A44     		add	r2, r2, r3
 781 00e0 5171     		strb	r1, [r2, #5]
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 782              		.loc 1 373 43 is_stmt 1 discriminator 3 view .LVU241
 783 00e2 0133     		adds	r3, r3, #1
 784              	.LVL74:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 785              		.loc 1 373 43 is_stmt 0 discriminator 3 view .LVU242
 786 00e4 F7E7     		b	.L52
 787              	.L62:
 373:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 788              		.loc 1 373 43 discriminator 3 view .LVU243
 789              	.LBE8:
 375:Core/Src/nyan_os.c ****     }
 376:Core/Src/nyan_os.c **** 
 377:Core/Src/nyan_os.c ****     // Free up the allocated memory
 378:Core/Src/nyan_os.c ****     free(owners_name);
 790              		.loc 1 378 5 is_stmt 1 view .LVU244
 791 00e6 2846     		mov	r0, r5
 792 00e8 FFF7FEFF 		bl	free
 793              	.LVL75:
 379:Core/Src/nyan_os.c **** 
 380:Core/Src/nyan_os.c ****     // Write the name to the eeprom, the delay exists to ensure the write, later the callback can b
 381:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 794              		.loc 1 381 5 view .LVU245
 795 00ec 6068     		ldr	r0, [r4, #4]
 796 00ee 4023     		movs	r3, #64
 797 00f0 2022     		movs	r2, #32
 798 00f2 0021     		movs	r1, #0
 799 00f4 FFF7FEFF 		bl	EepromWrite
 800              	.LVL76:
 382:Core/Src/nyan_os.c **** 
 383:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 801              		.loc 1 383 5 view .LVU246
 802              		.loc 1 383 12 is_stmt 0 view .LVU247
 803 00f8 02E0     		b	.L42
 804              	.LVL77:
 805              	.L54:
ARM GAS  /tmp/ccxXT9BN.s 			page 23


 324:Core/Src/nyan_os.c ****     }
 806              		.loc 1 324 16 view .LVU248
 807 00fa 0026     		movs	r6, #0
 808 00fc 00E0     		b	.L42
 809              	.L55:
 328:Core/Src/nyan_os.c ****     }
 810              		.loc 1 328 16 view .LVU249
 811 00fe 0026     		movs	r6, #0
 812              	.LVL78:
 813              	.L42:
 384:Core/Src/nyan_os.c **** }
 814              		.loc 1 384 1 view .LVU250
 815 0100 3046     		mov	r0, r6
 816 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 817              	.LVL79:
 818              	.L56:
 340:Core/Src/nyan_os.c ****     }
 819              		.loc 1 340 16 view .LVU251
 820 0106 0026     		movs	r6, #0
 821              	.LVL80:
 340:Core/Src/nyan_os.c ****     }
 822              		.loc 1 340 16 view .LVU252
 823 0108 FAE7     		b	.L42
 824              	.LVL81:
 825              	.L58:
 346:Core/Src/nyan_os.c ****     }
 826              		.loc 1 346 16 view .LVU253
 827 010a 0026     		movs	r6, #0
 828              	.LVL82:
 346:Core/Src/nyan_os.c ****     }
 829              		.loc 1 346 16 view .LVU254
 830 010c F8E7     		b	.L42
 831              	.LVL83:
 832              	.L59:
 369:Core/Src/nyan_os.c ****     }
 833              		.loc 1 369 16 view .LVU255
 834 010e 0026     		movs	r6, #0
 835 0110 F6E7     		b	.L42
 836              		.cfi_endproc
 837              	.LFE155:
 839              		.section	.rodata.NyanExeWriteFpgaBitstream.str1.4,"aMS",%progbits,1
 840              		.align	2
 841              	.LC0:
 842 0000 25303278 		.ascii	"%02x\000"
 842      00
 843              		.section	.text.NyanExeWriteFpgaBitstream,"ax",%progbits
 844              		.align	1
 845              		.global	NyanExeWriteFpgaBitstream
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 850              	NyanExeWriteFpgaBitstream:
 851              	.LVL84:
 852              	.LFB156:
 385:Core/Src/nyan_os.c **** 
 386:Core/Src/nyan_os.c **** NyanReturn NyanExeWriteFpgaBitstream(volatile NyanOS* nos)
 387:Core/Src/nyan_os.c **** {
ARM GAS  /tmp/ccxXT9BN.s 			page 24


 853              		.loc 1 387 1 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 232
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 389:Core/Src/nyan_os.c ****     if(nos->state == DIRECT_BUFFER_ACCESS)
 857              		.loc 1 389 5 view .LVU257
 858              		.loc 1 389 11 is_stmt 0 view .LVU258
 859 0000 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 860 0002 DBB2     		uxtb	r3, r3
 861              		.loc 1 389 7 view .LVU259
 862 0004 022B     		cmp	r3, #2
 863 0006 00F0E380 		beq	.L85
 387:Core/Src/nyan_os.c ****     // If we get here an are already in direct buffer access mode; FAIL
 864              		.loc 1 387 1 view .LVU260
 865 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 866              	.LCFI10:
 867              		.cfi_def_cfa_offset 28
 868              		.cfi_offset 4, -28
 869              		.cfi_offset 5, -24
 870              		.cfi_offset 6, -20
 871              		.cfi_offset 7, -16
 872              		.cfi_offset 8, -12
 873              		.cfi_offset 9, -8
 874              		.cfi_offset 14, -4
 875 000e BBB0     		sub	sp, sp, #236
 876              	.LCFI11:
 877              		.cfi_def_cfa_offset 264
 878 0010 0446     		mov	r4, r0
 390:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 391:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 392:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 879              		.loc 1 392 5 is_stmt 1 view .LVU261
 880              		.loc 1 392 14 is_stmt 0 view .LVU262
 881 0012 0423     		movs	r3, #4
 882 0014 4372     		strb	r3, [r0, #9]
 393:Core/Src/nyan_os.c **** 
 394:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 883              		.loc 1 394 5 is_stmt 1 view .LVU263
 884              		.loc 1 394 27 is_stmt 0 view .LVU264
 885 0016 0023     		movs	r3, #0
 886 0018 C0F8A432 		str	r3, [r0, #676]
 395:Core/Src/nyan_os.c ****     // Now we need to convert the arg 1 into an int - skip arg 0 because that is the command.
 396:Core/Src/nyan_os.c ****     nos->bytes_array_size = atoi((char *)nos->command_arg_buffer[1]);
 887              		.loc 1 396 5 is_stmt 1 view .LVU265
 888              		.loc 1 396 65 is_stmt 0 view .LVU266
 889 001c D0F8B002 		ldr	r0, [r0, #688]
 890              	.LVL85:
 891              		.loc 1 396 29 view .LVU267
 892 0020 FFF7FEFF 		bl	atoi
 893              	.LVL86:
 894              		.loc 1 396 27 view .LVU268
 895 0024 C4F8A402 		str	r0, [r4, #676]
 397:Core/Src/nyan_os.c ****     // Safety the size of the buffer to ensure that it doesn't exceed the size of a block 
 398:Core/Src/nyan_os.c ****     if(nos->bytes_array_size  > 0xFFFF) {
 896              		.loc 1 398 5 is_stmt 1 view .LVU269
 897              		.loc 1 398 11 is_stmt 0 view .LVU270
ARM GAS  /tmp/ccxXT9BN.s 			page 25


 898 0028 D4F8A432 		ldr	r3, [r4, #676]
 899              		.loc 1 398 7 view .LVU271
 900 002c B3F5803F 		cmp	r3, #65536
 901 0030 18D2     		bcs	.L93
 399:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 400:Core/Src/nyan_os.c ****         nos->bytes_array_size = 0;
 401:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 402:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 403:Core/Src/nyan_os.c ****     }
 404:Core/Src/nyan_os.c ****     // Write the length of the bitstream we are accepting to the EEPROM - 16 bytes - 
 405:Core/Src/nyan_os.c ****     uint32_t size_array[4] = { 0x00, 0x00, 0x00, nos->bytes_array_size };
 902              		.loc 1 405 5 is_stmt 1 view .LVU272
 903              		.loc 1 405 14 is_stmt 0 view .LVU273
 904 0032 0023     		movs	r3, #0
 905 0034 3693     		str	r3, [sp, #216]
 906 0036 3793     		str	r3, [sp, #220]
 907 0038 3893     		str	r3, [sp, #224]
 908              		.loc 1 405 53 view .LVU274
 909 003a D4F8A432 		ldr	r3, [r4, #676]
 910              		.loc 1 405 14 view .LVU275
 911 003e 3993     		str	r3, [sp, #228]
 406:Core/Src/nyan_os.c ****     if(nos->eeprom->tx_inflight) {
 912              		.loc 1 406 5 is_stmt 1 view .LVU276
 913              		.loc 1 406 11 is_stmt 0 view .LVU277
 914 0040 6368     		ldr	r3, [r4, #4]
 915              		.loc 1 406 19 view .LVU278
 916 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 917              		.loc 1 406 7 view .LVU279
 918 0044 C3B9     		cbnz	r3, .L94
 919              	.LBB9:
 407:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 408:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size_tx_busy[0], sizeof(nyan_keys_wr
 409:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 410:Core/Src/nyan_os.c ****     }
 411:Core/Src/nyan_os.c ****     // Copy the data to the EEPROM buffer for writing
 412:Core/Src/nyan_os.c ****     for(short i = 0; i < sizeof(size_array); ++i) {
 920              		.loc 1 412 15 view .LVU280
 921 0046 0022     		movs	r2, #0
 922              	.L66:
 923              	.LVL87:
 924              		.loc 1 412 22 is_stmt 1 discriminator 1 view .LVU281
 925              		.loc 1 412 24 is_stmt 0 discriminator 1 view .LVU282
 926 0048 93B2     		uxth	r3, r2
 927              		.loc 1 412 5 discriminator 1 view .LVU283
 928 004a 0F2B     		cmp	r3, #15
 929 004c 1BD8     		bhi	.L95
 413:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 930              		.loc 1 413 9 is_stmt 1 discriminator 3 view .LVU284
 931              		.loc 1 413 12 is_stmt 0 discriminator 3 view .LVU285
 932 004e 6168     		ldr	r1, [r4, #4]
 933              		.loc 1 413 56 discriminator 3 view .LVU286
 934 0050 02F1E800 		add	r0, r2, #232
 935 0054 6844     		add	r0, sp, r0
 936 0056 10F8100C 		ldrb	r0, [r0, #-16]	@ zero_extendqisi2
 937              		.loc 1 413 32 discriminator 3 view .LVU287
 938 005a 0A44     		add	r2, r2, r1
 939              	.LVL88:
ARM GAS  /tmp/ccxXT9BN.s 			page 26


 940              		.loc 1 413 32 discriminator 3 view .LVU288
 941 005c 5071     		strb	r0, [r2, #5]
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 942              		.loc 1 412 46 is_stmt 1 discriminator 3 view .LVU289
 943 005e 0133     		adds	r3, r3, #1
 944              	.LVL89:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 945              		.loc 1 412 46 is_stmt 0 discriminator 3 view .LVU290
 946 0060 1AB2     		sxth	r2, r3
 947              	.LVL90:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 948              		.loc 1 412 46 discriminator 3 view .LVU291
 949 0062 F1E7     		b	.L66
 950              	.LVL91:
 951              	.L93:
 412:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 952              		.loc 1 412 46 discriminator 3 view .LVU292
 953              	.LBE9:
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 954              		.loc 1 400 9 is_stmt 1 view .LVU293
 400:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 955              		.loc 1 400 31 is_stmt 0 view .LVU294
 956 0064 0025     		movs	r5, #0
 957 0066 C4F8A452 		str	r5, [r4, #676]
 401:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 958              		.loc 1 401 9 is_stmt 1 view .LVU295
 959 006a 4822     		movs	r2, #72
 960 006c 5A49     		ldr	r1, .L99
 961 006e 2046     		mov	r0, r4
 962 0070 FFF7FEFF 		bl	NyanPrint
 963              	.LVL92:
 402:Core/Src/nyan_os.c ****     }
 964              		.loc 1 402 9 view .LVU296
 402:Core/Src/nyan_os.c ****     }
 965              		.loc 1 402 16 is_stmt 0 view .LVU297
 966 0074 2846     		mov	r0, r5
 967 0076 A8E0     		b	.L64
 968              	.L94:
 408:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 969              		.loc 1 408 9 is_stmt 1 view .LVU298
 970 0078 3722     		movs	r2, #55
 971 007a 5849     		ldr	r1, .L99+4
 972 007c 2046     		mov	r0, r4
 973 007e FFF7FEFF 		bl	NyanPrint
 974              	.LVL93:
 409:Core/Src/nyan_os.c ****     }
 975              		.loc 1 409 9 view .LVU299
 409:Core/Src/nyan_os.c ****     }
 976              		.loc 1 409 16 is_stmt 0 view .LVU300
 977 0082 0020     		movs	r0, #0
 978 0084 A1E0     		b	.L64
 979              	.LVL94:
 980              	.L95:
 414:Core/Src/nyan_os.c ****     }
 415:Core/Src/nyan_os.c ****     // Write the data to the eeprom - wait for the write to complete since this is DMA and order ma
 416:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_FPGA_BITSTREAM_LEN, SIZE_FPGA_BITSTREAM_LEN);
 981              		.loc 1 416 5 is_stmt 1 view .LVU301
ARM GAS  /tmp/ccxXT9BN.s 			page 27


 982 0086 6068     		ldr	r0, [r4, #4]
 983 0088 1023     		movs	r3, #16
 984 008a B022     		movs	r2, #176
 985              	.LVL95:
 986              		.loc 1 416 5 is_stmt 0 view .LVU302
 987 008c 0021     		movs	r1, #0
 988 008e FFF7FEFF 		bl	EepromWrite
 989              	.LVL96:
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 990              		.loc 1 417 5 is_stmt 1 view .LVU303
 991              	.L68:
 418:Core/Src/nyan_os.c ****         // Wait while the TX is in flight as to avoid bogus writes;
 419:Core/Src/nyan_os.c ****     }
 992              		.loc 1 419 5 discriminator 1 view .LVU304
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 993              		.loc 1 417 10 discriminator 1 view .LVU305
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 994              		.loc 1 417 14 is_stmt 0 discriminator 1 view .LVU306
 995 0092 6368     		ldr	r3, [r4, #4]
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 996              		.loc 1 417 22 discriminator 1 view .LVU307
 997 0094 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 417:Core/Src/nyan_os.c ****     while(nos->eeprom->tx_inflight){
 998              		.loc 1 417 10 discriminator 1 view .LVU308
 999 0096 002E     		cmp	r6, #0
 1000 0098 FBD1     		bne	.L68
 420:Core/Src/nyan_os.c **** 
 421:Core/Src/nyan_os.c ****     // Print the ready to accept bytes confirmation message - This does nothing because it's execut
 422:Core/Src/nyan_os.c ****     // NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_start[0], sizeof(nyan_keys_write_bitst
 423:Core/Src/nyan_os.c **** 
 424:Core/Src/nyan_os.c ****     // Lets allocate some memory to save this bitstream we are importing
 425:Core/Src/nyan_os.c ****     nos->bytes_array = (uint8_t*)malloc(nos->bytes_array_size * sizeof(uint8_t));
 1001              		.loc 1 425 5 is_stmt 1 view .LVU309
 1002              		.loc 1 425 44 is_stmt 0 view .LVU310
 1003 009a D4F8A402 		ldr	r0, [r4, #676]
 1004              		.loc 1 425 34 view .LVU311
 1005 009e FFF7FEFF 		bl	malloc
 1006              	.LVL97:
 1007              		.loc 1 425 22 view .LVU312
 1008 00a2 C4F8A802 		str	r0, [r4, #680]
 426:Core/Src/nyan_os.c ****     if(nos->bytes_array == NULL) {
 1009              		.loc 1 426 5 is_stmt 1 view .LVU313
 1010              		.loc 1 426 11 is_stmt 0 view .LVU314
 1011 00a6 D4F8A832 		ldr	r3, [r4, #680]
 1012              		.loc 1 426 7 view .LVU315
 1013 00aa BBB1     		cbz	r3, .L96
 427:Core/Src/nyan_os.c ****         // Handle memory allocation failure
 428:Core/Src/nyan_os.c ****         nos->state = READY; // or appropriate error state
 429:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 430:Core/Src/nyan_os.c ****     }
 431:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 432:Core/Src/nyan_os.c ****     nos->state = DIRECT_BUFFER_ACCESS;
 1014              		.loc 1 432 5 is_stmt 1 view .LVU316
 1015              		.loc 1 432 16 is_stmt 0 view .LVU317
 1016 00ac 0223     		movs	r3, #2
 1017 00ae 2372     		strb	r3, [r4, #8]
 433:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/ccxXT9BN.s 			page 28


 434:Core/Src/nyan_os.c ****     while(nos->bytes_received != nos->bytes_array_size){
 1018              		.loc 1 434 5 is_stmt 1 view .LVU318
 1019              	.L70:
 435:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 436:Core/Src/nyan_os.c ****         // The user can exit this loop by just filling the buffer up for now.
 437:Core/Src/nyan_os.c ****         // Enabling am abort sequence would be a next step
 438:Core/Src/nyan_os.c ****     }
 1020              		.loc 1 438 5 discriminator 1 view .LVU319
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1021              		.loc 1 434 10 discriminator 1 view .LVU320
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1022              		.loc 1 434 14 is_stmt 0 discriminator 1 view .LVU321
 1023 00b0 D4F8A022 		ldr	r2, [r4, #672]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1024              		.loc 1 434 37 discriminator 1 view .LVU322
 1025 00b4 D4F8A432 		ldr	r3, [r4, #676]
 434:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 1026              		.loc 1 434 10 discriminator 1 view .LVU323
 1027 00b8 9A42     		cmp	r2, r3
 1028 00ba F9D1     		bne	.L70
 439:Core/Src/nyan_os.c **** 
 440:Core/Src/nyan_os.c ****     // Take a Sha256 Hash of the inputs for the user display
 441:Core/Src/nyan_os.c ****     BYTE buf[SHA256_BLOCK_SIZE];
 1029              		.loc 1 441 5 is_stmt 1 view .LVU324
 442:Core/Src/nyan_os.c ****     SHA256_CTX ctx;
 1030              		.loc 1 442 5 view .LVU325
 443:Core/Src/nyan_os.c ****     
 444:Core/Src/nyan_os.c ****     sha256_init(&ctx);
 1031              		.loc 1 444 5 view .LVU326
 1032 00bc 12A8     		add	r0, sp, #72
 1033 00be FFF7FEFF 		bl	sha256_init
 1034              	.LVL98:
 445:Core/Src/nyan_os.c ****     sha256_update(&ctx, nos->bytes_array, nos->bytes_array_size);
 1035              		.loc 1 445 5 view .LVU327
 1036              		.loc 1 445 28 is_stmt 0 view .LVU328
 1037 00c2 D4F8A812 		ldr	r1, [r4, #680]
 1038              		.loc 1 445 46 view .LVU329
 1039 00c6 D4F8A422 		ldr	r2, [r4, #676]
 1040              		.loc 1 445 5 view .LVU330
 1041 00ca 12A8     		add	r0, sp, #72
 1042 00cc FFF7FEFF 		bl	sha256_update
 1043              	.LVL99:
 446:Core/Src/nyan_os.c ****     sha256_final(&ctx, buf);
 1044              		.loc 1 446 5 is_stmt 1 view .LVU331
 1045 00d0 2EA9     		add	r1, sp, #184
 1046 00d2 12A8     		add	r0, sp, #72
 1047 00d4 FFF7FEFF 		bl	sha256_final
 1048              	.LVL100:
 447:Core/Src/nyan_os.c **** 
 448:Core/Src/nyan_os.c ****     // Print the sha256 output for the user to verify their bitstream
 449:Core/Src/nyan_os.c ****     char hexString[SHA256_BLOCK_SIZE * 2 + 1];
 1049              		.loc 1 449 5 view .LVU332
 450:Core/Src/nyan_os.c ****     for (int i = 0; i < SHA256_BLOCK_SIZE; i++) {
 1050              		.loc 1 450 5 view .LVU333
 1051              	.LBB10:
 1052              		.loc 1 450 10 view .LVU334
 1053              		.loc 1 450 14 is_stmt 0 view .LVU335
ARM GAS  /tmp/ccxXT9BN.s 			page 29


 1054 00d8 0025     		movs	r5, #0
 1055              		.loc 1 450 5 view .LVU336
 1056 00da 0FE0     		b	.L71
 1057              	.LVL101:
 1058              	.L96:
 1059              		.loc 1 450 5 view .LVU337
 1060              	.LBE10:
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1061              		.loc 1 428 9 is_stmt 1 view .LVU338
 428:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1062              		.loc 1 428 20 is_stmt 0 view .LVU339
 1063 00dc 0123     		movs	r3, #1
 1064 00de 2372     		strb	r3, [r4, #8]
 429:Core/Src/nyan_os.c ****     }
 1065              		.loc 1 429 9 is_stmt 1 view .LVU340
 429:Core/Src/nyan_os.c ****     }
 1066              		.loc 1 429 16 is_stmt 0 view .LVU341
 1067 00e0 0020     		movs	r0, #0
 1068 00e2 72E0     		b	.L64
 1069              	.LVL102:
 1070              	.L72:
 1071              	.LBB11:
 451:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1072              		.loc 1 451 9 is_stmt 1 discriminator 3 view .LVU342
 1073              		.loc 1 451 47 is_stmt 0 discriminator 3 view .LVU343
 1074 00e4 05F1E803 		add	r3, r5, #232
 1075 00e8 6B44     		add	r3, sp, r3
 1076              		.loc 1 451 9 discriminator 3 view .LVU344
 1077 00ea 13F8302C 		ldrb	r2, [r3, #-48]	@ zero_extendqisi2
 1078 00ee 3C49     		ldr	r1, .L99+8
 1079 00f0 01AB     		add	r3, sp, #4
 1080 00f2 03EB4500 		add	r0, r3, r5, lsl #1
 1081 00f6 FFF7FEFF 		bl	sprintf
 1082              	.LVL103:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1083              		.loc 1 450 44 is_stmt 1 discriminator 3 view .LVU345
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1084              		.loc 1 450 45 is_stmt 0 discriminator 3 view .LVU346
 1085 00fa 0135     		adds	r5, r5, #1
 1086              	.LVL104:
 1087              	.L71:
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1088              		.loc 1 450 21 is_stmt 1 discriminator 1 view .LVU347
 450:Core/Src/nyan_os.c ****         sprintf(&hexString[i * 2], "%02x", buf[i]);
 1089              		.loc 1 450 5 is_stmt 0 discriminator 1 view .LVU348
 1090 00fc 1F2D     		cmp	r5, #31
 1091 00fe F1DD     		ble	.L72
 1092              	.LBE11:
 452:Core/Src/nyan_os.c ****     }
 453:Core/Src/nyan_os.c ****     hexString[SHA256_BLOCK_SIZE * 2] = '\0';
 1093              		.loc 1 453 5 is_stmt 1 view .LVU349
 1094              		.loc 1 453 38 is_stmt 0 view .LVU350
 1095 0100 0023     		movs	r3, #0
 1096 0102 8DF84430 		strb	r3, [sp, #68]
 454:Core/Src/nyan_os.c ****     
 455:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&hexString[0], SHA256_BLOCK_SIZE * 2);
 1097              		.loc 1 455 5 is_stmt 1 view .LVU351
ARM GAS  /tmp/ccxXT9BN.s 			page 30


 1098 0106 4022     		movs	r2, #64
 1099 0108 01A9     		add	r1, sp, #4
 1100 010a 2046     		mov	r0, r4
 1101 010c FFF7FEFF 		bl	NyanPrint
 1102              	.LVL105:
 456:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1103              		.loc 1 456 5 view .LVU352
 1104 0110 0322     		movs	r2, #3
 1105 0112 3449     		ldr	r1, .L99+12
 1106 0114 2046     		mov	r0, r4
 1107 0116 FFF7FEFF 		bl	NyanPrint
 1108              	.LVL106:
 457:Core/Src/nyan_os.c **** 
 458:Core/Src/nyan_os.c ****     // Calculate the number iterations 
 459:Core/Src/nyan_os.c ****     unsigned int r = nos->bytes_array_size % EEPROM_DRIVER_TX_BUF_SZ;
 1109              		.loc 1 459 5 view .LVU353
 1110              		.loc 1 459 25 is_stmt 0 view .LVU354
 1111 011a D4F8A432 		ldr	r3, [r4, #676]
 1112              	.LVL107:
 460:Core/Src/nyan_os.c ****     unsigned int q = nos->bytes_array_size / EEPROM_DRIVER_TX_BUF_SZ;
 1113              		.loc 1 460 5 is_stmt 1 view .LVU355
 1114              		.loc 1 460 25 is_stmt 0 view .LVU356
 1115 011e D4F8A472 		ldr	r7, [r4, #676]
 1116              		.loc 1 460 18 view .LVU357
 1117 0122 4FEAD718 		lsr	r8, r7, #7
 1118              	.LVL108:
 461:Core/Src/nyan_os.c ****     if(r > 0)
 1119              		.loc 1 461 5 is_stmt 1 view .LVU358
 1120              		.loc 1 461 7 is_stmt 0 view .LVU359
 1121 0126 13F07F0F 		tst	r3, #127
 1122 012a 01D0     		beq	.L73
 462:Core/Src/nyan_os.c ****         ++q;
 1123              		.loc 1 462 9 is_stmt 1 view .LVU360
 1124 012c 08F10108 		add	r8, r8, #1
 1125              	.LVL109:
 1126              	.L73:
 463:Core/Src/nyan_os.c ****     if (q == 0)
 1127              		.loc 1 463 5 view .LVU361
 1128              		.loc 1 463 8 is_stmt 0 view .LVU362
 1129 0130 B8F1000F 		cmp	r8, #0
 1130 0134 4ED0     		beq	.L87
 1131              	.LBB12:
 464:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 465:Core/Src/nyan_os.c **** 
 466:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the EEPROM, write, wait ...
 467:Core/Src/nyan_os.c ****     for(unsigned short page = 0; page < q; ++page) {
 1132              		.loc 1 467 24 view .LVU363
 1133 0136 0025     		movs	r5, #0
 1134              	.LVL110:
 1135              		.loc 1 467 24 view .LVU364
 1136 0138 31E0     		b	.L74
 1137              	.LVL111:
 1138              	.L76:
 1139              	.LBB13:
 1140              	.LBB14:
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 469:Core/Src/nyan_os.c ****         bool txRetry = false;
ARM GAS  /tmp/ccxXT9BN.s 			page 31


 470:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 471:Core/Src/nyan_os.c ****         EepromFlushTxBuff(nos->eeprom);
 472:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 473:Core/Src/nyan_os.c ****         for(uint8_t byte = 0; byte < EEPROM_DRIVER_TX_BUF_SZ; ++byte) {
 474:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1141              		.loc 1 474 13 is_stmt 1 discriminator 3 view .LVU365
 1142              		.loc 1 474 44 is_stmt 0 discriminator 3 view .LVU366
 1143 013a D4F8A802 		ldr	r0, [r4, #680]
 1144              		.loc 1 474 89 discriminator 3 view .LVU367
 1145 013e 03EBC511 		add	r1, r3, r5, lsl #7
 1146              		.loc 1 474 16 discriminator 3 view .LVU368
 1147 0142 6268     		ldr	r2, [r4, #4]
 1148              		.loc 1 474 57 discriminator 3 view .LVU369
 1149 0144 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1150              		.loc 1 474 39 discriminator 3 view .LVU370
 1151 0146 1A44     		add	r2, r2, r3
 1152 0148 5171     		strb	r1, [r2, #5]
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1153              		.loc 1 473 63 is_stmt 1 discriminator 3 view .LVU371
 1154 014a 0133     		adds	r3, r3, #1
 1155              	.LVL112:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1156              		.loc 1 473 63 is_stmt 0 discriminator 3 view .LVU372
 1157 014c DBB2     		uxtb	r3, r3
 1158              	.LVL113:
 1159              	.L75:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1160              		.loc 1 473 31 is_stmt 1 discriminator 1 view .LVU373
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1161              		.loc 1 473 9 is_stmt 0 discriminator 1 view .LVU374
 1162 014e 13F0800F 		tst	r3, #128
 1163 0152 F2D0     		beq	.L76
 1164              	.LBE14:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1165              		.loc 1 469 14 view .LVU375
 1166 0154 B146     		mov	r9, r6
 468:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1167              		.loc 1 468 14 view .LVU376
 1168 0156 3746     		mov	r7, r6
 1169              	.LVL114:
 1170              	.L79:
 475:Core/Src/nyan_os.c ****         }
 476:Core/Src/nyan_os.c ****         // Attempt to write the data to the EEPROM - Until the job is done.
 477:Core/Src/nyan_os.c ****         while(!txSuccess) {
 1171              		.loc 1 477 14 is_stmt 1 view .LVU377
 1172 0158 FFB9     		cbnz	r7, .L97
 478:Core/Src/nyan_os.c ****             if(EepromWrite(nos->eeprom, true, (EEPROM_DRIVER_TX_BUF_SZ * page) + ADDR_FPGA_BITSTREA
 1173              		.loc 1 478 13 view .LVU378
 1174              		.loc 1 478 16 is_stmt 0 view .LVU379
 1175 015a 6068     		ldr	r0, [r4, #4]
 1176 015c EA01     		lsls	r2, r5, #7
 1177 015e 8023     		movs	r3, #128
 1178 0160 12B2     		sxth	r2, r2
 1179 0162 0121     		movs	r1, #1
 1180 0164 FFF7FEFF 		bl	EepromWrite
 1181              	.LVL115:
 1182              		.loc 1 478 15 view .LVU380
ARM GAS  /tmp/ccxXT9BN.s 			page 32


 1183 0168 0028     		cmp	r0, #0
 1184 016a F5D0     		beq	.L79
 1185              	.LVL116:
 1186              	.L78:
 479:Core/Src/nyan_os.c ****                 while(nos->eeprom->tx_inflight) {
 1187              		.loc 1 479 22 is_stmt 1 view .LVU381
 1188              		.loc 1 479 26 is_stmt 0 view .LVU382
 1189 016c 6368     		ldr	r3, [r4, #4]
 1190              		.loc 1 479 34 view .LVU383
 1191 016e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1192              		.loc 1 479 22 view .LVU384
 1193 0170 53B1     		cbz	r3, .L80
 480:Core/Src/nyan_os.c ****                     // Check for transmission success
 481:Core/Src/nyan_os.c ****                     if(nos->eeprom->tx_failed) {
 1194              		.loc 1 481 21 is_stmt 1 view .LVU385
 1195              		.loc 1 481 27 is_stmt 0 view .LVU386
 1196 0172 6368     		ldr	r3, [r4, #4]
 1197              		.loc 1 481 35 view .LVU387
 1198 0174 93F80390 		ldrb	r9, [r3, #3]	@ zero_extendqisi2
 1199              	.LVL117:
 1200              		.loc 1 481 23 view .LVU388
 1201 0178 B9F1000F 		cmp	r9, #0
 1202 017c F6D0     		beq	.L78
 482:Core/Src/nyan_os.c ****                         nos->eeprom->tx_inflight = false;
 1203              		.loc 1 482 25 is_stmt 1 view .LVU389
 1204              		.loc 1 482 28 is_stmt 0 view .LVU390
 1205 017e 6268     		ldr	r2, [r4, #4]
 1206              		.loc 1 482 50 view .LVU391
 1207 0180 0023     		movs	r3, #0
 1208 0182 9370     		strb	r3, [r2, #2]
 483:Core/Src/nyan_os.c ****                         nos->eeprom->tx_failed = false;
 1209              		.loc 1 483 25 is_stmt 1 view .LVU392
 1210              		.loc 1 483 28 is_stmt 0 view .LVU393
 1211 0184 6268     		ldr	r2, [r4, #4]
 1212              		.loc 1 483 48 view .LVU394
 1213 0186 D370     		strb	r3, [r2, #3]
 484:Core/Src/nyan_os.c ****                         txRetry = true;
 1214              		.loc 1 484 25 is_stmt 1 view .LVU395
 1215              	.LVL118:
 485:Core/Src/nyan_os.c ****                         break; // Break from the while loop on success
 1216              		.loc 1 485 25 view .LVU396
 1217              	.L80:
 486:Core/Src/nyan_os.c ****                     }
 487:Core/Src/nyan_os.c ****                     txRetry = false;
 488:Core/Src/nyan_os.c ****                 }
 489:Core/Src/nyan_os.c ****                 if(nos->eeprom->tx_inflight == 0 && txRetry == false) {
 1218              		.loc 1 489 17 view .LVU397
 1219              		.loc 1 489 23 is_stmt 0 view .LVU398
 1220 0188 6368     		ldr	r3, [r4, #4]
 1221              		.loc 1 489 31 view .LVU399
 1222 018a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1223              		.loc 1 489 19 view .LVU400
 1224 018c 002B     		cmp	r3, #0
 1225 018e E3D1     		bne	.L79
 1226              		.loc 1 489 50 discriminator 1 view .LVU401
 1227 0190 B9F1000F 		cmp	r9, #0
 1228 0194 E0D1     		bne	.L79
ARM GAS  /tmp/ccxXT9BN.s 			page 33


 490:Core/Src/nyan_os.c ****                     txSuccess = true;
 1229              		.loc 1 490 31 view .LVU402
 1230 0196 0127     		movs	r7, #1
 1231              	.LVL119:
 1232              		.loc 1 490 31 view .LVU403
 1233 0198 DEE7     		b	.L79
 1234              	.LVL120:
 1235              	.L97:
 1236              		.loc 1 490 31 view .LVU404
 1237              	.LBE13:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1238              		.loc 1 467 44 is_stmt 1 discriminator 2 view .LVU405
 1239 019a 0135     		adds	r5, r5, #1
 1240              	.LVL121:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1241              		.loc 1 467 44 is_stmt 0 discriminator 2 view .LVU406
 1242 019c ADB2     		uxth	r5, r5
 1243              	.LVL122:
 1244              	.L74:
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1245              		.loc 1 467 34 is_stmt 1 discriminator 1 view .LVU407
 467:Core/Src/nyan_os.c ****         bool txSuccess = false;
 1246              		.loc 1 467 5 is_stmt 0 discriminator 1 view .LVU408
 1247 019e 4545     		cmp	r5, r8
 1248 01a0 04D2     		bcs	.L98
 1249              	.LBB16:
 468:Core/Src/nyan_os.c ****         bool txRetry = false;
 1250              		.loc 1 468 9 is_stmt 1 view .LVU409
 1251              	.LVL123:
 469:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 1252              		.loc 1 469 9 view .LVU410
 471:Core/Src/nyan_os.c ****         // Prepare the data for transmission
 1253              		.loc 1 471 9 view .LVU411
 1254 01a2 6068     		ldr	r0, [r4, #4]
 1255 01a4 FFF7FEFF 		bl	EepromFlushTxBuff
 1256              	.LVL124:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1257              		.loc 1 473 9 view .LVU412
 1258              	.LBB15:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1259              		.loc 1 473 13 view .LVU413
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1260              		.loc 1 473 21 is_stmt 0 view .LVU414
 1261 01a8 0023     		movs	r3, #0
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1262              		.loc 1 473 9 view .LVU415
 1263 01aa D0E7     		b	.L75
 1264              	.LVL125:
 1265              	.L98:
 473:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 1266              		.loc 1 473 9 view .LVU416
 1267              	.LBE15:
 1268              	.LBE16:
 1269              	.LBE12:
 491:Core/Src/nyan_os.c ****                     txRetry = false;
 492:Core/Src/nyan_os.c ****                 }
 493:Core/Src/nyan_os.c ****             }
ARM GAS  /tmp/ccxXT9BN.s 			page 34


 494:Core/Src/nyan_os.c ****         }
 495:Core/Src/nyan_os.c ****     }
 496:Core/Src/nyan_os.c **** 
 497:Core/Src/nyan_os.c ****     // Perform function cleanup maintenance
 498:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 1270              		.loc 1 498 5 is_stmt 1 view .LVU417
 1271              		.loc 1 498 27 is_stmt 0 view .LVU418
 1272 01ac 0025     		movs	r5, #0
 1273              	.LVL126:
 1274              		.loc 1 498 27 view .LVU419
 1275 01ae C4F8A452 		str	r5, [r4, #676]
 499:Core/Src/nyan_os.c ****     nos->bytes_received = 0;
 1276              		.loc 1 499 5 is_stmt 1 view .LVU420
 1277              		.loc 1 499 25 is_stmt 0 view .LVU421
 1278 01b2 C4F8A052 		str	r5, [r4, #672]
 500:Core/Src/nyan_os.c ****     free(nos->bytes_array);
 1279              		.loc 1 500 5 is_stmt 1 view .LVU422
 1280              		.loc 1 500 13 is_stmt 0 view .LVU423
 1281 01b6 D4F8A802 		ldr	r0, [r4, #680]
 1282              		.loc 1 500 5 view .LVU424
 1283 01ba FFF7FEFF 		bl	free
 1284              	.LVL127:
 501:Core/Src/nyan_os.c ****     nos->bytes_array = NULL;
 1285              		.loc 1 501 5 is_stmt 1 view .LVU425
 1286              		.loc 1 501 22 is_stmt 0 view .LVU426
 1287 01be C4F8A852 		str	r5, [r4, #680]
 502:Core/Src/nyan_os.c ****     nos->state = READY;
 1288              		.loc 1 502 5 is_stmt 1 view .LVU427
 1289              		.loc 1 502 16 is_stmt 0 view .LVU428
 1290 01c2 0120     		movs	r0, #1
 1291 01c4 2072     		strb	r0, [r4, #8]
 503:Core/Src/nyan_os.c **** 
 504:Core/Src/nyan_os.c ****     // Set the FPGA configuration to false - main() will pick it up to perform the programming.
 505:Core/Src/nyan_os.c ****     nos_fpga.configured = false;
 1292              		.loc 1 505 5 is_stmt 1 view .LVU429
 1293              		.loc 1 505 25 is_stmt 0 view .LVU430
 1294 01c6 084B     		ldr	r3, .L99+16
 1295 01c8 1D70     		strb	r5, [r3]
 506:Core/Src/nyan_os.c **** 
 507:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1296              		.loc 1 507 5 is_stmt 1 view .LVU431
 1297              	.LVL128:
 1298              	.L64:
 508:Core/Src/nyan_os.c **** }
 1299              		.loc 1 508 1 is_stmt 0 view .LVU432
 1300 01ca 3BB0     		add	sp, sp, #236
 1301              	.LCFI12:
 1302              		.cfi_def_cfa_offset 28
 1303              		@ sp needed
 1304 01cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1305              	.LVL129:
 1306              	.L85:
 1307              	.LCFI13:
 1308              		.cfi_def_cfa_offset 0
 1309              		.cfi_restore 4
 1310              		.cfi_restore 5
 1311              		.cfi_restore 6
ARM GAS  /tmp/ccxXT9BN.s 			page 35


 1312              		.cfi_restore 7
 1313              		.cfi_restore 8
 1314              		.cfi_restore 9
 1315              		.cfi_restore 14
 390:Core/Src/nyan_os.c ****     // Set the state to NYAN_EXE_IDLE to show that we have ack'd the command
 1316              		.loc 1 390 16 view .LVU433
 1317 01d0 0020     		movs	r0, #0
 1318              	.LVL130:
 1319              		.loc 1 508 1 view .LVU434
 1320 01d2 7047     		bx	lr
 1321              	.LVL131:
 1322              	.L87:
 1323              	.LCFI14:
 1324              		.cfi_def_cfa_offset 264
 1325              		.cfi_offset 4, -28
 1326              		.cfi_offset 5, -24
 1327              		.cfi_offset 6, -20
 1328              		.cfi_offset 7, -16
 1329              		.cfi_offset 8, -12
 1330              		.cfi_offset 9, -8
 1331              		.cfi_offset 14, -4
 464:Core/Src/nyan_os.c **** 
 1332              		.loc 1 464 16 view .LVU435
 1333 01d4 0020     		movs	r0, #0
 1334 01d6 F8E7     		b	.L64
 1335              	.L100:
 1336              		.align	2
 1337              	.L99:
 1338 01d8 00000000 		.word	.LANCHOR5
 1339 01dc 00000000 		.word	.LANCHOR6
 1340 01e0 00000000 		.word	.LC0
 1341 01e4 00000000 		.word	.LANCHOR4
 1342 01e8 00000000 		.word	nos_fpga
 1343              		.cfi_endproc
 1344              	.LFE156:
 1346              		.section	.text.NyanExecute,"ax",%progbits
 1347              		.align	1
 1348              		.global	NyanExecute
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1353              	NyanExecute:
 1354              	.LVL132:
 1355              	.LFB152:
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1356              		.loc 1 222 46 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Core/Src/nyan_os.c ****     switch(nos->exe) {
 1360              		.loc 1 222 46 is_stmt 0 view .LVU437
 1361 0000 70B5     		push	{r4, r5, r6, lr}
 1362              	.LCFI15:
 1363              		.cfi_def_cfa_offset 16
 1364              		.cfi_offset 4, -16
 1365              		.cfi_offset 5, -12
 1366              		.cfi_offset 6, -8
ARM GAS  /tmp/ccxXT9BN.s 			page 36


 1367              		.cfi_offset 14, -4
 1368 0002 0446     		mov	r4, r0
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1369              		.loc 1 223 5 is_stmt 1 view .LVU438
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1370              		.loc 1 223 15 is_stmt 0 view .LVU439
 1371 0004 457A     		ldrb	r5, [r0, #9]	@ zero_extendqisi2
 1372 0006 EDB2     		uxtb	r5, r5
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1373              		.loc 1 223 5 view .LVU440
 1374 0008 042D     		cmp	r5, #4
 1375 000a 4DD8     		bhi	.L102
 1376 000c DFE805F0 		tbb	[pc, r5]
 1377              	.L104:
 1378 0010 03       		.byte	(.L108-.L104)/2
 1379 0011 23       		.byte	(.L107-.L104)/2
 1380 0012 13       		.byte	(.L106-.L104)/2
 1381 0013 3A       		.byte	(.L105-.L104)/2
 1382 0014 50       		.byte	(.L109-.L104)/2
 1383 0015 00       		.p2align 1
 1384              	.L108:
 225:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1385              		.loc 1 225 13 is_stmt 1 view .LVU441
 1386 0016 FFF7FEFF 		bl	NyanExeGetinfo
 1387              	.LVL133:
 226:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1388              		.loc 1 226 13 view .LVU442
 1389 001a 0322     		movs	r2, #3
 1390 001c 2649     		ldr	r1, .L111
 1391 001e 2046     		mov	r0, r4
 1392 0020 FFF7FEFF 		bl	NyanPrint
 1393              	.LVL134:
 227:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1394              		.loc 1 227 13 view .LVU443
 1395 0024 0F22     		movs	r2, #15
 1396 0026 2549     		ldr	r1, .L111+4
 1397 0028 2046     		mov	r0, r4
 1398 002a FFF7FEFF 		bl	NyanPrint
 1399              	.LVL135:
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1400              		.loc 1 228 13 view .LVU444
 228:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1401              		.loc 1 228 22 is_stmt 0 view .LVU445
 1402 002e 0423     		movs	r3, #4
 1403 0030 6372     		strb	r3, [r4, #9]
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1404              		.loc 1 229 13 is_stmt 1 view .LVU446
 229:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 1405              		.loc 1 229 20 is_stmt 0 view .LVU447
 1406 0032 0125     		movs	r5, #1
 1407 0034 3DE0     		b	.L103
 1408              	.LVL136:
 1409              	.L106:
 231:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 1410              		.loc 1 231 13 is_stmt 1 view .LVU448
 1411 0036 FFF7FEFF 		bl	NyanExeSetOwner
 1412              	.LVL137:
ARM GAS  /tmp/ccxXT9BN.s 			page 37


 232:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1413              		.loc 1 232 13 view .LVU449
 1414 003a 2C22     		movs	r2, #44
 1415 003c 2049     		ldr	r1, .L111+8
 1416 003e 2046     		mov	r0, r4
 1417 0040 FFF7FEFF 		bl	NyanPrint
 1418              	.LVL138:
 233:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1419              		.loc 1 233 13 view .LVU450
 1420 0044 0F22     		movs	r2, #15
 1421 0046 1D49     		ldr	r1, .L111+4
 1422 0048 2046     		mov	r0, r4
 1423 004a FFF7FEFF 		bl	NyanPrint
 1424              	.LVL139:
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1425              		.loc 1 234 13 view .LVU451
 234:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1426              		.loc 1 234 22 is_stmt 0 view .LVU452
 1427 004e 0423     		movs	r3, #4
 1428 0050 6372     		strb	r3, [r4, #9]
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1429              		.loc 1 235 13 is_stmt 1 view .LVU453
 235:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 1430              		.loc 1 235 20 is_stmt 0 view .LVU454
 1431 0052 0125     		movs	r5, #1
 1432 0054 2DE0     		b	.L103
 1433              	.LVL140:
 1434              	.L107:
 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1435              		.loc 1 237 13 is_stmt 1 view .LVU455
 1436 0056 1B4E     		ldr	r6, .L111+12
 1437 0058 0021     		movs	r1, #0
 1438 005a 3046     		mov	r0, r6
 1439              	.LVL141:
 237:Core/Src/nyan_os.c ****             nos->exe_in_progress = true;
 1440              		.loc 1 237 13 is_stmt 0 view .LVU456
 1441 005c FFF7FEFF 		bl	HAL_TIM_OC_Stop_IT
 1442              	.LVL142:
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1443              		.loc 1 238 13 is_stmt 1 view .LVU457
 238:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 1444              		.loc 1 238 34 is_stmt 0 view .LVU458
 1445 0060 0123     		movs	r3, #1
 1446 0062 A372     		strb	r3, [r4, #10]
 239:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1447              		.loc 1 239 13 is_stmt 1 view .LVU459
 1448 0064 2046     		mov	r0, r4
 1449 0066 FFF7FEFF 		bl	NyanExeWriteFpgaBitstream
 1450              	.LVL143:
 240:Core/Src/nyan_os.c ****             nos->exe_in_progress = false;
 1451              		.loc 1 240 13 view .LVU460
 1452 006a 0F22     		movs	r2, #15
 1453 006c 1349     		ldr	r1, .L111+4
 1454 006e 2046     		mov	r0, r4
 1455 0070 FFF7FEFF 		bl	NyanPrint
 1456              	.LVL144:
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
ARM GAS  /tmp/ccxXT9BN.s 			page 38


 1457              		.loc 1 241 13 view .LVU461
 241:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1458              		.loc 1 241 34 is_stmt 0 view .LVU462
 1459 0074 0021     		movs	r1, #0
 1460 0076 A172     		strb	r1, [r4, #10]
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1461              		.loc 1 242 13 is_stmt 1 view .LVU463
 242:Core/Src/nyan_os.c ****             HAL_TIM_OC_Start_IT(&htim8, TIM_CHANNEL_1);
 1462              		.loc 1 242 22 is_stmt 0 view .LVU464
 1463 0078 0423     		movs	r3, #4
 1464 007a 6372     		strb	r3, [r4, #9]
 243:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1465              		.loc 1 243 13 is_stmt 1 view .LVU465
 1466 007c 3046     		mov	r0, r6
 1467 007e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1468              	.LVL145:
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1469              		.loc 1 244 13 view .LVU466
 244:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1470              		.loc 1 244 20 is_stmt 0 view .LVU467
 1471 0082 16E0     		b	.L103
 1472              	.LVL146:
 1473              	.L105:
 248:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1474              		.loc 1 248 13 is_stmt 1 view .LVU468
 1475 0084 2022     		movs	r2, #32
 1476 0086 1049     		ldr	r1, .L111+16
 1477 0088 FFF7FEFF 		bl	NyanPrint
 1478              	.LVL147:
 249:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1479              		.loc 1 249 13 view .LVU469
 1480 008c 0322     		movs	r2, #3
 1481 008e 0A49     		ldr	r1, .L111
 1482 0090 2046     		mov	r0, r4
 1483 0092 FFF7FEFF 		bl	NyanPrint
 1484              	.LVL148:
 250:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1485              		.loc 1 250 13 view .LVU470
 1486 0096 0F22     		movs	r2, #15
 1487 0098 0849     		ldr	r1, .L111+4
 1488 009a 2046     		mov	r0, r4
 1489 009c FFF7FEFF 		bl	NyanPrint
 1490              	.LVL149:
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1491              		.loc 1 251 13 view .LVU471
 251:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1492              		.loc 1 251 22 is_stmt 0 view .LVU472
 1493 00a0 0423     		movs	r3, #4
 1494 00a2 6372     		strb	r3, [r4, #9]
 252:Core/Src/nyan_os.c ****         default:
 1495              		.loc 1 252 13 is_stmt 1 view .LVU473
 252:Core/Src/nyan_os.c ****         default:
 1496              		.loc 1 252 20 is_stmt 0 view .LVU474
 1497 00a4 0125     		movs	r5, #1
 1498 00a6 04E0     		b	.L103
 1499              	.LVL150:
 1500              	.L102:
ARM GAS  /tmp/ccxXT9BN.s 			page 39


 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1501              		.loc 1 255 13 is_stmt 1 view .LVU475
 255:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1502              		.loc 1 255 22 is_stmt 0 view .LVU476
 1503 00a8 0423     		movs	r3, #4
 1504 00aa 4372     		strb	r3, [r0, #9]
 256:Core/Src/nyan_os.c ****     }
 1505              		.loc 1 256 13 is_stmt 1 view .LVU477
 256:Core/Src/nyan_os.c ****     }
 1506              		.loc 1 256 20 is_stmt 0 view .LVU478
 1507 00ac 0025     		movs	r5, #0
 1508 00ae 00E0     		b	.L103
 1509              	.L109:
 223:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1510              		.loc 1 223 5 view .LVU479
 1511 00b0 0125     		movs	r5, #1
 1512              	.LVL151:
 1513              	.L103:
 258:Core/Src/nyan_os.c **** 
 1514              		.loc 1 258 1 view .LVU480
 1515 00b2 2846     		mov	r0, r5
 1516 00b4 70BD     		pop	{r4, r5, r6, pc}
 1517              	.LVL152:
 1518              	.L112:
 258:Core/Src/nyan_os.c **** 
 1519              		.loc 1 258 1 view .LVU481
 1520 00b6 00BF     		.align	2
 1521              	.L111:
 1522 00b8 00000000 		.word	.LANCHOR4
 1523 00bc 00000000 		.word	.LANCHOR1
 1524 00c0 00000000 		.word	.LANCHOR7
 1525 00c4 00000000 		.word	htim8
 1526 00c8 00000000 		.word	.LANCHOR8
 1527              		.cfi_endproc
 1528              	.LFE152:
 1530              		.section	.text.FreeNyanCommandArgs,"ax",%progbits
 1531              		.align	1
 1532              		.global	FreeNyanCommandArgs
 1533              		.syntax unified
 1534              		.thumb
 1535              		.thumb_func
 1537              	FreeNyanCommandArgs:
 1538              	.LVL153:
 1539              	.LFB157:
 509:Core/Src/nyan_os.c **** 
 510:Core/Src/nyan_os.c **** void FreeNyanCommandArgs(volatile NyanOS* nos)
 511:Core/Src/nyan_os.c **** {
 1540              		.loc 1 511 1 is_stmt 1 view -0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 512:Core/Src/nyan_os.c ****     if (!nos) {
 1544              		.loc 1 512 5 view .LVU483
 1545              		.loc 1 512 8 is_stmt 0 view .LVU484
 1546 0000 C0B1     		cbz	r0, .L119
 511:Core/Src/nyan_os.c ****     if (!nos) {
 1547              		.loc 1 511 1 view .LVU485
ARM GAS  /tmp/ccxXT9BN.s 			page 40


 1548 0002 70B5     		push	{r4, r5, r6, lr}
 1549              	.LCFI16:
 1550              		.cfi_def_cfa_offset 16
 1551              		.cfi_offset 4, -16
 1552              		.cfi_offset 5, -12
 1553              		.cfi_offset 6, -8
 1554              		.cfi_offset 14, -4
 1555 0004 0646     		mov	r6, r0
 1556              	.LBB17:
 513:Core/Src/nyan_os.c ****         return;
 514:Core/Src/nyan_os.c ****     }
 515:Core/Src/nyan_os.c **** 
 516:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; i++) {
 1557              		.loc 1 516 14 view .LVU486
 1558 0006 0024     		movs	r4, #0
 1559 0008 00E0     		b	.L115
 1560              	.LVL154:
 1561              	.L116:
 1562              		.loc 1 516 45 is_stmt 1 discriminator 2 view .LVU487
 1563              		.loc 1 516 46 is_stmt 0 discriminator 2 view .LVU488
 1564 000a 0134     		adds	r4, r4, #1
 1565              	.LVL155:
 1566              	.L115:
 1567              		.loc 1 516 21 is_stmt 1 discriminator 1 view .LVU489
 1568              		.loc 1 516 5 is_stmt 0 discriminator 1 view .LVU490
 1569 000c 092C     		cmp	r4, #9
 1570 000e 10DC     		bgt	.L122
 517:Core/Src/nyan_os.c ****         if (nos->command_arg_buffer[i] != NULL) {
 1571              		.loc 1 517 9 is_stmt 1 view .LVU491
 1572              		.loc 1 517 36 is_stmt 0 view .LVU492
 1573 0010 04F1AA03 		add	r3, r4, #170
 1574 0014 06EB8303 		add	r3, r6, r3, lsl #2
 1575 0018 5B68     		ldr	r3, [r3, #4]
 1576              		.loc 1 517 12 view .LVU493
 1577 001a 002B     		cmp	r3, #0
 1578 001c F5D0     		beq	.L116
 518:Core/Src/nyan_os.c ****             free(nos->command_arg_buffer[i]); 
 1579              		.loc 1 518 13 is_stmt 1 view .LVU494
 1580              		.loc 1 518 41 is_stmt 0 view .LVU495
 1581 001e 04F1AA05 		add	r5, r4, #170
 1582 0022 06EB8505 		add	r5, r6, r5, lsl #2
 1583 0026 6868     		ldr	r0, [r5, #4]
 1584              		.loc 1 518 13 view .LVU496
 1585 0028 FFF7FEFF 		bl	free
 1586              	.LVL156:
 519:Core/Src/nyan_os.c ****             nos->command_arg_buffer[i] = NULL;
 1587              		.loc 1 519 13 is_stmt 1 view .LVU497
 1588              		.loc 1 519 40 is_stmt 0 view .LVU498
 1589 002c 0023     		movs	r3, #0
 1590 002e 6B60     		str	r3, [r5, #4]
 1591 0030 EBE7     		b	.L116
 1592              	.L122:
 1593              		.loc 1 519 40 view .LVU499
 1594              	.LBE17:
 520:Core/Src/nyan_os.c ****         }
 521:Core/Src/nyan_os.c ****     }
 522:Core/Src/nyan_os.c **** }
ARM GAS  /tmp/ccxXT9BN.s 			page 41


 1595              		.loc 1 522 1 view .LVU500
 1596 0032 70BD     		pop	{r4, r5, r6, pc}
 1597              	.LVL157:
 1598              	.L119:
 1599              	.LCFI17:
 1600              		.cfi_def_cfa_offset 0
 1601              		.cfi_restore 4
 1602              		.cfi_restore 5
 1603              		.cfi_restore 6
 1604              		.cfi_restore 14
 1605              		.loc 1 522 1 view .LVU501
 1606 0034 7047     		bx	lr
 1607              		.cfi_endproc
 1608              	.LFE157:
 1610              		.section	.rodata.NyanDecodeArgs.str1.4,"aMS",%progbits,1
 1611              		.align	2
 1612              	.LC1:
 1613 0000 2000     		.ascii	" \000"
 1614              		.section	.text.NyanDecodeArgs,"ax",%progbits
 1615              		.align	1
 1616              		.global	NyanDecodeArgs
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1621              	NyanDecodeArgs:
 1622              	.LVL158:
 1623              	.LFB153:
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1624              		.loc 1 261 1 is_stmt 1 view -0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1628              		.loc 1 262 5 view .LVU503
 262:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1629              		.loc 1 262 8 is_stmt 0 view .LVU504
 1630 0000 0028     		cmp	r0, #0
 1631 0002 46D0     		beq	.L131
 261:Core/Src/nyan_os.c ****     if (!nos) {
 1632              		.loc 1 261 1 view .LVU505
 1633 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1634              	.LCFI18:
 1635              		.cfi_def_cfa_offset 24
 1636              		.cfi_offset 3, -24
 1637              		.cfi_offset 4, -20
 1638              		.cfi_offset 5, -16
 1639              		.cfi_offset 6, -12
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0006 0646     		mov	r6, r0
 267:Core/Src/nyan_os.c **** 
 1643              		.loc 1 267 5 is_stmt 1 view .LVU506
 1644 0008 FFF7FEFF 		bl	FreeNyanCommandArgs
 1645              	.LVL159:
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1646              		.loc 1 269 5 view .LVU507
 269:Core/Src/nyan_os.c ****     const char *delimiter = " ";
ARM GAS  /tmp/ccxXT9BN.s 			page 42


 1647              		.loc 1 269 44 is_stmt 0 view .LVU508
 1648 000c 0025     		movs	r5, #0
 1649 000e 86F88B50 		strb	r5, [r6, #139]
 270:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 1650              		.loc 1 270 5 is_stmt 1 view .LVU509
 1651              	.LVL160:
 271:Core/Src/nyan_os.c **** 
 1652              		.loc 1 271 5 view .LVU510
 271:Core/Src/nyan_os.c **** 
 1653              		.loc 1 271 34 is_stmt 0 view .LVU511
 1654 0012 06F10B07 		add	r7, r6, #11
 271:Core/Src/nyan_os.c **** 
 1655              		.loc 1 271 19 view .LVU512
 1656 0016 2049     		ldr	r1, .L140
 1657 0018 3846     		mov	r0, r7
 1658 001a FFF7FEFF 		bl	strtok
 1659              	.LVL161:
 1660 001e 0446     		mov	r4, r0
 1661              	.LVL162:
 273:Core/Src/nyan_os.c ****     while (token != NULL) {
 1662              		.loc 1 273 5 is_stmt 1 view .LVU513
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1663              		.loc 1 274 5 view .LVU514
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1664              		.loc 1 274 11 is_stmt 0 view .LVU515
 1665 0020 12E0     		b	.L125
 1666              	.LVL163:
 1667              	.L129:
 1668              	.LBB18:
 1669              	.LBB19:
 281:Core/Src/nyan_os.c ****                 }
 1670              		.loc 1 281 21 is_stmt 1 discriminator 3 view .LVU516
 281:Core/Src/nyan_os.c ****                 }
 1671              		.loc 1 281 49 is_stmt 0 discriminator 3 view .LVU517
 1672 0022 04F1AA03 		add	r3, r4, #170
 1673 0026 06EB8303 		add	r3, r6, r3, lsl #2
 1674 002a 5868     		ldr	r0, [r3, #4]
 281:Core/Src/nyan_os.c ****                 }
 1675              		.loc 1 281 21 discriminator 3 view .LVU518
 1676 002c FFF7FEFF 		bl	free
 1677              	.LVL164:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1678              		.loc 1 280 48 is_stmt 1 discriminator 3 view .LVU519
 1679 0030 0134     		adds	r4, r4, #1
 1680              	.LVL165:
 1681              	.L127:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1682              		.loc 1 280 33 discriminator 1 view .LVU520
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1683              		.loc 1 280 17 is_stmt 0 discriminator 1 view .LVU521
 1684 0032 A542     		cmp	r5, r4
 1685 0034 F5DC     		bgt	.L129
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1686              		.loc 1 280 17 discriminator 1 view .LVU522
 1687              	.LBE19:
 283:Core/Src/nyan_os.c ****             }
 1688              		.loc 1 283 24 view .LVU523
ARM GAS  /tmp/ccxXT9BN.s 			page 43


 1689 0036 0020     		movs	r0, #0
 1690 0038 2AE0     		b	.L124
 1691              	.LVL166:
 1692              	.L139:
 1693              	.LBB20:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1694              		.loc 1 280 26 view .LVU524
 1695 003a 0024     		movs	r4, #0
 1696              	.LVL167:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1697              		.loc 1 280 26 view .LVU525
 1698 003c F9E7     		b	.L127
 1699              	.LVL168:
 1700              	.L126:
 280:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1701              		.loc 1 280 26 view .LVU526
 1702              	.LBE20:
 1703              	.LBE18:
 288:Core/Src/nyan_os.c ****     }
 1704              		.loc 1 288 9 is_stmt 1 view .LVU527
 288:Core/Src/nyan_os.c ****     }
 1705              		.loc 1 288 17 is_stmt 0 view .LVU528
 1706 003e 1649     		ldr	r1, .L140
 1707 0040 0020     		movs	r0, #0
 1708 0042 FFF7FEFF 		bl	strtok
 1709              	.LVL169:
 1710 0046 0446     		mov	r4, r0
 1711              	.LVL170:
 1712              	.L125:
 274:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1713              		.loc 1 274 11 is_stmt 1 view .LVU529
 1714 0048 CCB1     		cbz	r4, .L138
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1715              		.loc 1 275 9 view .LVU530
 275:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1716              		.loc 1 275 12 is_stmt 0 view .LVU531
 1717 004a 092D     		cmp	r5, #9
 1718 004c F7DC     		bgt	.L126
 1719              	.LBB21:
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1720              		.loc 1 276 13 is_stmt 1 view .LVU532
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1721              		.loc 1 276 34 is_stmt 0 view .LVU533
 1722 004e 2046     		mov	r0, r4
 276:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1723              		.loc 1 276 34 view .LVU534
 1724 0050 FFF7FEFF 		bl	strlen
 1725              	.LVL171:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1726              		.loc 1 277 13 is_stmt 1 view .LVU535
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1727              		.loc 1 277 50 is_stmt 0 view .LVU536
 1728 0054 0130     		adds	r0, r0, #1
 1729              	.LVL172:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1730              		.loc 1 277 50 view .LVU537
 1731 0056 FFF7FEFF 		bl	malloc
ARM GAS  /tmp/ccxXT9BN.s 			page 44


 1732              	.LVL173:
 277:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1733              		.loc 1 277 48 view .LVU538
 1734 005a 05F1AA03 		add	r3, r5, #170
 1735 005e 06EB8303 		add	r3, r6, r3, lsl #2
 1736 0062 5860     		str	r0, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1737              		.loc 1 278 13 is_stmt 1 view .LVU539
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1738              		.loc 1 278 40 is_stmt 0 view .LVU540
 1739 0064 5B68     		ldr	r3, [r3, #4]
 278:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1740              		.loc 1 278 16 view .LVU541
 1741 0066 002B     		cmp	r3, #0
 1742 0068 E7D0     		beq	.L139
 285:Core/Src/nyan_os.c ****             arg_count++;
 1743              		.loc 1 285 13 is_stmt 1 view .LVU542
 285:Core/Src/nyan_os.c ****             arg_count++;
 1744              		.loc 1 285 51 is_stmt 0 view .LVU543
 1745 006a 05F1AA03 		add	r3, r5, #170
 1746 006e 06EB8303 		add	r3, r6, r3, lsl #2
 1747 0072 5868     		ldr	r0, [r3, #4]
 285:Core/Src/nyan_os.c ****             arg_count++;
 1748              		.loc 1 285 13 view .LVU544
 1749 0074 2146     		mov	r1, r4
 1750 0076 FFF7FEFF 		bl	strcpy
 1751              	.LVL174:
 286:Core/Src/nyan_os.c ****         }
 1752              		.loc 1 286 13 is_stmt 1 view .LVU545
 286:Core/Src/nyan_os.c ****         }
 1753              		.loc 1 286 22 is_stmt 0 view .LVU546
 1754 007a 0135     		adds	r5, r5, #1
 1755              	.LVL175:
 286:Core/Src/nyan_os.c ****         }
 1756              		.loc 1 286 22 view .LVU547
 1757 007c DFE7     		b	.L126
 1758              	.LVL176:
 1759              	.L138:
 286:Core/Src/nyan_os.c ****         }
 1760              		.loc 1 286 22 view .LVU548
 1761              	.LBE21:
 291:Core/Src/nyan_os.c **** 
 1762              		.loc 1 291 5 is_stmt 1 view .LVU549
 291:Core/Src/nyan_os.c **** 
 1763              		.loc 1 291 34 is_stmt 0 view .LVU550
 1764 007e EDB2     		uxtb	r5, r5
 1765              	.LVL177:
 291:Core/Src/nyan_os.c **** 
 1766              		.loc 1 291 34 view .LVU551
 1767 0080 86F88D50 		strb	r5, [r6, #141]
 294:Core/Src/nyan_os.c **** 
 1768              		.loc 1 294 5 is_stmt 1 view .LVU552
 1769 0084 8122     		movs	r2, #129
 1770 0086 0021     		movs	r1, #0
 1771 0088 3846     		mov	r0, r7
 1772              	.LVL178:
 294:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/ccxXT9BN.s 			page 45


 1773              		.loc 1 294 5 is_stmt 0 view .LVU553
 1774 008a FFF7FEFF 		bl	memset
 1775              	.LVL179:
 296:Core/Src/nyan_os.c **** }
 1776              		.loc 1 296 5 is_stmt 1 view .LVU554
 296:Core/Src/nyan_os.c **** }
 1777              		.loc 1 296 12 is_stmt 0 view .LVU555
 1778 008e 0120     		movs	r0, #1
 1779              	.LVL180:
 1780              	.L124:
 297:Core/Src/nyan_os.c **** 
 1781              		.loc 1 297 1 view .LVU556
 1782 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1783              	.LVL181:
 1784              	.L131:
 1785              	.LCFI19:
 1786              		.cfi_def_cfa_offset 0
 1787              		.cfi_restore 3
 1788              		.cfi_restore 4
 1789              		.cfi_restore 5
 1790              		.cfi_restore 6
 1791              		.cfi_restore 7
 1792              		.cfi_restore 14
 263:Core/Src/nyan_os.c ****     }
 1793              		.loc 1 263 16 view .LVU557
 1794 0092 0020     		movs	r0, #0
 1795              	.LVL182:
 297:Core/Src/nyan_os.c **** 
 1796              		.loc 1 297 1 view .LVU558
 1797 0094 7047     		bx	lr
 1798              	.L141:
 1799 0096 00BF     		.align	2
 1800              	.L140:
 1801 0098 00000000 		.word	.LC1
 1802              		.cfi_endproc
 1803              	.LFE153:
 1805              		.section	.text.NyanDecode,"ax",%progbits
 1806              		.align	1
 1807              		.global	NyanDecode
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1812              	NyanDecode:
 1813              	.LVL183:
 1814              	.LFB151:
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1815              		.loc 1 201 1 is_stmt 1 view -0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1819              		.loc 1 201 1 is_stmt 0 view .LVU560
 1820 0000 70B5     		push	{r4, r5, r6, lr}
 1821              	.LCFI20:
 1822              		.cfi_def_cfa_offset 16
 1823              		.cfi_offset 4, -16
 1824              		.cfi_offset 5, -12
ARM GAS  /tmp/ccxXT9BN.s 			page 46


 1825              		.cfi_offset 6, -8
 1826              		.cfi_offset 14, -4
 1827 0002 0546     		mov	r5, r0
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1828              		.loc 1 203 5 is_stmt 1 view .LVU561
 203:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1829              		.loc 1 203 14 is_stmt 0 view .LVU562
 1830 0004 0423     		movs	r3, #4
 1831 0006 4372     		strb	r3, [r0, #9]
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1832              		.loc 1 205 5 is_stmt 1 view .LVU563
 1833              	.LBB22:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1834              		.loc 1 205 10 view .LVU564
 1835              	.LVL184:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1836              		.loc 1 205 18 is_stmt 0 view .LVU565
 1837 0008 0024     		movs	r4, #0
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1838              		.loc 1 205 5 view .LVU566
 1839 000a 03E0     		b	.L143
 1840              	.LVL185:
 1841              	.L144:
 1842              	.LBB23:
 214:Core/Src/nyan_os.c ****         }
 1843              		.loc 1 214 13 is_stmt 1 discriminator 2 view .LVU567
 214:Core/Src/nyan_os.c ****         }
 1844              		.loc 1 214 22 is_stmt 0 discriminator 2 view .LVU568
 1845 000c 0323     		movs	r3, #3
 1846 000e 6B72     		strb	r3, [r5, #9]
 1847              	.LBE23:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1848              		.loc 1 205 61 is_stmt 1 discriminator 2 view .LVU569
 1849 0010 0134     		adds	r4, r4, #1
 1850              	.LVL186:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1851              		.loc 1 205 61 is_stmt 0 discriminator 2 view .LVU570
 1852 0012 E4B2     		uxtb	r4, r4
 1853              	.LVL187:
 1854              	.L143:
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1855              		.loc 1 205 31 is_stmt 1 discriminator 1 view .LVU571
 205:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1856              		.loc 1 205 5 is_stmt 0 discriminator 1 view .LVU572
 1857 0014 022C     		cmp	r4, #2
 1858 0016 13D8     		bhi	.L145
 1859              	.LBB24:
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1860              		.loc 1 206 9 is_stmt 1 view .LVU573
 206:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1861              		.loc 1 206 30 is_stmt 0 view .LVU574
 1862 0018 0A4B     		ldr	r3, .L148
 1863 001a 53F82460 		ldr	r6, [r3, r4, lsl #2]
 1864 001e 3046     		mov	r0, r6
 1865 0020 FFF7FEFF 		bl	strlen
 1866              	.LVL188:
 1867 0024 0246     		mov	r2, r0
ARM GAS  /tmp/ccxXT9BN.s 			page 47


 1868              	.LVL189:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1869              		.loc 1 208 9 is_stmt 1 view .LVU575
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1870              		.loc 1 208 12 is_stmt 0 view .LVU576
 1871 0026 8028     		cmp	r0, #128
 1872 0028 F0D8     		bhi	.L144
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1873              		.loc 1 208 49 discriminator 1 view .LVU577
 1874 002a 3146     		mov	r1, r6
 1875 002c 05F10B00 		add	r0, r5, #11
 1876              	.LVL190:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1877              		.loc 1 208 49 discriminator 1 view .LVU578
 1878 0030 FFF7FEFF 		bl	memcmp
 1879              	.LVL191:
 208:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1880              		.loc 1 208 46 discriminator 1 view .LVU579
 1881 0034 0028     		cmp	r0, #0
 1882 0036 E9D1     		bne	.L144
 209:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 1883              		.loc 1 209 13 is_stmt 1 view .LVU580
 1884 0038 2846     		mov	r0, r5
 1885 003a FFF7FEFF 		bl	NyanDecodeArgs
 1886              	.LVL192:
 211:Core/Src/nyan_os.c ****             break;
 1887              		.loc 1 211 13 view .LVU581
 211:Core/Src/nyan_os.c ****             break;
 1888              		.loc 1 211 22 is_stmt 0 view .LVU582
 1889 003e 6C72     		strb	r4, [r5, #9]
 212:Core/Src/nyan_os.c ****         } else {
 1890              		.loc 1 212 13 is_stmt 1 view .LVU583
 1891              	.L145:
 212:Core/Src/nyan_os.c ****         } else {
 1892              		.loc 1 212 13 is_stmt 0 view .LVU584
 1893              	.LBE24:
 1894              	.LBE22:
 219:Core/Src/nyan_os.c **** }
 1895              		.loc 1 219 5 is_stmt 1 view .LVU585
 220:Core/Src/nyan_os.c **** 
 1896              		.loc 1 220 1 is_stmt 0 view .LVU586
 1897 0040 0120     		movs	r0, #1
 1898 0042 70BD     		pop	{r4, r5, r6, pc}
 1899              	.LVL193:
 1900              	.L149:
 220:Core/Src/nyan_os.c **** 
 1901              		.loc 1 220 1 view .LVU587
 1902              		.align	2
 1903              	.L148:
 1904 0044 00000000 		.word	.LANCHOR9
 1905              		.cfi_endproc
 1906              	.LFE151:
 1908              		.section	.text.FreeNyanString,"ax",%progbits
 1909              		.align	1
 1910              		.global	FreeNyanString
 1911              		.syntax unified
 1912              		.thumb
ARM GAS  /tmp/ccxXT9BN.s 			page 48


 1913              		.thumb_func
 1915              	FreeNyanString:
 1916              	.LVL194:
 1917              	.LFB158:
 523:Core/Src/nyan_os.c **** 
 524:Core/Src/nyan_os.c **** void FreeNyanString(NyanString* nyanString)
 525:Core/Src/nyan_os.c **** {
 1918              		.loc 1 525 1 is_stmt 1 view -0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              		.loc 1 525 1 is_stmt 0 view .LVU589
 1923 0000 10B5     		push	{r4, lr}
 1924              	.LCFI21:
 1925              		.cfi_def_cfa_offset 8
 1926              		.cfi_offset 4, -8
 1927              		.cfi_offset 14, -4
 1928 0002 0446     		mov	r4, r0
 526:Core/Src/nyan_os.c ****     // Clear the memory contents
 527:Core/Src/nyan_os.c ****     for (uint32_t i = 0; i < nyanString->size; ++i) {
 1929              		.loc 1 527 5 is_stmt 1 view .LVU590
 1930              	.LBB25:
 1931              		.loc 1 527 10 view .LVU591
 1932              	.LVL195:
 1933              		.loc 1 527 19 is_stmt 0 view .LVU592
 1934 0004 0023     		movs	r3, #0
 1935              		.loc 1 527 5 view .LVU593
 1936 0006 03E0     		b	.L151
 1937              	.LVL196:
 1938              	.L152:
 528:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1939              		.loc 1 528 9 is_stmt 1 discriminator 3 view .LVU594
 1940              		.loc 1 528 19 is_stmt 0 discriminator 3 view .LVU595
 1941 0008 2268     		ldr	r2, [r4]
 1942              		.loc 1 528 32 discriminator 3 view .LVU596
 1943 000a 0021     		movs	r1, #0
 1944 000c D154     		strb	r1, [r2, r3]
 527:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1945              		.loc 1 527 48 is_stmt 1 discriminator 3 view .LVU597
 1946 000e 0133     		adds	r3, r3, #1
 1947              	.LVL197:
 1948              	.L151:
 527:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1949              		.loc 1 527 26 discriminator 1 view .LVU598
 527:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1950              		.loc 1 527 40 is_stmt 0 discriminator 1 view .LVU599
 1951 0010 6268     		ldr	r2, [r4, #4]
 527:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1952              		.loc 1 527 5 discriminator 1 view .LVU600
 1953 0012 9A42     		cmp	r2, r3
 1954 0014 F8D8     		bhi	.L152
 1955              	.LBE25:
 529:Core/Src/nyan_os.c ****     }
 530:Core/Src/nyan_os.c ****     // Free up the pointer and memory
 531:Core/Src/nyan_os.c ****     free(nyanString->p_array);
 1956              		.loc 1 531 5 is_stmt 1 view .LVU601
 1957 0016 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccxXT9BN.s 			page 49


 1958              	.LVL198:
 1959              		.loc 1 531 5 is_stmt 0 view .LVU602
 1960 0018 FFF7FEFF 		bl	free
 1961              	.LVL199:
 532:Core/Src/nyan_os.c ****     nyanString->p_array = NULL;
 1962              		.loc 1 532 5 is_stmt 1 view .LVU603
 1963              		.loc 1 532 25 is_stmt 0 view .LVU604
 1964 001c 0023     		movs	r3, #0
 1965 001e 2360     		str	r3, [r4]
 533:Core/Src/nyan_os.c ****     nyanString->size = 0;
 1966              		.loc 1 533 5 is_stmt 1 view .LVU605
 1967              		.loc 1 533 22 is_stmt 0 view .LVU606
 1968 0020 6360     		str	r3, [r4, #4]
 534:Core/Src/nyan_os.c **** }
 1969              		.loc 1 534 1 view .LVU607
 1970 0022 10BD     		pop	{r4, pc}
 1971              		.loc 1 534 1 view .LVU608
 1972              		.cfi_endproc
 1973              	.LFE158:
 1975              		.section	.text.ClearNyanCommandBuffer,"ax",%progbits
 1976              		.align	1
 1977              		.global	ClearNyanCommandBuffer
 1978              		.syntax unified
 1979              		.thumb
 1980              		.thumb_func
 1982              	ClearNyanCommandBuffer:
 1983              	.LVL200:
 1984              	.LFB159:
 535:Core/Src/nyan_os.c **** 
 536:Core/Src/nyan_os.c **** void ClearNyanCommandBuffer(volatile NyanOS* nos)
 537:Core/Src/nyan_os.c **** {
 1985              		.loc 1 537 1 is_stmt 1 view -0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              		.loc 1 537 1 is_stmt 0 view .LVU610
 1990 0000 08B5     		push	{r3, lr}
 1991              	.LCFI22:
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 3, -8
 1994              		.cfi_offset 14, -4
 538:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1995              		.loc 1 538 5 is_stmt 1 view .LVU611
 1996              		.loc 1 538 29 is_stmt 0 view .LVU612
 1997 0002 0021     		movs	r1, #0
 1998 0004 80F88C10 		strb	r1, [r0, #140]
 539:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 1999              		.loc 1 539 5 is_stmt 1 view .LVU613
 2000 0008 8122     		movs	r2, #129
 2001 000a 0B30     		adds	r0, r0, #11
 2002              	.LVL201:
 2003              		.loc 1 539 5 is_stmt 0 view .LVU614
 2004 000c FFF7FEFF 		bl	memset
 2005              	.LVL202:
 540:Core/Src/nyan_os.c **** };...
 2006              		.loc 1 540 1 view .LVU615
 2007 0010 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccxXT9BN.s 			page 50


 2008              		.cfi_endproc
 2009              	.LFE159:
 2011              		.section	.text.NyanOsInit,"ax",%progbits
 2012              		.align	1
 2013              		.global	NyanOsInit
 2014              		.syntax unified
 2015              		.thumb
 2016              		.thumb_func
 2018              	NyanOsInit:
 2019              	.LVL203:
 2020              	.LFB146:
  21:Core/Src/nyan_os.c **** {
 2021              		.loc 1 21 1 is_stmt 1 view -0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
  21:Core/Src/nyan_os.c **** {
 2025              		.loc 1 21 1 is_stmt 0 view .LVU617
 2026 0000 38B5     		push	{r3, r4, r5, lr}
 2027              	.LCFI23:
 2028              		.cfi_def_cfa_offset 16
 2029              		.cfi_offset 3, -16
 2030              		.cfi_offset 4, -12
 2031              		.cfi_offset 5, -8
 2032              		.cfi_offset 14, -4
 2033 0002 0546     		mov	r5, r0
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2034              		.loc 1 23 5 is_stmt 1 view .LVU618
  23:Core/Src/nyan_os.c ****     nos->state = READY;
 2035              		.loc 1 23 16 is_stmt 0 view .LVU619
 2036 0004 0123     		movs	r3, #1
 2037 0006 0372     		strb	r3, [r0, #8]
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2038              		.loc 1 24 5 is_stmt 1 view .LVU620
  24:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 2039              		.loc 1 24 14 is_stmt 0 view .LVU621
 2040 0008 0423     		movs	r3, #4
 2041 000a 4372     		strb	r3, [r0, #9]
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2042              		.loc 1 27 5 is_stmt 1 view .LVU622
  27:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 2043              		.loc 1 27 34 is_stmt 0 view .LVU623
 2044 000c 0024     		movs	r4, #0
 2045 000e 80F88D40 		strb	r4, [r0, #141]
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2046              		.loc 1 28 5 is_stmt 1 view .LVU624
  28:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 2047              		.loc 1 28 29 is_stmt 0 view .LVU625
 2048 0012 80F88C40 		strb	r4, [r0, #140]
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2049              		.loc 1 29 5 is_stmt 1 view .LVU626
  29:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = 0;
 2050              		.loc 1 29 23 is_stmt 0 view .LVU627
 2051 0016 80F89C42 		strb	r4, [r0, #668]
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
 2052              		.loc 1 30 5 is_stmt 1 view .LVU628
  30:Core/Src/nyan_os.c ****     nos->tx_chunks_solid = 0;
ARM GAS  /tmp/ccxXT9BN.s 			page 51


 2053              		.loc 1 30 26 is_stmt 0 view .LVU629
 2054 001a 80F89140 		strb	r4, [r0, #145]
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2055              		.loc 1 31 5 is_stmt 1 view .LVU630
  31:Core/Src/nyan_os.c ****     nos->tx_chunks_partial_bytes = 0;
 2056              		.loc 1 31 34 is_stmt 0 view .LVU631
 2057 001e 80F89240 		strb	r4, [r0, #146]
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2058              		.loc 1 32 5 is_stmt 1 view .LVU632
  32:Core/Src/nyan_os.c ****     nos->tx_chunk = 0;
 2059              		.loc 1 32 19 is_stmt 0 view .LVU633
 2060 0022 80F89340 		strb	r4, [r0, #147]
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2061              		.loc 1 33 5 is_stmt 1 view .LVU634
  33:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 2062              		.loc 1 33 17 is_stmt 0 view .LVU635
 2063 0026 80F88E40 		strb	r4, [r0, #142]
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2064              		.loc 1 36 5 is_stmt 1 view .LVU636
  36:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 2065              		.loc 1 36 17 is_stmt 0 view .LVU637
 2066 002a 4160     		str	r1, [r0, #4]
  39:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
 2067              		.loc 1 39 5 is_stmt 1 view .LVU638
 2068 002c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2069              	.LVL204:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2070              		.loc 1 42 5 view .LVU639
 2071              	.LBB26:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2072              		.loc 1 42 10 view .LVU640
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2073              		.loc 1 42 14 is_stmt 0 view .LVU641
 2074 0030 2346     		mov	r3, r4
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2075              		.loc 1 42 5 view .LVU642
 2076 0032 06E0     		b	.L157
 2077              	.LVL205:
 2078              	.L158:
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2079              		.loc 1 43 9 is_stmt 1 discriminator 3 view .LVU643
  43:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 2080              		.loc 1 43 36 is_stmt 0 discriminator 3 view .LVU644
 2081 0034 03F1AA02 		add	r2, r3, #170
 2082 0038 05EB8202 		add	r2, r5, r2, lsl #2
 2083 003c 0021     		movs	r1, #0
 2084 003e 5160     		str	r1, [r2, #4]
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2085              		.loc 1 42 45 is_stmt 1 discriminator 3 view .LVU645
 2086 0040 0133     		adds	r3, r3, #1
 2087              	.LVL206:
 2088              	.L157:
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2089              		.loc 1 42 21 discriminator 1 view .LVU646
  42:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 2090              		.loc 1 42 5 is_stmt 0 discriminator 1 view .LVU647
 2091 0042 092B     		cmp	r3, #9
ARM GAS  /tmp/ccxXT9BN.s 			page 52


 2092 0044 F6DD     		ble	.L158
 2093              	.LBE26:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2094              		.loc 1 47 5 is_stmt 1 view .LVU648
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2095              		.loc 1 47 28 is_stmt 0 view .LVU649
 2096 0046 0023     		movs	r3, #0
 2097              	.LVL207:
  47:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 2098              		.loc 1 47 28 view .LVU650
 2099 0048 C5F89430 		str	r3, [r5, #148]
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2100              		.loc 1 48 5 is_stmt 1 view .LVU651
  48:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 2101              		.loc 1 48 25 is_stmt 0 view .LVU652
 2102 004c C5F89830 		str	r3, [r5, #152]
  50:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2103              		.loc 1 50 5 is_stmt 1 view .LVU653
  51:Core/Src/nyan_os.c **** }
 2104              		.loc 1 51 1 is_stmt 0 view .LVU654
 2105 0050 0120     		movs	r0, #1
 2106 0052 38BD     		pop	{r3, r4, r5, pc}
  51:Core/Src/nyan_os.c **** }
 2107              		.loc 1 51 1 view .LVU655
 2108              		.cfi_endproc
 2109              	.LFE146:
 2111              		.section	.rodata.NyanAddInputBuffer.str1.4,"aMS",%progbits,1
 2112              		.align	2
 2113              	.LC2:
 2114 0000 08200800 		.ascii	"\010 \010\000"
 2115              		.section	.text.NyanAddInputBuffer,"ax",%progbits
 2116              		.align	1
 2117              		.global	NyanAddInputBuffer
 2118              		.syntax unified
 2119              		.thumb
 2120              		.thumb_func
 2122              	NyanAddInputBuffer:
 2123              	.LVL208:
 2124              	.LFB148:
  67:Core/Src/nyan_os.c **** {
 2125              		.loc 1 67 1 is_stmt 1 view -0
 2126              		.cfi_startproc
 2127              		@ args = 0, pretend = 0, frame = 8
 2128              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Core/Src/nyan_os.c **** {
 2129              		.loc 1 67 1 is_stmt 0 view .LVU657
 2130 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2131              	.LCFI24:
 2132              		.cfi_def_cfa_offset 24
 2133              		.cfi_offset 4, -24
 2134              		.cfi_offset 5, -20
 2135              		.cfi_offset 6, -16
 2136              		.cfi_offset 7, -12
 2137              		.cfi_offset 8, -8
 2138              		.cfi_offset 14, -4
 2139 0004 82B0     		sub	sp, sp, #8
 2140              	.LCFI25:
ARM GAS  /tmp/ccxXT9BN.s 			page 53


 2141              		.cfi_def_cfa_offset 32
 2142 0006 0446     		mov	r4, r0
 2143 0008 8846     		mov	r8, r1
 2144 000a 1646     		mov	r6, r2
  68:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
 2145              		.loc 1 68 5 is_stmt 1 view .LVU658
 2146              	.LVL209:
  69:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
 2147              		.loc 1 69 5 view .LVU659
  70:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
 2148              		.loc 1 70 5 view .LVU660
  71:Core/Src/nyan_os.c ****     const char line_feed = '\n';
 2149              		.loc 1 71 5 view .LVU661
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2150              		.loc 1 74 5 view .LVU662
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2151              		.loc 1 74 19 is_stmt 0 view .LVU663
 2152 000c 00F19C07 		add	r7, r0, #156
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2153              		.loc 1 74 5 view .LVU664
 2154 0010 4FF40072 		mov	r2, #512
 2155              	.LVL210:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2156              		.loc 1 74 5 view .LVU665
 2157 0014 0021     		movs	r1, #0
 2158              	.LVL211:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2159              		.loc 1 74 5 view .LVU666
 2160 0016 3846     		mov	r0, r7
 2161              	.LVL212:
  74:Core/Src/nyan_os.c ****     memset((void*)nos->rx_buffer, 0, sizeof(nos->rx_buffer));
 2162              		.loc 1 74 5 view .LVU667
 2163 0018 FFF7FEFF 		bl	memset
 2164              	.LVL213:
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2165              		.loc 1 75 5 is_stmt 1 view .LVU668
  75:Core/Src/nyan_os.c ****     nos->rx_buffer_sz = *Len;
 2166              		.loc 1 75 23 is_stmt 0 view .LVU669
 2167 001c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2168 001e 84F89C32 		strb	r3, [r4, #668]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2169              		.loc 1 76 5 is_stmt 1 view .LVU670
 2170              	.LBB27:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2171              		.loc 1 76 9 view .LVU671
 2172              	.LVL214:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2173              		.loc 1 76 18 is_stmt 0 view .LVU672
 2174 0022 0023     		movs	r3, #0
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2175              		.loc 1 76 5 view .LVU673
 2176 0024 05E0     		b	.L161
 2177              	.LVL215:
 2178              	.L162:
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2179              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU674
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
ARM GAS  /tmp/ccxXT9BN.s 			page 54


 2180              		.loc 1 77 33 is_stmt 0 discriminator 3 view .LVU675
 2181 0026 18F80350 		ldrb	r5, [r8, r3]	@ zero_extendqisi2
  77:Core/Src/nyan_os.c ****         nos->rx_buffer[i] = pbuf[i];
 2182              		.loc 1 77 27 discriminator 3 view .LVU676
 2183 002a E018     		adds	r0, r4, r3
 2184 002c 80F89C50 		strb	r5, [r0, #156]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2185              		.loc 1 76 35 is_stmt 1 discriminator 3 view .LVU677
 2186 0030 0133     		adds	r3, r3, #1
 2187              	.LVL216:
 2188              	.L161:
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2189              		.loc 1 76 25 discriminator 1 view .LVU678
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2190              		.loc 1 76 29 is_stmt 0 discriminator 1 view .LVU679
 2191 0032 3068     		ldr	r0, [r6]
  76:Core/Src/nyan_os.c ****     for(uint32_t i = 0; i < *Len; ++i){
 2192              		.loc 1 76 5 discriminator 1 view .LVU680
 2193 0034 9842     		cmp	r0, r3
 2194 0036 F6D8     		bhi	.L162
 2195              	.LBE27:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2196              		.loc 1 81 5 is_stmt 1 view .LVU681
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2197              		.loc 1 81 15 is_stmt 0 view .LVU682
 2198 0038 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2199              	.LVL217:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2200              		.loc 1 81 15 view .LVU683
 2201 003a DBB2     		uxtb	r3, r3
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2202              		.loc 1 81 5 view .LVU684
 2203 003c 012B     		cmp	r3, #1
 2204 003e 6DD0     		beq	.L174
 2205 0040 022B     		cmp	r3, #2
 2206 0042 00F08580 		beq	.L175
 2207              	.L165:
 115:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 2208              		.loc 1 115 5 is_stmt 1 view .LVU685
 116:Core/Src/nyan_os.c **** }
 2209              		.loc 1 116 1 is_stmt 0 view .LVU686
 2210 0046 0120     		movs	r0, #1
 2211 0048 02B0     		add	sp, sp, #8
 2212              	.LCFI26:
 2213              		.cfi_remember_state
 2214              		.cfi_def_cfa_offset 24
 2215              		@ sp needed
 2216 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2217              	.LVL218:
 2218              	.L166:
 2219              	.LCFI27:
 2220              		.cfi_restore_state
 2221              	.LBB28:
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2222              		.loc 1 84 102 discriminator 3 view .LVU687
 2223 004e 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
ARM GAS  /tmp/ccxXT9BN.s 			page 55


 2224              		.loc 1 84 96 discriminator 3 view .LVU688
 2225 0052 43B3     		cbz	r3, .L167
 2226              	.LBB29:
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2227              		.loc 1 86 21 is_stmt 1 view .LVU689
  86:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 2228              		.loc 1 86 29 is_stmt 0 view .LVU690
 2229 0054 3F4B     		ldr	r3, .L177
 2230 0056 1B68     		ldr	r3, [r3]
 2231 0058 ADF80430 		strh	r3, [sp, #4]	@ movhi
 2232 005c 1B0C     		lsrs	r3, r3, #16
 2233 005e 8DF80630 		strb	r3, [sp, #6]
  87:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
 2234              		.loc 1 87 21 is_stmt 1 view .LVU691
 2235 0062 0322     		movs	r2, #3
 2236 0064 01A9     		add	r1, sp, #4
 2237 0066 2046     		mov	r0, r4
 2238 0068 FFF7FEFF 		bl	NyanPrint
 2239              	.LVL219:
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2240              		.loc 1 88 21 view .LVU692
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2241              		.loc 1 88 44 is_stmt 0 view .LVU693
 2242 006c 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  88:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos] = '\0';
 2243              		.loc 1 88 66 view .LVU694
 2244 0070 2344     		add	r3, r3, r4
 2245 0072 0022     		movs	r2, #0
 2246 0074 DA72     		strb	r2, [r3, #11]
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2247              		.loc 1 89 21 is_stmt 1 view .LVU695
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2248              		.loc 1 89 26 is_stmt 0 view .LVU696
 2249 0076 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2250              		.loc 1 89 21 view .LVU697
 2251 007a 013B     		subs	r3, r3, #1
 2252 007c DBB2     		uxtb	r3, r3
 2253 007e 84F88C30 		strb	r3, [r4, #140]
 2254              	.L168:
  89:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 2255              		.loc 1 89 21 view .LVU698
 2256              	.LBE29:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2257              		.loc 1 83 60 is_stmt 1 discriminator 2 view .LVU699
 2258 0082 0135     		adds	r5, r5, #1
 2259              	.LVL220:
 2260              	.L163:
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2261              		.loc 1 83 35 discriminator 1 view .LVU700
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2262              		.loc 1 83 44 is_stmt 0 discriminator 1 view .LVU701
 2263 0084 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2264 0088 DBB2     		uxtb	r3, r3
  83:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2265              		.loc 1 83 13 discriminator 1 view .LVU702
 2266 008a AB42     		cmp	r3, r5
ARM GAS  /tmp/ccxXT9BN.s 			page 56


 2267 008c DBD9     		bls	.L165
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2268              		.loc 1 84 17 is_stmt 1 view .LVU703
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2269              		.loc 1 84 35 is_stmt 0 view .LVU704
 2270 008e 6319     		adds	r3, r4, r5
 2271 0090 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2272 0094 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2273              		.loc 1 84 19 view .LVU705
 2274 0096 082B     		cmp	r3, #8
 2275 0098 D9D0     		beq	.L166
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2276              		.loc 1 84 77 discriminator 2 view .LVU706
 2277 009a 6319     		adds	r3, r4, r5
 2278 009c 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2279 00a0 DBB2     		uxtb	r3, r3
  84:Core/Src/nyan_os.c ****                 if((nos->rx_buffer[idx] == backspace_char ||  nos->rx_buffer[idx] == del_char) && n
 2280              		.loc 1 84 59 discriminator 2 view .LVU707
 2281 00a2 7F2B     		cmp	r3, #127
 2282 00a4 D3D0     		beq	.L166
 2283              	.L167:
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2284              		.loc 1 90 24 is_stmt 1 view .LVU708
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2285              		.loc 1 90 41 is_stmt 0 view .LVU709
 2286 00a6 6319     		adds	r3, r4, r5
 2287 00a8 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2288 00ac DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2289              		.loc 1 90 26 view .LVU710
 2290 00ae 0A2B     		cmp	r3, #10
 2291 00b0 28D0     		beq	.L169
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2292              		.loc 1 90 77 discriminator 1 view .LVU711
 2293 00b2 6319     		adds	r3, r4, r5
 2294 00b4 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2295 00b8 DBB2     		uxtb	r3, r3
  90:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] == line_feed || nos->rx_buffer[idx] == carriage_retur
 2296              		.loc 1 90 60 discriminator 1 view .LVU712
 2297 00ba 0D2B     		cmp	r3, #13
 2298 00bc 22D0     		beq	.L169
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2299              		.loc 1 96 24 is_stmt 1 view .LVU713
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2300              		.loc 1 96 30 is_stmt 0 view .LVU714
 2301 00be 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 2302 00c2 DBB2     		uxtb	r3, r3
  96:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 2303              		.loc 1 96 26 view .LVU715
 2304 00c4 7E2B     		cmp	r3, #126
 2305 00c6 DCD8     		bhi	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2306              		.loc 1 98 24 is_stmt 1 view .LVU716
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2307              		.loc 1 98 41 is_stmt 0 view .LVU717
 2308 00c8 6319     		adds	r3, r4, r5
ARM GAS  /tmp/ccxXT9BN.s 			page 57


 2309 00ca 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2310 00ce DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2311              		.loc 1 98 26 view .LVU718
 2312 00d0 1F2B     		cmp	r3, #31
 2313 00d2 D6D9     		bls	.L168
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2314              		.loc 1 98 72 discriminator 1 view .LVU719
 2315 00d4 6319     		adds	r3, r4, r5
 2316 00d6 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2317 00da DBB2     		uxtb	r3, r3
  98:Core/Src/nyan_os.c ****                 } else if(nos->rx_buffer[idx] >= 0x20 && nos->rx_buffer[idx] <= 0x7E) {
 2318              		.loc 1 98 55 discriminator 1 view .LVU720
 2319 00dc 7E2B     		cmp	r3, #126
 2320 00de D0D8     		bhi	.L168
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2321              		.loc 1 99 21 is_stmt 1 view .LVU721
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2322              		.loc 1 99 44 is_stmt 0 view .LVU722
 2323 00e0 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2324              		.loc 1 99 64 view .LVU723
 2325 00e4 5A1C     		adds	r2, r3, #1
 2326 00e6 D2B2     		uxtb	r2, r2
 2327 00e8 84F88C20 		strb	r2, [r4, #140]
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2328              		.loc 1 99 84 view .LVU724
 2329 00ec 6219     		adds	r2, r4, r5
 2330 00ee 92F89C20 		ldrb	r2, [r2, #156]	@ zero_extendqisi2
 2331 00f2 D2B2     		uxtb	r2, r2
  99:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = nos->rx_buffer[idx];
 2332              		.loc 1 99 68 view .LVU725
 2333 00f4 2344     		add	r3, r3, r4
 2334 00f6 DA72     		strb	r2, [r3, #11]
 100:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)nos->rx_buffer, (size_t)*Len);
 2335              		.loc 1 100 21 is_stmt 1 view .LVU726
 2336 00f8 3268     		ldr	r2, [r6]
 2337 00fa 3946     		mov	r1, r7
 2338 00fc 2046     		mov	r0, r4
 2339 00fe FFF7FEFF 		bl	NyanPrint
 2340              	.LVL221:
 2341 0102 BEE7     		b	.L168
 2342              	.L169:
  92:Core/Src/nyan_os.c ****                     NyanDecode(nos);
 2343              		.loc 1 92 21 view .LVU727
 2344 0104 2046     		mov	r0, r4
 2345 0106 FFF7FEFF 		bl	NyanDecode
 2346              	.LVL222:
  93:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
 2347              		.loc 1 93 21 view .LVU728
 2348 010a 2046     		mov	r0, r4
 2349 010c FFF7FEFF 		bl	ClearNyanCommandBuffer
 2350              	.LVL223:
  94:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 2351              		.loc 1 94 21 view .LVU729
 2352 0110 0322     		movs	r2, #3
 2353 0112 1149     		ldr	r1, .L177+4
ARM GAS  /tmp/ccxXT9BN.s 			page 58


 2354 0114 2046     		mov	r0, r4
 2355 0116 FFF7FEFF 		bl	NyanPrint
 2356              	.LVL224:
  95:Core/Src/nyan_os.c ****                     break;
 2357              		.loc 1 95 21 view .LVU730
 2358 011a 94E7     		b	.L165
 2359              	.LVL225:
 2360              	.L174:
  95:Core/Src/nyan_os.c ****                     break;
 2361              		.loc 1 95 21 is_stmt 0 view .LVU731
 2362              	.LBE28:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2363              		.loc 1 81 5 view .LVU732
 2364 011c 0025     		movs	r5, #0
 2365 011e B1E7     		b	.L163
 2366              	.LVL226:
 2367              	.L172:
 2368              	.LBB30:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2369              		.loc 1 107 60 is_stmt 1 discriminator 2 view .LVU733
 2370 0120 0132     		adds	r2, r2, #1
 2371              	.LVL227:
 2372              	.L164:
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2373              		.loc 1 107 35 discriminator 1 view .LVU734
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2374              		.loc 1 107 44 is_stmt 0 discriminator 1 view .LVU735
 2375 0122 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 2376 0126 DBB2     		uxtb	r3, r3
 107:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < nos->rx_buffer_sz; ++idx) {
 2377              		.loc 1 107 13 discriminator 1 view .LVU736
 2378 0128 9342     		cmp	r3, r2
 2379 012a 8CD9     		bls	.L165
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2380              		.loc 1 108 17 is_stmt 1 view .LVU737
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2381              		.loc 1 108 23 is_stmt 0 view .LVU738
 2382 012c D4F8A012 		ldr	r1, [r4, #672]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2383              		.loc 1 108 45 view .LVU739
 2384 0130 D4F8A432 		ldr	r3, [r4, #676]
 108:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 2385              		.loc 1 108 19 view .LVU740
 2386 0134 9942     		cmp	r1, r3
 2387 0136 F3D2     		bcs	.L172
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2388              		.loc 1 109 21 is_stmt 1 view .LVU741
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2389              		.loc 1 109 24 is_stmt 0 view .LVU742
 2390 0138 D4F8A812 		ldr	r1, [r4, #680]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2391              		.loc 1 109 41 view .LVU743
 2392 013c D4F8A032 		ldr	r3, [r4, #672]
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2393              		.loc 1 109 57 view .LVU744
 2394 0140 581C     		adds	r0, r3, #1
 2395 0142 C4F8A002 		str	r0, [r4, #672]
ARM GAS  /tmp/ccxXT9BN.s 			page 59


 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2396              		.loc 1 109 77 view .LVU745
 2397 0146 A018     		adds	r0, r4, r2
 2398 0148 90F89C00 		ldrb	r0, [r0, #156]	@ zero_extendqisi2
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2399              		.loc 1 109 61 view .LVU746
 2400 014c C854     		strb	r0, [r1, r3]
 2401 014e E7E7     		b	.L172
 2402              	.LVL228:
 2403              	.L175:
 109:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = nos->rx_buffer[idx];
 2404              		.loc 1 109 61 view .LVU747
 2405              	.LBE30:
  81:Core/Src/nyan_os.c ****     switch(nos->state){
 2406              		.loc 1 81 5 view .LVU748
 2407 0150 0022     		movs	r2, #0
 2408 0152 E6E7     		b	.L164
 2409              	.L178:
 2410              		.align	2
 2411              	.L177:
 2412 0154 00000000 		.word	.LC2
 2413 0158 00000000 		.word	.LANCHOR4
 2414              		.cfi_endproc
 2415              	.LFE148:
 2417              		.section	.rodata.str1.4,"aMS",%progbits,1
 2418              		.align	2
 2419              	.LC3:
 2420 0000 67657469 		.ascii	"getinfo\000"
 2420      6E666F00 
 2421              		.align	2
 2422              	.LC4:
 2423 0008 77726974 		.ascii	"write-bitstream\000"
 2423      652D6269 
 2423      74737472 
 2423      65616D00 
 2424              		.align	2
 2425              	.LC5:
 2426 0018 7365742D 		.ascii	"set-owner\000"
 2426      6F776E65 
 2426      7200
 2427              		.section	.data.nyan_keys_getinfo,"aw"
 2428              		.align	2
 2429              		.set	.LANCHOR2,. + 0
 2432              	nyan_keys_getinfo:
 2433 0000 56657273 		.ascii	"Version: 0.01\015\012Author: Portland.HODL\015\012B"
 2433      696F6E3A 
 2433      20302E30 
 2433      310D0A41 
 2433      7574686F 
 2434 0027 75696C74 		.ascii	"uilt: 07/11/23\015\012\000"
 2434      3A203037 
 2434      2F31312F 
 2434      32330D0A 
 2434      00
 2435              		.section	.data.nyan_keys_getinfo_owner,"aw"
 2436              		.align	2
 2437              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/ccxXT9BN.s 			page 60


 2440              	nyan_keys_getinfo_owner:
 2441 0000 4F776E65 		.ascii	"Owner: \000"
 2441      723A2000 
 2442              		.section	.data.nyan_keys_newline,"aw"
 2443              		.align	2
 2444              		.set	.LANCHOR4,. + 0
 2447              	nyan_keys_newline:
 2448 0000 0D0A00   		.ascii	"\015\012\000"
 2449              		.section	.data.nyan_keys_path_text,"aw"
 2450              		.align	2
 2451              		.set	.LANCHOR1,. + 0
 2454              	nyan_keys_path_text:
 2455 0000 4E79616E 		.ascii	"NyanOS \360\237\220\261 > \000"
 2455      4F5320F0 
 2455      9F90B120 
 2455      3E2000
 2456              		.section	.data.nyan_keys_set_owner_success,"aw"
 2457              		.align	2
 2458              		.set	.LANCHOR7,. + 0
 2461              	nyan_keys_set_owner_success:
 2462 0000 4E79616E 		.ascii	"Nyan Keys owner has been successfully set\015\012\000"
 2462      204B6579 
 2462      73206F77 
 2462      6E657220 
 2462      68617320 
 2463              		.section	.data.nyan_keys_unknown_command,"aw"
 2464              		.align	2
 2465              		.set	.LANCHOR8,. + 0
 2468              	nyan_keys_unknown_command:
 2469 0000 436F6D6D 		.ascii	"Command not supported by NyanOS\000"
 2469      616E6420 
 2469      6E6F7420 
 2469      73757070 
 2469      6F727465 
 2470              		.section	.data.nyan_keys_welcome_text,"aw"
 2471              		.align	2
 2472              		.set	.LANCHOR0,. + 0
 2475              	nyan_keys_welcome_text:
 2476 0000 4E79616E 		.ascii	"Nyan Keys Operating System (NOS) V0.01\015\012Made "
 2476      204B6579 
 2476      73204F70 
 2476      65726174 
 2476      696E6720 
 2477 002d 62792050 		.ascii	"by Portland.HODL\015\012\015\012\000"
 2477      6F72746C 
 2477      616E642E 
 2477      484F444C 
 2477      0D0A0D0A 
 2478              		.section	.data.nyan_keys_write_bitstream_error_size,"aw"
 2479              		.align	2
 2480              		.set	.LANCHOR5,. + 0
 2483              	nyan_keys_write_bitstream_error_size:
 2484 0000 4661696C 		.ascii	"Failed to parse bitstream length, size must be less"
 2484      65642074 
 2484      6F207061 
 2484      72736520 
 2484      62697473 
ARM GAS  /tmp/ccxXT9BN.s 			page 61


 2485 0033 20746861 		.ascii	" than 65535 bytes.\015\012\000"
 2485      6E203635 
 2485      35333520 
 2485      62797465 
 2485      732E0D0A 
 2486              		.section	.data.nyan_keys_write_bitstream_error_size_tx_busy,"aw"
 2487              		.align	2
 2488              		.set	.LANCHOR6,. + 0
 2491              	nyan_keys_write_bitstream_error_size_tx_busy:
 2492 0000 4661696C 		.ascii	"Failed to write bitstream length, TX buffer is busy"
 2492      65642074 
 2492      6F207772 
 2492      69746520 
 2492      62697473 
 2493 0033 2E0D0A00 		.ascii	".\015\012\000"
 2494              		.section	.rodata.nyan_commands,"a"
 2495              		.align	2
 2496              		.set	.LANCHOR9,. + 0
 2499              	nyan_commands:
 2500 0000 00000000 		.word	.LC3
 2501 0004 08000000 		.word	.LC4
 2502 0008 18000000 		.word	.LC5
 2503              		.text
 2504              	.Letext0:
 2505              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2506              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2507              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2508              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f723xx.h"
 2509              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2510              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2511              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2512              		.file 9 "Core/Inc/24xx_eeprom.h"
 2513              		.file 10 "Core/Inc/lattice_ice_hx.h"
 2514              		.file 11 "Core/Inc/tim.h"
 2515              		.file 12 "Core/Inc/nyan_os.h"
 2516              		.file 13 "Core/Inc/nyan_sha256.h"
 2517              		.file 14 "Core/Inc/nyan_strings.h"
 2518              		.file 15 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdlib.h"
 2519              		.file 16 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 2520              		.file 17 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 2521              		.file 18 "Middlewares/Third_Party/AL94_USB_Composite/COMPOSITE/App/usbd_cdc_acm_if.h"
 2522              		.file 19 "<built-in>"
ARM GAS  /tmp/ccxXT9BN.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nyan_os.c
     /tmp/ccxXT9BN.s:20     .text.NyanPrint:0000000000000000 $t
     /tmp/ccxXT9BN.s:26     .text.NyanPrint:0000000000000000 NyanPrint
     /tmp/ccxXT9BN.s:195    .text.NyanWelcomeDisplay:0000000000000000 $t
     /tmp/ccxXT9BN.s:201    .text.NyanWelcomeDisplay:0000000000000000 NyanWelcomeDisplay
     /tmp/ccxXT9BN.s:268    .text.NyanWelcomeDisplay:0000000000000034 $d
     /tmp/ccxXT9BN.s:274    .text.NyanCdcTX:0000000000000000 $t
     /tmp/ccxXT9BN.s:280    .text.NyanCdcTX:0000000000000000 NyanCdcTX
     /tmp/ccxXT9BN.s:449    .text.NyanExeGetinfo:0000000000000000 $t
     /tmp/ccxXT9BN.s:455    .text.NyanExeGetinfo:0000000000000000 NyanExeGetinfo
     /tmp/ccxXT9BN.s:548    .text.NyanExeGetinfo:0000000000000064 $d
     /tmp/ccxXT9BN.s:555    .text.NyanExeSetOwner:0000000000000000 $t
     /tmp/ccxXT9BN.s:561    .text.NyanExeSetOwner:0000000000000000 NyanExeSetOwner
     /tmp/ccxXT9BN.s:840    .rodata.NyanExeWriteFpgaBitstream.str1.4:0000000000000000 $d
     /tmp/ccxXT9BN.s:844    .text.NyanExeWriteFpgaBitstream:0000000000000000 $t
     /tmp/ccxXT9BN.s:850    .text.NyanExeWriteFpgaBitstream:0000000000000000 NyanExeWriteFpgaBitstream
     /tmp/ccxXT9BN.s:1338   .text.NyanExeWriteFpgaBitstream:00000000000001d8 $d
     /tmp/ccxXT9BN.s:1347   .text.NyanExecute:0000000000000000 $t
     /tmp/ccxXT9BN.s:1353   .text.NyanExecute:0000000000000000 NyanExecute
     /tmp/ccxXT9BN.s:1378   .text.NyanExecute:0000000000000010 $d
     /tmp/ccxXT9BN.s:1522   .text.NyanExecute:00000000000000b8 $d
     /tmp/ccxXT9BN.s:1531   .text.FreeNyanCommandArgs:0000000000000000 $t
     /tmp/ccxXT9BN.s:1537   .text.FreeNyanCommandArgs:0000000000000000 FreeNyanCommandArgs
     /tmp/ccxXT9BN.s:1611   .rodata.NyanDecodeArgs.str1.4:0000000000000000 $d
     /tmp/ccxXT9BN.s:1615   .text.NyanDecodeArgs:0000000000000000 $t
     /tmp/ccxXT9BN.s:1621   .text.NyanDecodeArgs:0000000000000000 NyanDecodeArgs
     /tmp/ccxXT9BN.s:1801   .text.NyanDecodeArgs:0000000000000098 $d
     /tmp/ccxXT9BN.s:1806   .text.NyanDecode:0000000000000000 $t
     /tmp/ccxXT9BN.s:1812   .text.NyanDecode:0000000000000000 NyanDecode
     /tmp/ccxXT9BN.s:1904   .text.NyanDecode:0000000000000044 $d
     /tmp/ccxXT9BN.s:1909   .text.FreeNyanString:0000000000000000 $t
     /tmp/ccxXT9BN.s:1915   .text.FreeNyanString:0000000000000000 FreeNyanString
     /tmp/ccxXT9BN.s:1976   .text.ClearNyanCommandBuffer:0000000000000000 $t
     /tmp/ccxXT9BN.s:1982   .text.ClearNyanCommandBuffer:0000000000000000 ClearNyanCommandBuffer
     /tmp/ccxXT9BN.s:2012   .text.NyanOsInit:0000000000000000 $t
     /tmp/ccxXT9BN.s:2018   .text.NyanOsInit:0000000000000000 NyanOsInit
     /tmp/ccxXT9BN.s:2112   .rodata.NyanAddInputBuffer.str1.4:0000000000000000 $d
     /tmp/ccxXT9BN.s:2116   .text.NyanAddInputBuffer:0000000000000000 $t
     /tmp/ccxXT9BN.s:2122   .text.NyanAddInputBuffer:0000000000000000 NyanAddInputBuffer
     /tmp/ccxXT9BN.s:2412   .text.NyanAddInputBuffer:0000000000000154 $d
     /tmp/ccxXT9BN.s:2418   .rodata.str1.4:0000000000000000 $d
     /tmp/ccxXT9BN.s:2428   .data.nyan_keys_getinfo:0000000000000000 $d
     /tmp/ccxXT9BN.s:2432   .data.nyan_keys_getinfo:0000000000000000 nyan_keys_getinfo
     /tmp/ccxXT9BN.s:2436   .data.nyan_keys_getinfo_owner:0000000000000000 $d
     /tmp/ccxXT9BN.s:2440   .data.nyan_keys_getinfo_owner:0000000000000000 nyan_keys_getinfo_owner
     /tmp/ccxXT9BN.s:2443   .data.nyan_keys_newline:0000000000000000 $d
     /tmp/ccxXT9BN.s:2447   .data.nyan_keys_newline:0000000000000000 nyan_keys_newline
     /tmp/ccxXT9BN.s:2450   .data.nyan_keys_path_text:0000000000000000 $d
     /tmp/ccxXT9BN.s:2454   .data.nyan_keys_path_text:0000000000000000 nyan_keys_path_text
     /tmp/ccxXT9BN.s:2457   .data.nyan_keys_set_owner_success:0000000000000000 $d
     /tmp/ccxXT9BN.s:2461   .data.nyan_keys_set_owner_success:0000000000000000 nyan_keys_set_owner_success
     /tmp/ccxXT9BN.s:2464   .data.nyan_keys_unknown_command:0000000000000000 $d
     /tmp/ccxXT9BN.s:2468   .data.nyan_keys_unknown_command:0000000000000000 nyan_keys_unknown_command
     /tmp/ccxXT9BN.s:2471   .data.nyan_keys_welcome_text:0000000000000000 $d
     /tmp/ccxXT9BN.s:2475   .data.nyan_keys_welcome_text:0000000000000000 nyan_keys_welcome_text
     /tmp/ccxXT9BN.s:2479   .data.nyan_keys_write_bitstream_error_size:0000000000000000 $d
ARM GAS  /tmp/ccxXT9BN.s 			page 63


     /tmp/ccxXT9BN.s:2483   .data.nyan_keys_write_bitstream_error_size:0000000000000000 nyan_keys_write_bitstream_error_size
     /tmp/ccxXT9BN.s:2487   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 $d
     /tmp/ccxXT9BN.s:2491   .data.nyan_keys_write_bitstream_error_size_tx_busy:0000000000000000 nyan_keys_write_bitstream_error_size_tx_busy
     /tmp/ccxXT9BN.s:2495   .rodata.nyan_commands:0000000000000000 $d
     /tmp/ccxXT9BN.s:2499   .rodata.nyan_commands:0000000000000000 nyan_commands
     /tmp/ccxXT9BN.s:1383   .text.NyanExecute:0000000000000015 $d
     /tmp/ccxXT9BN.s:1383   .text.NyanExecute:0000000000000016 $t

UNDEFINED SYMBOLS
realloc
memcpy
malloc
CDC_Transmit
EepromRead
strncpy
strlen
strcpy
EepromFlushTxBuff
free
EepromWrite
atoi
sha256_init
sha256_update
sha256_final
sprintf
nos_fpga
HAL_TIM_OC_Stop_IT
HAL_TIM_OC_Start_IT
htim8
strtok
memset
memcmp
