ARM GAS  /tmp/cc1tEVD1.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"nyan_os.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/nyan_os.c"
  20              		.section	.text.NyanPrint,"ax",%progbits
  21              		.align	1
  22              		.global	NyanPrint
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NyanPrint:
  28              	.LVL0:
  29              	.LFB148:
   1:Core/Src/nyan_os.c **** /**
   2:Core/Src/nyan_os.c ****  * NyanOS (NOS) v0.01
   3:Core/Src/nyan_os.c ****  * Reese Russell
   4:Core/Src/nyan_os.c ****  * MIT License
   5:Core/Src/nyan_os.c ****  */
   6:Core/Src/nyan_os.c **** 
   7:Core/Src/nyan_os.c **** #include <stdio.h>
   8:Core/Src/nyan_os.c **** #include <stdlib.h> 
   9:Core/Src/nyan_os.c **** #include <string.h>
  10:Core/Src/nyan_os.c **** 
  11:Core/Src/nyan_os.c **** #include "main.h"
  12:Core/Src/nyan_os.c **** #include "24xx_eeprom.h"
  13:Core/Src/nyan_os.c **** #include "nyan_os.h"
  14:Core/Src/nyan_os.c **** #include "nyan_strings.h"
  15:Core/Src/nyan_os.c **** #include "usbd_cdc_acm_if.h"
  16:Core/Src/nyan_os.c **** 
  17:Core/Src/nyan_os.c **** NyanReturn NyanOsInit(volatile NyanOS* nos, Eeprom24xx* eeprom)
  18:Core/Src/nyan_os.c **** {
  19:Core/Src/nyan_os.c ****     // Set the operational state
  20:Core/Src/nyan_os.c ****     nos->state = READY;
  21:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
  22:Core/Src/nyan_os.c **** 
  23:Core/Src/nyan_os.c ****     // Default init the OS vars
  24:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
  25:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
  26:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
  27:Core/Src/nyan_os.c **** 
  28:Core/Src/nyan_os.c ****     // EEPROM Driver access
  29:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
ARM GAS  /tmp/cc1tEVD1.s 			page 2


  30:Core/Src/nyan_os.c **** 
  31:Core/Src/nyan_os.c ****     // Manual Setting of the memory because of the volatile qualifier.
  32:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
  33:Core/Src/nyan_os.c **** 
  34:Core/Src/nyan_os.c ****     // Set the arg pointer to a zero value
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
  36:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
  37:Core/Src/nyan_os.c ****     }
  38:Core/Src/nyan_os.c **** 
  39:Core/Src/nyan_os.c ****     // Output Buffer Creation
  40:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
  41:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
  42:Core/Src/nyan_os.c ****     
  43:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  44:Core/Src/nyan_os.c **** }
  45:Core/Src/nyan_os.c **** 
  46:Core/Src/nyan_os.c **** NyanReturn NyanWelcomeDisplay(volatile NyanOS *nos)
  47:Core/Src/nyan_os.c **** {
  48:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen && nos->send_welcome_screen_guard == 0) {
  49:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
  50:Core/Src/nyan_os.c ****         nos->send_welcome_screen_guard++;
  51:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
  52:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
  53:Core/Src/nyan_os.c ****     }
  54:Core/Src/nyan_os.c **** 
  55:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  56:Core/Src/nyan_os.c **** };
  57:Core/Src/nyan_os.c **** 
  58:Core/Src/nyan_os.c **** NyanReturn NyanAddInputBuffer(volatile NyanOS *nos, uint8_t *pbuf, uint32_t *Len)
  59:Core/Src/nyan_os.c **** {
  60:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
  61:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
  62:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
  63:Core/Src/nyan_os.c ****     const char line_feed = '\n';
  64:Core/Src/nyan_os.c ****     // 0. Check which state we are in.
  65:Core/Src/nyan_os.c ****     switch(nos->state){
  66:Core/Src/nyan_os.c ****         case READY: {
  67:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
  69:Core/Src/nyan_os.c ****                     // Handle backspace
  70:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
  71:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
  72:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
  73:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] == line_feed || pbuf[idx] == carriage_return) {
  74:Core/Src/nyan_os.c ****                     // Handle the action of executing a command by pressing enter
  75:Core/Src/nyan_os.c ****                     nos->command_buffer_pos = 0;
  76:Core/Src/nyan_os.c ****                     NyanDecode(nos);
  77:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
  78:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
  79:Core/Src/nyan_os.c ****                     break;
  80:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
  81:Core/Src/nyan_os.c ****                     // Handle out of command buffer space on next char
  82:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] >= 0x20 && pbuf[idx] <= 0x7E) {
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
  84:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)pbuf, (size_t)*Len);
  85:Core/Src/nyan_os.c ****                 }
  86:Core/Src/nyan_os.c ****             }
ARM GAS  /tmp/cc1tEVD1.s 			page 3


  87:Core/Src/nyan_os.c ****             break;
  88:Core/Src/nyan_os.c ****         }
  89:Core/Src/nyan_os.c ****         case DIRECT_BUFFER_ACCESS: {
  90:Core/Src/nyan_os.c ****             // In this state all signals are written directly to the buffer until the buffer is ful
  91:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
  92:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
  94:Core/Src/nyan_os.c ****             }
  95:Core/Src/nyan_os.c ****         }
  96:Core/Src/nyan_os.c ****         default: 
  97:Core/Src/nyan_os.c ****             break;
  98:Core/Src/nyan_os.c ****     }
  99:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 100:Core/Src/nyan_os.c **** }
 101:Core/Src/nyan_os.c **** 
 102:Core/Src/nyan_os.c **** NyanReturn NyanPrint(volatile NyanOS *nos, char* data, size_t len)
 103:Core/Src/nyan_os.c **** {
  30              		.loc 1 103 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 104:Core/Src/nyan_os.c ****     if (!nos || !data) {
  34              		.loc 1 104 5 view .LVU1
  35              		.loc 1 104 8 is_stmt 0 view .LVU2
  36 0000 0029     		cmp	r1, #0
  37 0002 18BF     		it	ne
  38 0004 0028     		cmpne	r0, #0
  39 0006 32D0     		beq	.L4
 103:Core/Src/nyan_os.c ****     if (!nos || !data) {
  40              		.loc 1 103 1 view .LVU3
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 5, -12
  45              		.cfi_offset 6, -8
  46              		.cfi_offset 14, -4
  47 000a 1546     		mov	r5, r2
  48 000c 0446     		mov	r4, r0
  49 000e 0E46     		mov	r6, r1
 105:Core/Src/nyan_os.c ****         // Handle null pointers being passed in
 106:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 107:Core/Src/nyan_os.c ****     }
 108:Core/Src/nyan_os.c **** 
 109:Core/Src/nyan_os.c ****     if (nos->tx_buffer.p_array == NULL) {
  50              		.loc 1 109 5 is_stmt 1 view .LVU4
  51              		.loc 1 109 23 is_stmt 0 view .LVU5
  52 0010 D0F89030 		ldr	r3, [r0, #144]
  53              		.loc 1 109 8 view .LVU6
  54 0014 CBB1     		cbz	r3, .L11
  55              	.LBB2:
 110:Core/Src/nyan_os.c ****         // Since the pointer is null we need to create a new one to hold our new data!
 111:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = (uint8_t *)malloc(len);
 112:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 113:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 114:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 115:Core/Src/nyan_os.c ****         }
 116:Core/Src/nyan_os.c ****         nos->tx_buffer.size = len;
ARM GAS  /tmp/cc1tEVD1.s 			page 4


 117:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 118:Core/Src/nyan_os.c ****     } else {
 119:Core/Src/nyan_os.c ****         // The pointer is not null, so we realloc and then add the contents of data to it
 120:Core/Src/nyan_os.c ****         uint8_t *new_buffer = (uint8_t *)realloc(nos->tx_buffer.p_array, nos->tx_buffer.size + len)
  56              		.loc 1 120 9 is_stmt 1 view .LVU7
  57              		.loc 1 120 64 is_stmt 0 view .LVU8
  58 0016 D0F89000 		ldr	r0, [r0, #144]
  59              	.LVL1:
  60              		.loc 1 120 88 view .LVU9
  61 001a D4F89410 		ldr	r1, [r4, #148]
  62              	.LVL2:
  63              		.loc 1 120 42 view .LVU10
  64 001e 1144     		add	r1, r1, r2
  65 0020 FFF7FEFF 		bl	realloc
  66              	.LVL3:
 121:Core/Src/nyan_os.c ****         if (new_buffer == NULL) {
  67              		.loc 1 121 9 is_stmt 1 view .LVU11
  68              		.loc 1 121 12 is_stmt 0 view .LVU12
  69 0024 38B3     		cbz	r0, .L6
 122:Core/Src/nyan_os.c ****             // Handle failed memory reallocation
 123:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 124:Core/Src/nyan_os.c ****         }
 125:Core/Src/nyan_os.c ****         nos->tx_buffer.p_array = new_buffer;
  70              		.loc 1 125 9 is_stmt 1 view .LVU13
  71              		.loc 1 125 32 is_stmt 0 view .LVU14
  72 0026 C4F89000 		str	r0, [r4, #144]
 126:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array + nos->tx_buffer.size, data, len); // Append the new data
  73              		.loc 1 126 9 is_stmt 1 view .LVU15
  74              		.loc 1 126 30 is_stmt 0 view .LVU16
  75 002a D4F89000 		ldr	r0, [r4, #144]
  76              	.LVL4:
  77              		.loc 1 126 55 view .LVU17
  78 002e D4F89430 		ldr	r3, [r4, #148]
  79              		.loc 1 126 9 view .LVU18
  80 0032 2A46     		mov	r2, r5
  81 0034 3146     		mov	r1, r6
  82 0036 1844     		add	r0, r0, r3
  83 0038 FFF7FEFF 		bl	memcpy
  84              	.LVL5:
 127:Core/Src/nyan_os.c ****         nos->tx_buffer.size += len; // Increase the size to reflect the new total size
  85              		.loc 1 127 9 is_stmt 1 view .LVU19
  86              		.loc 1 127 23 is_stmt 0 view .LVU20
  87 003c D4F89430 		ldr	r3, [r4, #148]
  88              		.loc 1 127 29 view .LVU21
  89 0040 2B44     		add	r3, r3, r5
  90 0042 C4F89430 		str	r3, [r4, #148]
  91              	.LBE2:
 128:Core/Src/nyan_os.c ****     }
 129:Core/Src/nyan_os.c **** 
 130:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
  92              		.loc 1 130 12 view .LVU22
  93 0046 0120     		movs	r0, #1
  94              	.LVL6:
  95              	.L2:
 131:Core/Src/nyan_os.c **** }
  96              		.loc 1 131 1 view .LVU23
  97 0048 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc1tEVD1.s 			page 5


  98              	.LVL7:
  99              	.L11:
 111:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 100              		.loc 1 111 9 is_stmt 1 view .LVU24
 111:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 101              		.loc 1 111 45 is_stmt 0 view .LVU25
 102 004a 1046     		mov	r0, r2
 103              	.LVL8:
 111:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 104              		.loc 1 111 45 view .LVU26
 105 004c FFF7FEFF 		bl	malloc
 106              	.LVL9:
 111:Core/Src/nyan_os.c ****         if (nos->tx_buffer.p_array == NULL) {
 107              		.loc 1 111 32 view .LVU27
 108 0050 C4F89000 		str	r0, [r4, #144]
 112:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 109              		.loc 1 112 9 is_stmt 1 view .LVU28
 112:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 110              		.loc 1 112 27 is_stmt 0 view .LVU29
 111 0054 D4F89030 		ldr	r3, [r4, #144]
 112:Core/Src/nyan_os.c ****             // Handle failed memory allocation
 112              		.loc 1 112 12 view .LVU30
 113 0058 5BB1     		cbz	r3, .L5
 116:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 114              		.loc 1 116 9 is_stmt 1 view .LVU31
 116:Core/Src/nyan_os.c ****         memcpy(nos->tx_buffer.p_array, data, len); // Copy the data into the buffer
 115              		.loc 1 116 29 is_stmt 0 view .LVU32
 116 005a C4F89450 		str	r5, [r4, #148]
 117:Core/Src/nyan_os.c ****     } else {
 117              		.loc 1 117 9 is_stmt 1 view .LVU33
 117:Core/Src/nyan_os.c ****     } else {
 118              		.loc 1 117 30 is_stmt 0 view .LVU34
 119 005e D4F89000 		ldr	r0, [r4, #144]
 117:Core/Src/nyan_os.c ****     } else {
 120              		.loc 1 117 9 view .LVU35
 121 0062 2A46     		mov	r2, r5
 122 0064 3146     		mov	r1, r6
 123 0066 FFF7FEFF 		bl	memcpy
 124              	.LVL10:
 130:Core/Src/nyan_os.c **** }
 125              		.loc 1 130 12 view .LVU36
 126 006a 0120     		movs	r0, #1
 127 006c ECE7     		b	.L2
 128              	.LVL11:
 129              	.L4:
 130              		.cfi_def_cfa_offset 0
 131              		.cfi_restore 4
 132              		.cfi_restore 5
 133              		.cfi_restore 6
 134              		.cfi_restore 14
 106:Core/Src/nyan_os.c ****     }
 135              		.loc 1 106 16 view .LVU37
 136 006e 0020     		movs	r0, #0
 137              	.LVL12:
 138              		.loc 1 131 1 view .LVU38
 139 0070 7047     		bx	lr
 140              	.LVL13:
ARM GAS  /tmp/cc1tEVD1.s 			page 6


 141              	.L5:
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 4, -16
 144              		.cfi_offset 5, -12
 145              		.cfi_offset 6, -8
 146              		.cfi_offset 14, -4
 114:Core/Src/nyan_os.c ****         }
 147              		.loc 1 114 20 view .LVU39
 148 0072 0020     		movs	r0, #0
 149 0074 E8E7     		b	.L2
 150              	.LVL14:
 151              	.L6:
 152              	.LBB3:
 123:Core/Src/nyan_os.c ****         }
 153              		.loc 1 123 20 view .LVU40
 154 0076 0020     		movs	r0, #0
 155              	.LVL15:
 123:Core/Src/nyan_os.c ****         }
 156              		.loc 1 123 20 view .LVU41
 157 0078 E6E7     		b	.L2
 158              	.LBE3:
 159              		.cfi_endproc
 160              	.LFE148:
 162              		.section	.text.NyanWelcomeDisplay,"ax",%progbits
 163              		.align	1
 164              		.global	NyanWelcomeDisplay
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	NyanWelcomeDisplay:
 170              	.LVL16:
 171              	.LFB146:
  47:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen && nos->send_welcome_screen_guard == 0) {
 172              		.loc 1 47 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
  48:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 176              		.loc 1 48 5 view .LVU43
  48:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 177              		.loc 1 48 11 is_stmt 0 view .LVU44
 178 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  48:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 179              		.loc 1 48 7 view .LVU45
 180 0002 A3B1     		cbz	r3, .L15
  47:Core/Src/nyan_os.c ****     if(nos->send_welcome_screen && nos->send_welcome_screen_guard == 0) {
 181              		.loc 1 47 1 discriminator 1 view .LVU46
 182 0004 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 186 0006 0446     		mov	r4, r0
  48:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 187              		.loc 1 48 39 discriminator 1 view .LVU47
 188 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  48:Core/Src/nyan_os.c ****         nos->send_welcome_screen = 0x00;
 189              		.loc 1 48 33 discriminator 1 view .LVU48
ARM GAS  /tmp/cc1tEVD1.s 			page 7


 190 000a 0BB1     		cbz	r3, .L18
 191              	.LVL17:
 192              	.L13:
  55:Core/Src/nyan_os.c **** };
 193              		.loc 1 55 5 is_stmt 1 view .LVU49
  56:Core/Src/nyan_os.c **** 
 194              		.loc 1 56 1 is_stmt 0 view .LVU50
 195 000c 0120     		movs	r0, #1
 196 000e 10BD     		pop	{r4, pc}
 197              	.LVL18:
 198              	.L18:
  49:Core/Src/nyan_os.c ****         nos->send_welcome_screen_guard++;
 199              		.loc 1 49 9 is_stmt 1 view .LVU51
  49:Core/Src/nyan_os.c ****         nos->send_welcome_screen_guard++;
 200              		.loc 1 49 34 is_stmt 0 view .LVU52
 201 0010 0370     		strb	r3, [r0]
  50:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 202              		.loc 1 50 9 is_stmt 1 view .LVU53
  50:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 203              		.loc 1 50 12 is_stmt 0 view .LVU54
 204 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  50:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_welcome_text[0], sizeof(nyan_keys_welcome_text));
 205              		.loc 1 50 39 view .LVU55
 206 0014 0133     		adds	r3, r3, #1
 207 0016 DBB2     		uxtb	r3, r3
 208 0018 4370     		strb	r3, [r0, #1]
  51:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 209              		.loc 1 51 9 is_stmt 1 view .LVU56
 210 001a 4222     		movs	r2, #66
 211 001c 0549     		ldr	r1, .L19
 212 001e FFF7FEFF 		bl	NyanPrint
 213              	.LVL19:
  52:Core/Src/nyan_os.c ****     }
 214              		.loc 1 52 9 view .LVU57
 215 0022 0F22     		movs	r2, #15
 216 0024 0449     		ldr	r1, .L19+4
 217 0026 2046     		mov	r0, r4
 218 0028 FFF7FEFF 		bl	NyanPrint
 219              	.LVL20:
 220 002c EEE7     		b	.L13
 221              	.LVL21:
 222              	.L15:
 223              		.cfi_def_cfa_offset 0
 224              		.cfi_restore 4
 225              		.cfi_restore 14
  55:Core/Src/nyan_os.c **** };
 226              		.loc 1 55 5 view .LVU58
  56:Core/Src/nyan_os.c **** 
 227              		.loc 1 56 1 is_stmt 0 view .LVU59
 228 002e 0120     		movs	r0, #1
 229              	.LVL22:
  56:Core/Src/nyan_os.c **** 
 230              		.loc 1 56 1 view .LVU60
 231 0030 7047     		bx	lr
 232              	.L20:
 233 0032 00BF     		.align	2
 234              	.L19:
ARM GAS  /tmp/cc1tEVD1.s 			page 8


 235 0034 00000000 		.word	nyan_keys_welcome_text
 236 0038 00000000 		.word	nyan_keys_path_text
 237              		.cfi_endproc
 238              	.LFE146:
 240              		.section	.text.NyanExeGetinfo,"ax",%progbits
 241              		.align	1
 242              		.global	NyanExeGetinfo
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	NyanExeGetinfo:
 248              	.LVL23:
 249              	.LFB152:
 132:Core/Src/nyan_os.c **** 
 133:Core/Src/nyan_os.c **** NyanReturn NyanDecode(volatile NyanOS* nos)
 134:Core/Src/nyan_os.c **** {
 135:Core/Src/nyan_os.c ****     // First set the nos state to idle
 136:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 137:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 138:Core/Src/nyan_os.c ****     for (uint8_t cmd_idx = 0; cmd_idx < _NYAN_NUM_COMMANDS; ++cmd_idx) {
 139:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 140:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 141:Core/Src/nyan_os.c ****         if (_NYAN_CMD_BUF_LEN >= command_len && memcmp((const char*)nos->command_buffer, nyan_comma
 142:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 143:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 144:Core/Src/nyan_os.c ****             nos->exe = (NyanExe)cmd_idx;
 145:Core/Src/nyan_os.c ****             break;
 146:Core/Src/nyan_os.c ****         } else {
 147:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_COMMAND_NOT_SUPPORTED;
 148:Core/Src/nyan_os.c ****         }
 149:Core/Src/nyan_os.c ****     }
 150:Core/Src/nyan_os.c **** 
 151:Core/Src/nyan_os.c ****     // If no command is matched, return some indication (e.g., NULL or a specific error string)
 152:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 153:Core/Src/nyan_os.c **** }
 154:Core/Src/nyan_os.c **** 
 155:Core/Src/nyan_os.c **** NyanReturn NyanExecute(volatile NyanOS* nos) {
 156:Core/Src/nyan_os.c ****     switch(nos->exe) {
 157:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 158:Core/Src/nyan_os.c ****             NyanExeGetinfo(nos);
 159:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 160:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 161:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 162:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 163:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 164:Core/Src/nyan_os.c ****             NyanExeSetOwner(nos);
 165:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 166:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 167:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 168:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 169:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 170:Core/Src/nyan_os.c ****             NyanExeWriteFpgaBitstream(nos);
 171:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 172:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 173:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 174:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 175:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
ARM GAS  /tmp/cc1tEVD1.s 			page 9


 176:Core/Src/nyan_os.c ****         case NYAN_EXE_COMMAND_NOT_SUPPORTED :
 177:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_unknown_command[0], sizeof(nyan_keys_unknown_command))
 178:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 179:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 180:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 181:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 182:Core/Src/nyan_os.c ****         default:
 183:Core/Src/nyan_os.c ****             // The execution state is out of bounds correct this.
 184:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 185:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 186:Core/Src/nyan_os.c ****     }
 187:Core/Src/nyan_os.c **** }
 188:Core/Src/nyan_os.c **** 
 189:Core/Src/nyan_os.c **** NyanReturn NyanDecodeArgs(volatile NyanOS* nos)
 190:Core/Src/nyan_os.c **** {
 191:Core/Src/nyan_os.c ****     if (!nos) {
 192:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 193:Core/Src/nyan_os.c ****     }
 194:Core/Src/nyan_os.c **** 
 195:Core/Src/nyan_os.c ****     // Destroy any previous allocated arguments
 196:Core/Src/nyan_os.c ****     FreeNyanCommandArgs(nos);
 197:Core/Src/nyan_os.c **** 
 198:Core/Src/nyan_os.c ****     nos->command_buffer[_NYAN_CMD_BUF_LEN] = '\0';
 199:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 200:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 201:Core/Src/nyan_os.c **** 
 202:Core/Src/nyan_os.c ****     int arg_count = 0;
 203:Core/Src/nyan_os.c ****     while (token != NULL) {
 204:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 205:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 206:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 207:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 208:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 209:Core/Src/nyan_os.c ****                 for (int i = 0; i < arg_count; ++i) {
 210:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 211:Core/Src/nyan_os.c ****                 }
 212:Core/Src/nyan_os.c ****                 return NOS_FAILURE;
 213:Core/Src/nyan_os.c ****             }
 214:Core/Src/nyan_os.c ****             strcpy((char *)nos->command_arg_buffer[arg_count], token);
 215:Core/Src/nyan_os.c ****             arg_count++;
 216:Core/Src/nyan_os.c ****         }
 217:Core/Src/nyan_os.c ****         token = strtok(NULL, delimiter);
 218:Core/Src/nyan_os.c ****     }
 219:Core/Src/nyan_os.c **** 
 220:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = arg_count;
 221:Core/Src/nyan_os.c **** 
 222:Core/Src/nyan_os.c ****     // Nullify the command buffer
 223:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 224:Core/Src/nyan_os.c **** 
 225:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 226:Core/Src/nyan_os.c **** }
 227:Core/Src/nyan_os.c **** 
 228:Core/Src/nyan_os.c **** NyanReturn NyanExeGetinfo(volatile NyanOS* nos)
 229:Core/Src/nyan_os.c **** {
 250              		.loc 1 229 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 64
ARM GAS  /tmp/cc1tEVD1.s 			page 10


 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		.loc 1 229 1 is_stmt 0 view .LVU62
 255 0000 10B5     		push	{r4, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 4, -8
 258              		.cfi_offset 14, -4
 259 0002 90B0     		sub	sp, sp, #64
 260              		.cfi_def_cfa_offset 72
 261 0004 0446     		mov	r4, r0
 230:Core/Src/nyan_os.c ****     // We need to fetch the owners name from the eeprom
 231:Core/Src/nyan_os.c ****     EepromRead(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 262              		.loc 1 231 5 is_stmt 1 view .LVU63
 263              		.loc 1 231 19 is_stmt 0 view .LVU64
 264 0006 4068     		ldr	r0, [r0, #4]
 265              	.LVL24:
 266              		.loc 1 231 5 view .LVU65
 267 0008 4023     		movs	r3, #64
 268 000a 2022     		movs	r2, #32
 269 000c 0021     		movs	r1, #0
 270 000e FFF7FEFF 		bl	EepromRead
 271              	.LVL25:
 232:Core/Src/nyan_os.c **** 
 233:Core/Src/nyan_os.c ****     // This has to be polling until callbacks are improved
 234:Core/Src/nyan_os.c ****     while(nos->eeprom->rx_inflight){}
 272              		.loc 1 234 5 is_stmt 1 view .LVU66
 273              	.L22:
 274              		.loc 1 234 37 discriminator 1 view .LVU67
 275              		.loc 1 234 11 discriminator 1 view .LVU68
 276              		.loc 1 234 14 is_stmt 0 discriminator 1 view .LVU69
 277 0012 6368     		ldr	r3, [r4, #4]
 278              		.loc 1 234 22 discriminator 1 view .LVU70
 279 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 280              		.loc 1 234 11 discriminator 1 view .LVU71
 281 0016 002B     		cmp	r3, #0
 282 0018 FBD1     		bne	.L22
 235:Core/Src/nyan_os.c **** 
 236:Core/Src/nyan_os.c ****     // Ensure data from EEPROM is null-terminated
 237:Core/Src/nyan_os.c ****     nos->eeprom->rx_buf[SIZE_BOARD_OWNER - 1] = '\0';
 283              		.loc 1 237 5 is_stmt 1 view .LVU72
 284              		.loc 1 237 8 is_stmt 0 view .LVU73
 285 001a 6368     		ldr	r3, [r4, #4]
 286              		.loc 1 237 47 view .LVU74
 287 001c 0022     		movs	r2, #0
 288 001e 83F8C320 		strb	r2, [r3, #195]
 238:Core/Src/nyan_os.c **** 
 239:Core/Src/nyan_os.c ****     char owner[SIZE_BOARD_OWNER];
 289              		.loc 1 239 5 is_stmt 1 view .LVU75
 240:Core/Src/nyan_os.c ****     strncpy(owner, (const char *)nos->eeprom->rx_buf, SIZE_BOARD_OWNER);
 290              		.loc 1 240 5 view .LVU76
 291              		.loc 1 240 37 is_stmt 0 view .LVU77
 292 0022 6168     		ldr	r1, [r4, #4]
 293              		.loc 1 240 5 view .LVU78
 294 0024 4022     		movs	r2, #64
 295 0026 8431     		adds	r1, r1, #132
 296 0028 6846     		mov	r0, sp
 297 002a FFF7FEFF 		bl	strncpy
 298              	.LVL26:
ARM GAS  /tmp/cc1tEVD1.s 			page 11


 241:Core/Src/nyan_os.c **** 
 242:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo[0], sizeof(nyan_keys_getinfo));
 299              		.loc 1 242 5 is_stmt 1 view .LVU79
 300 002e 3822     		movs	r2, #56
 301 0030 0C49     		ldr	r1, .L24
 302 0032 2046     		mov	r0, r4
 303 0034 FFF7FEFF 		bl	NyanPrint
 304              	.LVL27:
 243:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_getinfo_owner[0], sizeof(nyan_keys_getinfo_owner));
 305              		.loc 1 243 5 view .LVU80
 306 0038 0822     		movs	r2, #8
 307 003a 0B49     		ldr	r1, .L24+4
 308 003c 2046     		mov	r0, r4
 309 003e FFF7FEFF 		bl	NyanPrint
 310              	.LVL28:
 244:Core/Src/nyan_os.c ****     NyanPrint(nos, owner, strlen(owner));
 311              		.loc 1 244 5 view .LVU81
 312 0042 6846     		mov	r0, sp
 313 0044 FFF7FEFF 		bl	strlen
 314              	.LVL29:
 315 0048 0246     		mov	r2, r0
 316 004a 6946     		mov	r1, sp
 317 004c 2046     		mov	r0, r4
 318 004e FFF7FEFF 		bl	NyanPrint
 319              	.LVL30:
 245:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 320              		.loc 1 245 5 view .LVU82
 321 0052 0322     		movs	r2, #3
 322 0054 0549     		ldr	r1, .L24+8
 323 0056 2046     		mov	r0, r4
 324 0058 FFF7FEFF 		bl	NyanPrint
 325              	.LVL31:
 246:Core/Src/nyan_os.c **** 
 247:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 326              		.loc 1 247 5 view .LVU83
 248:Core/Src/nyan_os.c **** }
 327              		.loc 1 248 1 is_stmt 0 view .LVU84
 328 005c 0120     		movs	r0, #1
 329 005e 10B0     		add	sp, sp, #64
 330              		.cfi_def_cfa_offset 8
 331              		@ sp needed
 332 0060 10BD     		pop	{r4, pc}
 333              	.LVL32:
 334              	.L25:
 335              		.loc 1 248 1 view .LVU85
 336 0062 00BF     		.align	2
 337              	.L24:
 338 0064 00000000 		.word	nyan_keys_getinfo
 339 0068 00000000 		.word	nyan_keys_getinfo_owner
 340 006c 00000000 		.word	nyan_keys_newline
 341              		.cfi_endproc
 342              	.LFE152:
 344              		.section	.text.NyanExeSetOwner,"ax",%progbits
 345              		.align	1
 346              		.global	NyanExeSetOwner
 347              		.syntax unified
 348              		.thumb
ARM GAS  /tmp/cc1tEVD1.s 			page 12


 349              		.thumb_func
 351              	NyanExeSetOwner:
 352              	.LVL33:
 353              	.LFB153:
 249:Core/Src/nyan_os.c **** 
 250:Core/Src/nyan_os.c **** NyanReturn NyanExeSetOwner(volatile NyanOS* nos) 
 251:Core/Src/nyan_os.c **** {
 354              		.loc 1 251 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		.loc 1 251 1 is_stmt 0 view .LVU87
 359 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 360              		.cfi_def_cfa_offset 24
 361              		.cfi_offset 4, -24
 362              		.cfi_offset 5, -20
 363              		.cfi_offset 6, -16
 364              		.cfi_offset 7, -12
 365              		.cfi_offset 8, -8
 366              		.cfi_offset 14, -4
 252:Core/Src/nyan_os.c ****     if (!nos) {
 367              		.loc 1 252 5 is_stmt 1 view .LVU88
 368              		.loc 1 252 8 is_stmt 0 view .LVU89
 369 0004 0028     		cmp	r0, #0
 370 0006 78D0     		beq	.L39
 371 0008 0446     		mov	r4, r0
 253:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle null pointer
 254:Core/Src/nyan_os.c ****     }
 255:Core/Src/nyan_os.c **** 
 256:Core/Src/nyan_os.c ****     if (nos->command_buffer_num_args < 2) {
 372              		.loc 1 256 5 is_stmt 1 view .LVU90
 373              		.loc 1 256 12 is_stmt 0 view .LVU91
 374 000a 90F88C30 		ldrb	r3, [r0, #140]	@ zero_extendqisi2
 375 000e DBB2     		uxtb	r3, r3
 376              		.loc 1 256 8 view .LVU92
 377 0010 012B     		cmp	r3, #1
 378 0012 74D9     		bls	.L40
 379              	.LBB4:
 257:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Not enough args
 258:Core/Src/nyan_os.c ****     }
 259:Core/Src/nyan_os.c **** 
 260:Core/Src/nyan_os.c ****     size_t total_chars = 0;
 261:Core/Src/nyan_os.c **** 
 262:Core/Src/nyan_os.c ****     // Calculate total length needed, including spaces between arguments
 263:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 380              		.loc 1 263 14 view .LVU93
 381 0014 0125     		movs	r5, #1
 382              	.LBE4:
 260:Core/Src/nyan_os.c **** 
 383              		.loc 1 260 12 view .LVU94
 384 0016 0026     		movs	r6, #0
 385 0018 09E0     		b	.L28
 386              	.LVL34:
 387              	.L30:
 388              	.LBB5:
 264:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 389              		.loc 1 264 9 is_stmt 1 discriminator 4 view .LVU95
ARM GAS  /tmp/cc1tEVD1.s 			page 13


 390              		.loc 1 264 62 is_stmt 0 discriminator 4 view .LVU96
 391 001a 05F12803 		add	r3, r5, #40
 392 001e 04EB8303 		add	r3, r4, r3, lsl #2
 393 0022 5868     		ldr	r0, [r3, #4]
 394              		.loc 1 264 24 discriminator 4 view .LVU97
 395 0024 FFF7FEFF 		bl	strlen
 396              	.LVL35:
 397              		.loc 1 264 67 discriminator 4 view .LVU98
 398 0028 0130     		adds	r0, r0, #1
 399              		.loc 1 264 21 discriminator 4 view .LVU99
 400 002a 0644     		add	r6, r6, r0
 401              	.LVL36:
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 402              		.loc 1 263 94 is_stmt 1 discriminator 4 view .LVU100
 403 002c 0135     		adds	r5, r5, #1
 404              	.LVL37:
 405              	.L28:
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 406              		.loc 1 263 54 discriminator 1 view .LVU101
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 407              		.loc 1 263 28 is_stmt 0 discriminator 1 view .LVU102
 408 002e 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 409 0032 DBB2     		uxtb	r3, r3
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 410              		.loc 1 263 54 discriminator 1 view .LVU103
 411 0034 AB42     		cmp	r3, r5
 412 0036 06DD     		ble	.L29
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 413              		.loc 1 263 80 discriminator 3 view .LVU104
 414 0038 05F12803 		add	r3, r5, #40
 415 003c 04EB8303 		add	r3, r4, r3, lsl #2
 416 0040 5B68     		ldr	r3, [r3, #4]
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 417              		.loc 1 263 54 discriminator 3 view .LVU105
 418 0042 002B     		cmp	r3, #0
 419 0044 E9D1     		bne	.L30
 420              	.L29:
 263:Core/Src/nyan_os.c ****         total_chars += strlen((char *)nos->command_arg_buffer[i]) + 1; // +1 for space or null term
 421              		.loc 1 263 54 discriminator 3 view .LVU106
 422              	.LBE5:
 265:Core/Src/nyan_os.c ****     }
 266:Core/Src/nyan_os.c **** 
 267:Core/Src/nyan_os.c ****     // Since the size cant exceed 63 chars with null terminator 
 268:Core/Src/nyan_os.c ****     if (total_chars > SIZE_BOARD_OWNER - nos->command_buffer_num_args - 1  || total_chars == 0) {
 423              		.loc 1 268 5 is_stmt 1 view .LVU107
 424              		.loc 1 268 45 is_stmt 0 view .LVU108
 425 0046 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 426              		.loc 1 268 71 view .LVU109
 427 004a C3F13F03 		rsb	r3, r3, #63
 428              		.loc 1 268 8 view .LVU110
 429 004e B342     		cmp	r3, r6
 430 0050 59D3     		bcc	.L41
 431              		.loc 1 268 76 discriminator 1 view .LVU111
 432 0052 0EB9     		cbnz	r6, .L46
 269:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Would overflow memory boundaries 
 433              		.loc 1 269 16 view .LVU112
 434 0054 0026     		movs	r6, #0
ARM GAS  /tmp/cc1tEVD1.s 			page 14


 435              	.LVL38:
 436              		.loc 1 269 16 view .LVU113
 437 0056 53E0     		b	.L27
 438              	.LVL39:
 439              	.L46:
 270:Core/Src/nyan_os.c ****     }
 271:Core/Src/nyan_os.c **** 
 272:Core/Src/nyan_os.c ****     // Allocate memory for the new owner name
 273:Core/Src/nyan_os.c ****     char* owners_name = (char*)malloc(SIZE_BOARD_OWNER);
 440              		.loc 1 273 5 is_stmt 1 view .LVU114
 441              		.loc 1 273 32 is_stmt 0 view .LVU115
 442 0058 4020     		movs	r0, #64
 443 005a FFF7FEFF 		bl	malloc
 444              	.LVL40:
 274:Core/Src/nyan_os.c ****     if (!owners_name) {
 445              		.loc 1 274 5 is_stmt 1 view .LVU116
 446              		.loc 1 274 8 is_stmt 0 view .LVU117
 447 005e 0546     		mov	r5, r0
 448              	.LVL41:
 449              		.loc 1 274 8 view .LVU118
 450 0060 0028     		cmp	r0, #0
 451 0062 52D0     		beq	.L43
 452              	.LBB6:
 275:Core/Src/nyan_os.c ****         return NOS_FAILURE; // Handle allocation failure
 276:Core/Src/nyan_os.c ****     }
 277:Core/Src/nyan_os.c **** 
 278:Core/Src/nyan_os.c ****     // Zero out the SIZE_BOARD_OWNER bytes
 279:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i) {
 453              		.loc 1 279 14 view .LVU119
 454 0064 0023     		movs	r3, #0
 455 0066 02E0     		b	.L31
 456              	.LVL42:
 457              	.L32:
 280:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 458              		.loc 1 280 9 is_stmt 1 discriminator 3 view .LVU120
 459              		.loc 1 280 24 is_stmt 0 discriminator 3 view .LVU121
 460 0068 0022     		movs	r2, #0
 461 006a EA54     		strb	r2, [r5, r3]
 279:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 462              		.loc 1 279 43 is_stmt 1 discriminator 3 view .LVU122
 463 006c 0133     		adds	r3, r3, #1
 464              	.LVL43:
 465              	.L31:
 279:Core/Src/nyan_os.c ****         owners_name[i] = '\0';
 466              		.loc 1 279 23 discriminator 1 view .LVU123
 467 006e 3F2B     		cmp	r3, #63
 468 0070 FADD     		ble	.L32
 469              	.LBE6:
 281:Core/Src/nyan_os.c ****     }
 282:Core/Src/nyan_os.c **** 
 283:Core/Src/nyan_os.c ****     // Concatenate arguments with spaces
 284:Core/Src/nyan_os.c ****     char* current_pos = owners_name;
 470              		.loc 1 284 11 is_stmt 0 view .LVU124
 471 0072 A846     		mov	r8, r5
 472              	.LBB7:
 285:Core/Src/nyan_os.c ****     for (int i = 1; i < nos->command_buffer_num_args && nos->command_arg_buffer[i] != NULL; i++) {
 473              		.loc 1 285 14 view .LVU125
ARM GAS  /tmp/cc1tEVD1.s 			page 15


 474 0074 0126     		movs	r6, #1
 475              	.LVL44:
 476              		.loc 1 285 14 view .LVU126
 477 0076 00E0     		b	.L33
 478              	.LVL45:
 479              	.L34:
 480              		.loc 1 285 94 is_stmt 1 discriminator 2 view .LVU127
 481 0078 0136     		adds	r6, r6, #1
 482              	.LVL46:
 483              	.L33:
 484              		.loc 1 285 54 discriminator 1 view .LVU128
 485              		.loc 1 285 28 is_stmt 0 discriminator 1 view .LVU129
 486 007a 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 487 007e DBB2     		uxtb	r3, r3
 488              		.loc 1 285 54 discriminator 1 view .LVU130
 489 0080 B342     		cmp	r3, r6
 490 0082 21DD     		ble	.L35
 491              		.loc 1 285 80 discriminator 3 view .LVU131
 492 0084 06F12803 		add	r3, r6, #40
 493 0088 04EB8303 		add	r3, r4, r3, lsl #2
 494 008c 5B68     		ldr	r3, [r3, #4]
 495              		.loc 1 285 54 discriminator 3 view .LVU132
 496 008e DBB1     		cbz	r3, .L35
 286:Core/Src/nyan_os.c ****         strcpy(current_pos, (char *)nos->command_arg_buffer[i]);
 497              		.loc 1 286 9 is_stmt 1 view .LVU133
 498              		.loc 1 286 60 is_stmt 0 view .LVU134
 499 0090 06F12807 		add	r7, r6, #40
 500 0094 04EB8707 		add	r7, r4, r7, lsl #2
 501 0098 7968     		ldr	r1, [r7, #4]
 502              		.loc 1 286 9 view .LVU135
 503 009a 4046     		mov	r0, r8
 504 009c FFF7FEFF 		bl	strcpy
 505              	.LVL47:
 287:Core/Src/nyan_os.c ****         current_pos += strlen((char *)nos->command_arg_buffer[i]);
 506              		.loc 1 287 9 is_stmt 1 view .LVU136
 507              		.loc 1 287 62 is_stmt 0 view .LVU137
 508 00a0 7868     		ldr	r0, [r7, #4]
 509              		.loc 1 287 24 view .LVU138
 510 00a2 FFF7FEFF 		bl	strlen
 511              	.LVL48:
 512              		.loc 1 287 21 view .LVU139
 513 00a6 8044     		add	r8, r8, r0
 514              	.LVL49:
 288:Core/Src/nyan_os.c **** 
 289:Core/Src/nyan_os.c ****         // Add a space after each argument, except the last one
 290:Core/Src/nyan_os.c ****         if (i < nos->command_buffer_num_args - 1 && nos->command_arg_buffer[i + 1] != NULL) {
 515              		.loc 1 290 9 is_stmt 1 view .LVU140
 516              		.loc 1 290 20 is_stmt 0 view .LVU141
 517 00a8 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 518              		.loc 1 290 46 view .LVU142
 519 00ac 013B     		subs	r3, r3, #1
 520              		.loc 1 290 12 view .LVU143
 521 00ae B342     		cmp	r3, r6
 522 00b0 E2DD     		ble	.L34
 523              		.loc 1 290 76 discriminator 1 view .LVU144
 524 00b2 06F12903 		add	r3, r6, #41
 525 00b6 04EB8303 		add	r3, r4, r3, lsl #2
ARM GAS  /tmp/cc1tEVD1.s 			page 16


 526 00ba 5B68     		ldr	r3, [r3, #4]
 527              		.loc 1 290 50 discriminator 1 view .LVU145
 528 00bc 002B     		cmp	r3, #0
 529 00be DBD0     		beq	.L34
 291:Core/Src/nyan_os.c ****             *current_pos = ' ';
 530              		.loc 1 291 13 is_stmt 1 view .LVU146
 531              		.loc 1 291 26 is_stmt 0 view .LVU147
 532 00c0 2023     		movs	r3, #32
 533 00c2 08F8013B 		strb	r3, [r8], #1
 534              	.LVL50:
 292:Core/Src/nyan_os.c ****             current_pos++;
 535              		.loc 1 292 13 is_stmt 1 view .LVU148
 536              		.loc 1 292 13 is_stmt 0 view .LVU149
 537 00c6 D7E7     		b	.L34
 538              	.L35:
 539              		.loc 1 292 13 view .LVU150
 540              	.LBE7:
 293:Core/Src/nyan_os.c ****         }
 294:Core/Src/nyan_os.c ****     }
 295:Core/Src/nyan_os.c **** 
 296:Core/Src/nyan_os.c ****     // First lets clear out the TX buff
 297:Core/Src/nyan_os.c ****     if(EepromFlushTxBuff(nos->eeprom) != EEPROM_SUCCESS){
 541              		.loc 1 297 5 is_stmt 1 view .LVU151
 542              		.loc 1 297 29 is_stmt 0 view .LVU152
 543 00c8 6068     		ldr	r0, [r4, #4]
 544              		.loc 1 297 8 view .LVU153
 545 00ca FFF7FEFF 		bl	EepromFlushTxBuff
 546              	.LVL51:
 547 00ce 0646     		mov	r6, r0
 548              	.LVL52:
 549              		.loc 1 297 7 view .LVU154
 550 00d0 0128     		cmp	r0, #1
 551 00d2 1CD1     		bne	.L44
 552              	.LBB8:
 298:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 299:Core/Src/nyan_os.c ****     }
 300:Core/Src/nyan_os.c **** 
 301:Core/Src/nyan_os.c ****     // Second lets copy our new buffer over to the EEPROM driver
 302:Core/Src/nyan_os.c ****     for (int i = 0; i < SIZE_BOARD_OWNER; ++i){
 553              		.loc 1 302 14 view .LVU155
 554 00d4 0023     		movs	r3, #0
 555              	.L37:
 556              	.LVL53:
 557              		.loc 1 302 23 is_stmt 1 discriminator 1 view .LVU156
 558 00d6 3F2B     		cmp	r3, #63
 559 00d8 05DC     		bgt	.L47
 303:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 560              		.loc 1 303 9 discriminator 3 view .LVU157
 561              		.loc 1 303 12 is_stmt 0 discriminator 3 view .LVU158
 562 00da 6268     		ldr	r2, [r4, #4]
 563              		.loc 1 303 46 discriminator 3 view .LVU159
 564 00dc E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 565              		.loc 1 303 33 discriminator 3 view .LVU160
 566 00de 1A44     		add	r2, r2, r3
 567 00e0 1171     		strb	r1, [r2, #4]
 302:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 568              		.loc 1 302 43 is_stmt 1 discriminator 3 view .LVU161
ARM GAS  /tmp/cc1tEVD1.s 			page 17


 569 00e2 0133     		adds	r3, r3, #1
 570              	.LVL54:
 302:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 571              		.loc 1 302 43 is_stmt 0 discriminator 3 view .LVU162
 572 00e4 F7E7     		b	.L37
 573              	.L47:
 302:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i]  = owners_name[i];
 574              		.loc 1 302 43 discriminator 3 view .LVU163
 575              	.LBE8:
 304:Core/Src/nyan_os.c ****     }
 305:Core/Src/nyan_os.c **** 
 306:Core/Src/nyan_os.c ****     // Free up the allocated memory
 307:Core/Src/nyan_os.c ****     free(owners_name);
 576              		.loc 1 307 5 is_stmt 1 view .LVU164
 577 00e6 2846     		mov	r0, r5
 578 00e8 FFF7FEFF 		bl	free
 579              	.LVL55:
 308:Core/Src/nyan_os.c **** 
 309:Core/Src/nyan_os.c ****     // Write the name to the eeprom, the delay exists to ensure the write, later the callback can b
 310:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, false, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 580              		.loc 1 310 5 view .LVU165
 581              		.loc 1 310 20 is_stmt 0 view .LVU166
 582 00ec 6068     		ldr	r0, [r4, #4]
 583              		.loc 1 310 5 view .LVU167
 584 00ee 4023     		movs	r3, #64
 585 00f0 2022     		movs	r2, #32
 586 00f2 0021     		movs	r1, #0
 587 00f4 FFF7FEFF 		bl	EepromWrite
 588              	.LVL56:
 311:Core/Src/nyan_os.c **** 
 312:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 589              		.loc 1 312 5 is_stmt 1 view .LVU168
 590              		.loc 1 312 12 is_stmt 0 view .LVU169
 591 00f8 02E0     		b	.L27
 592              	.LVL57:
 593              	.L39:
 253:Core/Src/nyan_os.c ****     }
 594              		.loc 1 253 16 view .LVU170
 595 00fa 0026     		movs	r6, #0
 596 00fc 00E0     		b	.L27
 597              	.L40:
 257:Core/Src/nyan_os.c ****     }
 598              		.loc 1 257 16 view .LVU171
 599 00fe 0026     		movs	r6, #0
 600              	.LVL58:
 601              	.L27:
 313:Core/Src/nyan_os.c **** }
 602              		.loc 1 313 1 view .LVU172
 603 0100 3046     		mov	r0, r6
 604 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 605              	.LVL59:
 606              	.L41:
 269:Core/Src/nyan_os.c ****     }
 607              		.loc 1 269 16 view .LVU173
 608 0106 0026     		movs	r6, #0
 609              	.LVL60:
 269:Core/Src/nyan_os.c ****     }
ARM GAS  /tmp/cc1tEVD1.s 			page 18


 610              		.loc 1 269 16 view .LVU174
 611 0108 FAE7     		b	.L27
 612              	.LVL61:
 613              	.L43:
 275:Core/Src/nyan_os.c ****     }
 614              		.loc 1 275 16 view .LVU175
 615 010a 0026     		movs	r6, #0
 616              	.LVL62:
 275:Core/Src/nyan_os.c ****     }
 617              		.loc 1 275 16 view .LVU176
 618 010c F8E7     		b	.L27
 619              	.LVL63:
 620              	.L44:
 298:Core/Src/nyan_os.c ****     }
 621              		.loc 1 298 16 view .LVU177
 622 010e 0026     		movs	r6, #0
 623 0110 F6E7     		b	.L27
 624              		.cfi_endproc
 625              	.LFE153:
 627              		.section	.text.NyanExeWriteFpgaBitstream,"ax",%progbits
 628              		.align	1
 629              		.global	NyanExeWriteFpgaBitstream
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	NyanExeWriteFpgaBitstream:
 635              	.LVL64:
 636              	.LFB154:
 314:Core/Src/nyan_os.c **** 
 315:Core/Src/nyan_os.c **** NyanReturn NyanExeWriteFpgaBitstream(volatile NyanOS* nos) {
 637              		.loc 1 315 60 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 16
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		.loc 1 315 60 is_stmt 0 view .LVU179
 642 0000 70B5     		push	{r4, r5, r6, lr}
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 14, -4
 648 0002 84B0     		sub	sp, sp, #16
 649              		.cfi_def_cfa_offset 32
 650 0004 0446     		mov	r4, r0
 316:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 651              		.loc 1 316 5 is_stmt 1 view .LVU180
 652              		.loc 1 316 27 is_stmt 0 view .LVU181
 653 0006 0023     		movs	r3, #0
 654 0008 C0F89C30 		str	r3, [r0, #156]
 317:Core/Src/nyan_os.c ****     // Now we need to convert the arg 1 into an int - skip arg 0 because that is the command.
 318:Core/Src/nyan_os.c ****     nos->bytes_array_size = atoi((char *)nos->command_arg_buffer[1]);
 655              		.loc 1 318 5 is_stmt 1 view .LVU182
 656              		.loc 1 318 65 is_stmt 0 view .LVU183
 657 000c D0F8A800 		ldr	r0, [r0, #168]
 658              	.LVL65:
 659              		.loc 1 318 29 view .LVU184
 660 0010 FFF7FEFF 		bl	atoi
ARM GAS  /tmp/cc1tEVD1.s 			page 19


 661              	.LVL66:
 662              		.loc 1 318 27 view .LVU185
 663 0014 C4F89C00 		str	r0, [r4, #156]
 319:Core/Src/nyan_os.c ****     // Safety the size of the buffer to ensure that it doesn't exceed the size of a block 
 320:Core/Src/nyan_os.c ****     if(nos->bytes_array_size  > 0xFFFF) {
 664              		.loc 1 320 5 is_stmt 1 view .LVU186
 665              		.loc 1 320 11 is_stmt 0 view .LVU187
 666 0018 D4F89C30 		ldr	r3, [r4, #156]
 667              		.loc 1 320 7 view .LVU188
 668 001c B3F5803F 		cmp	r3, #65536
 669 0020 18D2     		bcs	.L62
 321:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 322:Core/Src/nyan_os.c ****         nos->bytes_array_size = 0;
 323:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 324:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 325:Core/Src/nyan_os.c ****     }
 326:Core/Src/nyan_os.c ****     // Write the length of the bitstream we are accepting to the EEPROM - 16 bytes
 327:Core/Src/nyan_os.c ****     unsigned int size_array[4] = { 0x00, 0x00, 0x00, nos->bytes_array_size };
 670              		.loc 1 327 5 is_stmt 1 view .LVU189
 671              		.loc 1 327 18 is_stmt 0 view .LVU190
 672 0022 0023     		movs	r3, #0
 673 0024 0093     		str	r3, [sp]
 674 0026 0193     		str	r3, [sp, #4]
 675 0028 0293     		str	r3, [sp, #8]
 676              		.loc 1 327 57 view .LVU191
 677 002a D4F89C30 		ldr	r3, [r4, #156]
 678              		.loc 1 327 18 view .LVU192
 679 002e 0393     		str	r3, [sp, #12]
 328:Core/Src/nyan_os.c ****     if(nos->eeprom->tx_inflight) {
 680              		.loc 1 328 5 is_stmt 1 view .LVU193
 681              		.loc 1 328 11 is_stmt 0 view .LVU194
 682 0030 6368     		ldr	r3, [r4, #4]
 683              		.loc 1 328 19 view .LVU195
 684 0032 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 685              		.loc 1 328 7 view .LVU196
 686 0034 C3B9     		cbnz	r3, .L63
 687              	.LBB9:
 329:Core/Src/nyan_os.c ****         //Print Error, Clear buffer, Set ready state. 
 330:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size_tx_busy[0], sizeof(nyan_keys_wr
 331:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 332:Core/Src/nyan_os.c ****     }
 333:Core/Src/nyan_os.c ****     // Copy the data to the EEPROM buffer for writing
 334:Core/Src/nyan_os.c ****     for(short i = 0; i < sizeof(size_array); ++i) {
 688              		.loc 1 334 15 view .LVU197
 689 0036 0022     		movs	r2, #0
 690              	.L51:
 691              	.LVL67:
 692              		.loc 1 334 24 is_stmt 1 discriminator 1 view .LVU198
 693 0038 93B2     		uxth	r3, r2
 694 003a 0F2B     		cmp	r3, #15
 695 003c 1BD8     		bhi	.L64
 335:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 696              		.loc 1 335 9 discriminator 3 view .LVU199
 697              		.loc 1 335 12 is_stmt 0 discriminator 3 view .LVU200
 698 003e 6168     		ldr	r1, [r4, #4]
 699              		.loc 1 335 56 discriminator 3 view .LVU201
 700 0040 02F11000 		add	r0, r2, #16
ARM GAS  /tmp/cc1tEVD1.s 			page 20


 701 0044 6844     		add	r0, sp, r0
 702 0046 10F8100C 		ldrb	r0, [r0, #-16]	@ zero_extendqisi2
 703              		.loc 1 335 32 discriminator 3 view .LVU202
 704 004a 0A44     		add	r2, r2, r1
 705              	.LVL68:
 706              		.loc 1 335 32 discriminator 3 view .LVU203
 707 004c 1071     		strb	r0, [r2, #4]
 334:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 708              		.loc 1 334 46 is_stmt 1 discriminator 3 view .LVU204
 709 004e 0133     		adds	r3, r3, #1
 710              	.LVL69:
 334:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 711              		.loc 1 334 46 is_stmt 0 discriminator 3 view .LVU205
 712 0050 1AB2     		sxth	r2, r3
 713              	.LVL70:
 334:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 714              		.loc 1 334 46 discriminator 3 view .LVU206
 715 0052 F1E7     		b	.L51
 716              	.LVL71:
 717              	.L62:
 334:Core/Src/nyan_os.c ****         nos->eeprom->tx_buf[i] = ((uint8_t*)size_array)[i];
 718              		.loc 1 334 46 discriminator 3 view .LVU207
 719              	.LBE9:
 322:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 720              		.loc 1 322 9 is_stmt 1 view .LVU208
 322:Core/Src/nyan_os.c ****         NyanPrint(nos, (char*)&nyan_keys_write_bitstream_error_size[0], sizeof(nyan_keys_write_bits
 721              		.loc 1 322 31 is_stmt 0 view .LVU209
 722 0054 0025     		movs	r5, #0
 723 0056 C4F89C50 		str	r5, [r4, #156]
 323:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 724              		.loc 1 323 9 is_stmt 1 view .LVU210
 725 005a 4822     		movs	r2, #72
 726 005c 2C49     		ldr	r1, .L65
 727 005e 2046     		mov	r0, r4
 728 0060 FFF7FEFF 		bl	NyanPrint
 729              	.LVL72:
 324:Core/Src/nyan_os.c ****     }
 730              		.loc 1 324 9 view .LVU211
 324:Core/Src/nyan_os.c ****     }
 731              		.loc 1 324 16 is_stmt 0 view .LVU212
 732 0064 2846     		mov	r0, r5
 733 0066 4DE0     		b	.L50
 734              	.L63:
 330:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 735              		.loc 1 330 9 is_stmt 1 view .LVU213
 736 0068 3722     		movs	r2, #55
 737 006a 2A49     		ldr	r1, .L65+4
 738 006c 2046     		mov	r0, r4
 739 006e FFF7FEFF 		bl	NyanPrint
 740              	.LVL73:
 331:Core/Src/nyan_os.c ****     }
 741              		.loc 1 331 9 view .LVU214
 331:Core/Src/nyan_os.c ****     }
 742              		.loc 1 331 16 is_stmt 0 view .LVU215
 743 0072 0020     		movs	r0, #0
 744 0074 46E0     		b	.L50
 745              	.LVL74:
ARM GAS  /tmp/cc1tEVD1.s 			page 21


 746              	.L64:
 336:Core/Src/nyan_os.c ****     }
 337:Core/Src/nyan_os.c ****     // Write the data to the eeprom - wait for the write to complete since this is DMA and order ma
 338:Core/Src/nyan_os.c ****     EepromWrite(nos->eeprom, true, ADDR_BOARD_OWNER, SIZE_BOARD_OWNER);
 747              		.loc 1 338 5 is_stmt 1 view .LVU216
 748              		.loc 1 338 20 is_stmt 0 view .LVU217
 749 0076 6068     		ldr	r0, [r4, #4]
 750              		.loc 1 338 5 view .LVU218
 751 0078 4023     		movs	r3, #64
 752 007a 2022     		movs	r2, #32
 753              	.LVL75:
 754              		.loc 1 338 5 view .LVU219
 755 007c 0121     		movs	r1, #1
 756 007e FFF7FEFF 		bl	EepromWrite
 757              	.LVL76:
 339:Core/Src/nyan_os.c ****     // Print the ready to accept bytes confirmation message
 340:Core/Src/nyan_os.c ****     NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_start[0], sizeof(nyan_keys_write_bitstrea
 758              		.loc 1 340 5 is_stmt 1 view .LVU220
 759 0082 0822     		movs	r2, #8
 760 0084 2449     		ldr	r1, .L65+8
 761 0086 2046     		mov	r0, r4
 762 0088 FFF7FEFF 		bl	NyanPrint
 763              	.LVL77:
 341:Core/Src/nyan_os.c ****     // Lets allocate some memory to save this bitstream we are importing
 342:Core/Src/nyan_os.c ****     nos->bytes_array = (uint8_t*)malloc(nos->bytes_array_size * sizeof(uint8_t));
 764              		.loc 1 342 5 view .LVU221
 765              		.loc 1 342 44 is_stmt 0 view .LVU222
 766 008c D4F89C00 		ldr	r0, [r4, #156]
 767              		.loc 1 342 34 view .LVU223
 768 0090 FFF7FEFF 		bl	malloc
 769              	.LVL78:
 770              		.loc 1 342 22 view .LVU224
 771 0094 C4F8A000 		str	r0, [r4, #160]
 343:Core/Src/nyan_os.c ****     if(nos->bytes_array_size == 0)
 772              		.loc 1 343 5 is_stmt 1 view .LVU225
 773              		.loc 1 343 11 is_stmt 0 view .LVU226
 774 0098 D4F89C30 		ldr	r3, [r4, #156]
 775              		.loc 1 343 7 view .LVU227
 776 009c A3B3     		cbz	r3, .L59
 344:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 345:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 346:Core/Src/nyan_os.c ****     nos->state = DIRECT_BUFFER_ACCESS;
 777              		.loc 1 346 5 is_stmt 1 view .LVU228
 778              		.loc 1 346 16 is_stmt 0 view .LVU229
 779 009e 0223     		movs	r3, #2
 780 00a0 2372     		strb	r3, [r4, #8]
 347:Core/Src/nyan_os.c **** 
 348:Core/Src/nyan_os.c ****     while(nos->bytes_received != nos->bytes_array_size){
 781              		.loc 1 348 5 is_stmt 1 view .LVU230
 782              	.L53:
 349:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 350:Core/Src/nyan_os.c ****         // The user can exit this loop by just filling the buffer up for now.
 351:Core/Src/nyan_os.c ****         // Enabling am abort sequence would be a next step
 352:Core/Src/nyan_os.c ****     }
 783              		.loc 1 352 5 discriminator 1 view .LVU231
 348:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 784              		.loc 1 348 31 discriminator 1 view .LVU232
ARM GAS  /tmp/cc1tEVD1.s 			page 22


 348:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 785              		.loc 1 348 14 is_stmt 0 discriminator 1 view .LVU233
 786 00a2 D4F89820 		ldr	r2, [r4, #152]
 348:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 787              		.loc 1 348 37 discriminator 1 view .LVU234
 788 00a6 D4F89C30 		ldr	r3, [r4, #156]
 348:Core/Src/nyan_os.c ****         // During this period we just loop until the byte array is full
 789              		.loc 1 348 31 discriminator 1 view .LVU235
 790 00aa 9A42     		cmp	r2, r3
 791 00ac F9D1     		bne	.L53
 353:Core/Src/nyan_os.c **** 
 354:Core/Src/nyan_os.c ****     // Calculate the number iterations 
 355:Core/Src/nyan_os.c ****     unsigned int r = nos->bytes_array_size%EEPROM_DRIVER_TX_BUF_SZ;
 792              		.loc 1 355 5 is_stmt 1 view .LVU236
 793              		.loc 1 355 25 is_stmt 0 view .LVU237
 794 00ae D4F89C30 		ldr	r3, [r4, #156]
 795              	.LVL79:
 356:Core/Src/nyan_os.c ****     unsigned int q = nos->bytes_array_size/EEPROM_DRIVER_TX_BUF_SZ;
 796              		.loc 1 356 5 is_stmt 1 view .LVU238
 797              		.loc 1 356 25 is_stmt 0 view .LVU239
 798 00b2 D4F89C60 		ldr	r6, [r4, #156]
 799              		.loc 1 356 18 view .LVU240
 800 00b6 F609     		lsrs	r6, r6, #7
 801              	.LVL80:
 357:Core/Src/nyan_os.c ****     if(r > 0)
 802              		.loc 1 357 5 is_stmt 1 view .LVU241
 803              		.loc 1 357 7 is_stmt 0 view .LVU242
 804 00b8 13F07F0F 		tst	r3, #127
 805 00bc 00D0     		beq	.L54
 358:Core/Src/nyan_os.c ****         ++q;
 806              		.loc 1 358 9 is_stmt 1 view .LVU243
 807 00be 0136     		adds	r6, r6, #1
 808              	.LVL81:
 809              	.L54:
 359:Core/Src/nyan_os.c ****     if (q == 0)
 810              		.loc 1 359 5 view .LVU244
 811              		.loc 1 359 8 is_stmt 0 view .LVU245
 812 00c0 26B3     		cbz	r6, .L60
 813              	.LBB10:
 360:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 361:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the eeprom, write, wait ...
 362:Core/Src/nyan_os.c ****     for(unsigned short page = 0; page < q; ++page) {
 814              		.loc 1 362 24 view .LVU246
 815 00c2 0025     		movs	r5, #0
 816 00c4 0FE0     		b	.L55
 817              	.LVL82:
 818              	.L57:
 363:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 364:Core/Src/nyan_os.c ****         EepromFlushTxBuff(nos->eeprom);
 819              		.loc 1 364 9 is_stmt 1 view .LVU247
 820              		.loc 1 364 30 is_stmt 0 view .LVU248
 821 00c6 6068     		ldr	r0, [r4, #4]
 822              		.loc 1 364 9 view .LVU249
 823 00c8 FFF7FEFF 		bl	EepromFlushTxBuff
 824              	.LVL83:
 365:Core/Src/nyan_os.c ****         for(int byte = 0; byte > EEPROM_DRIVER_TX_BUF_SZ; byte++){
 825              		.loc 1 365 9 is_stmt 1 view .LVU250
ARM GAS  /tmp/cc1tEVD1.s 			page 23


 826              	.LBE10:
 827              		.loc 1 365 13 view .LVU251
 828              		.loc 1 365 32 view .LVU252
 829              	.LBB11:
 366:Core/Src/nyan_os.c ****             nos->eeprom->tx_buf[byte] = nos->bytes_array[EEPROM_DRIVER_TX_BUF_SZ * page + byte];
 367:Core/Src/nyan_os.c ****         }
 368:Core/Src/nyan_os.c ****         EepromWrite(nos->eeprom, false, ADDR_FPGA_BITSTREAM + EEPROM_DRIVER_TX_BUF_SZ * page, 128);
 830              		.loc 1 368 9 view .LVU253
 831              		.loc 1 368 24 is_stmt 0 view .LVU254
 832 00cc 6068     		ldr	r0, [r4, #4]
 833              		.loc 1 368 9 view .LVU255
 834 00ce EA01     		lsls	r2, r5, #7
 835 00d0 8023     		movs	r3, #128
 836 00d2 12B2     		sxth	r2, r2
 837 00d4 0021     		movs	r1, #0
 838 00d6 FFF7FEFF 		bl	EepromWrite
 839              	.LVL84:
 369:Core/Src/nyan_os.c ****         while(nos->eeprom->tx_inflight){
 840              		.loc 1 369 9 is_stmt 1 view .LVU256
 841              	.L56:
 370:Core/Src/nyan_os.c ****             // Wait while the TX is in flight as to avoid bogus writes;
 371:Core/Src/nyan_os.c ****         }
 842              		.loc 1 371 9 discriminator 1 view .LVU257
 369:Core/Src/nyan_os.c ****         while(nos->eeprom->tx_inflight){
 843              		.loc 1 369 15 discriminator 1 view .LVU258
 369:Core/Src/nyan_os.c ****         while(nos->eeprom->tx_inflight){
 844              		.loc 1 369 18 is_stmt 0 discriminator 1 view .LVU259
 845 00da 6368     		ldr	r3, [r4, #4]
 369:Core/Src/nyan_os.c ****         while(nos->eeprom->tx_inflight){
 846              		.loc 1 369 26 discriminator 1 view .LVU260
 847 00dc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 369:Core/Src/nyan_os.c ****         while(nos->eeprom->tx_inflight){
 848              		.loc 1 369 15 discriminator 1 view .LVU261
 849 00de 002B     		cmp	r3, #0
 850 00e0 FBD1     		bne	.L56
 362:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 851              		.loc 1 362 44 is_stmt 1 discriminator 2 view .LVU262
 852 00e2 0135     		adds	r5, r5, #1
 853              	.LVL85:
 362:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 854              		.loc 1 362 44 is_stmt 0 discriminator 2 view .LVU263
 855 00e4 ADB2     		uxth	r5, r5
 856              	.LVL86:
 857              	.L55:
 362:Core/Src/nyan_os.c ****         // Flush the transmit buffer
 858              		.loc 1 362 39 is_stmt 1 discriminator 1 view .LVU264
 859 00e6 B542     		cmp	r5, r6
 860 00e8 EDD3     		bcc	.L57
 861              	.LBE11:
 372:Core/Src/nyan_os.c ****     }
 373:Core/Src/nyan_os.c ****     // Perform function cleanup maintenance
 374:Core/Src/nyan_os.c ****     nos->bytes_array_size = 0;
 862              		.loc 1 374 5 view .LVU265
 863              		.loc 1 374 27 is_stmt 0 view .LVU266
 864 00ea 0025     		movs	r5, #0
 865              	.LVL87:
 866              		.loc 1 374 27 view .LVU267
ARM GAS  /tmp/cc1tEVD1.s 			page 24


 867 00ec C4F89C50 		str	r5, [r4, #156]
 375:Core/Src/nyan_os.c ****     nos->bytes_received = 0;
 868              		.loc 1 375 5 is_stmt 1 view .LVU268
 869              		.loc 1 375 25 is_stmt 0 view .LVU269
 870 00f0 C4F89850 		str	r5, [r4, #152]
 376:Core/Src/nyan_os.c ****     free(nos->bytes_array);
 871              		.loc 1 376 5 is_stmt 1 view .LVU270
 872              		.loc 1 376 13 is_stmt 0 view .LVU271
 873 00f4 D4F8A000 		ldr	r0, [r4, #160]
 874              		.loc 1 376 5 view .LVU272
 875 00f8 FFF7FEFF 		bl	free
 876              	.LVL88:
 377:Core/Src/nyan_os.c ****     nos->bytes_array = NULL;
 877              		.loc 1 377 5 is_stmt 1 view .LVU273
 878              		.loc 1 377 22 is_stmt 0 view .LVU274
 879 00fc C4F8A050 		str	r5, [r4, #160]
 378:Core/Src/nyan_os.c ****     nos->state = READY;
 880              		.loc 1 378 5 is_stmt 1 view .LVU275
 881              		.loc 1 378 16 is_stmt 0 view .LVU276
 882 0100 0120     		movs	r0, #1
 883 0102 2072     		strb	r0, [r4, #8]
 379:Core/Src/nyan_os.c ****     //NyanPrint(nos, (char*)&nyan_keys_write_bitstream_info_success[0], sizeof(nyan_keys_write_bits
 380:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 884              		.loc 1 380 5 is_stmt 1 view .LVU277
 885              	.LVL89:
 886              	.L50:
 381:Core/Src/nyan_os.c **** }
 887              		.loc 1 381 1 is_stmt 0 view .LVU278
 888 0104 04B0     		add	sp, sp, #16
 889              		.cfi_remember_state
 890              		.cfi_def_cfa_offset 16
 891              		@ sp needed
 892 0106 70BD     		pop	{r4, r5, r6, pc}
 893              	.LVL90:
 894              	.L59:
 895              		.cfi_restore_state
 344:Core/Src/nyan_os.c ****     // Flush the input buffer to prepare for the FPGA bitstream - This is safe because we have crea
 896              		.loc 1 344 16 view .LVU279
 897 0108 0020     		movs	r0, #0
 898 010a FBE7     		b	.L50
 899              	.LVL91:
 900              	.L60:
 360:Core/Src/nyan_os.c ****     // Fill and iterate over pages in the eeprom, write, wait ...
 901              		.loc 1 360 16 view .LVU280
 902 010c 0020     		movs	r0, #0
 903 010e F9E7     		b	.L50
 904              	.L66:
 905              		.align	2
 906              	.L65:
 907 0110 00000000 		.word	nyan_keys_write_bitstream_error_size
 908 0114 00000000 		.word	nyan_keys_write_bitstream_error_size_tx_busy
 909 0118 00000000 		.word	nyan_keys_write_bitstream_info_start
 910              		.cfi_endproc
 911              	.LFE154:
 913              		.section	.text.NyanExecute,"ax",%progbits
 914              		.align	1
 915              		.global	NyanExecute
ARM GAS  /tmp/cc1tEVD1.s 			page 25


 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	NyanExecute:
 921              	.LVL92:
 922              	.LFB150:
 155:Core/Src/nyan_os.c ****     switch(nos->exe) {
 923              		.loc 1 155 46 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 155:Core/Src/nyan_os.c ****     switch(nos->exe) {
 927              		.loc 1 155 46 is_stmt 0 view .LVU282
 928 0000 38B5     		push	{r3, r4, r5, lr}
 929              		.cfi_def_cfa_offset 16
 930              		.cfi_offset 3, -16
 931              		.cfi_offset 4, -12
 932              		.cfi_offset 5, -8
 933              		.cfi_offset 14, -4
 934 0002 0546     		mov	r5, r0
 156:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 935              		.loc 1 156 5 is_stmt 1 view .LVU283
 156:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 936              		.loc 1 156 15 is_stmt 0 view .LVU284
 937 0004 447A     		ldrb	r4, [r0, #9]	@ zero_extendqisi2
 938 0006 E4B2     		uxtb	r4, r4
 156:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 939              		.loc 1 156 5 view .LVU285
 940 0008 042C     		cmp	r4, #4
 941 000a 40D8     		bhi	.L68
 942 000c DFE804F0 		tbb	[pc, r4]
 943              	.L70:
 944 0010 03       		.byte	(.L74-.L70)/2
 945 0011 23       		.byte	(.L73-.L70)/2
 946 0012 13       		.byte	(.L72-.L70)/2
 947 0013 2D       		.byte	(.L71-.L70)/2
 948 0014 43       		.byte	(.L75-.L70)/2
 949 0015 00       		.p2align 1
 950              	.L74:
 158:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 951              		.loc 1 158 13 is_stmt 1 view .LVU286
 952 0016 FFF7FEFF 		bl	NyanExeGetinfo
 953              	.LVL93:
 159:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 954              		.loc 1 159 13 view .LVU287
 955 001a 0322     		movs	r2, #3
 956 001c 1F49     		ldr	r1, .L77
 957 001e 2846     		mov	r0, r5
 958 0020 FFF7FEFF 		bl	NyanPrint
 959              	.LVL94:
 160:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 960              		.loc 1 160 13 view .LVU288
 961 0024 0F22     		movs	r2, #15
 962 0026 1E49     		ldr	r1, .L77+4
 963 0028 2846     		mov	r0, r5
 964 002a FFF7FEFF 		bl	NyanPrint
 965              	.LVL95:
ARM GAS  /tmp/cc1tEVD1.s 			page 26


 161:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 966              		.loc 1 161 13 view .LVU289
 161:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 967              		.loc 1 161 22 is_stmt 0 view .LVU290
 968 002e 0423     		movs	r3, #4
 969 0030 6B72     		strb	r3, [r5, #9]
 162:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 970              		.loc 1 162 13 is_stmt 1 view .LVU291
 162:Core/Src/nyan_os.c ****         case NYAN_EXE_SET_OWNER:
 971              		.loc 1 162 20 is_stmt 0 view .LVU292
 972 0032 0124     		movs	r4, #1
 973 0034 30E0     		b	.L69
 974              	.LVL96:
 975              	.L72:
 164:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_set_owner_success[0], sizeof(nyan_keys_set_owner_succe
 976              		.loc 1 164 13 is_stmt 1 view .LVU293
 977 0036 FFF7FEFF 		bl	NyanExeSetOwner
 978              	.LVL97:
 165:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 979              		.loc 1 165 13 view .LVU294
 980 003a 2C22     		movs	r2, #44
 981 003c 1949     		ldr	r1, .L77+8
 982 003e 2846     		mov	r0, r5
 983 0040 FFF7FEFF 		bl	NyanPrint
 984              	.LVL98:
 166:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 985              		.loc 1 166 13 view .LVU295
 986 0044 0F22     		movs	r2, #15
 987 0046 1649     		ldr	r1, .L77+4
 988 0048 2846     		mov	r0, r5
 989 004a FFF7FEFF 		bl	NyanPrint
 990              	.LVL99:
 167:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 991              		.loc 1 167 13 view .LVU296
 167:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 992              		.loc 1 167 22 is_stmt 0 view .LVU297
 993 004e 0423     		movs	r3, #4
 994 0050 6B72     		strb	r3, [r5, #9]
 168:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 995              		.loc 1 168 13 is_stmt 1 view .LVU298
 168:Core/Src/nyan_os.c ****         case NYAN_EXE_WRITE_BITSTREAM :
 996              		.loc 1 168 20 is_stmt 0 view .LVU299
 997 0052 0124     		movs	r4, #1
 998 0054 20E0     		b	.L69
 999              	.LVL100:
 1000              	.L73:
 170:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1001              		.loc 1 170 13 is_stmt 1 view .LVU300
 1002 0056 FFF7FEFF 		bl	NyanExeWriteFpgaBitstream
 1003              	.LVL101:
 171:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1004              		.loc 1 171 13 view .LVU301
 1005 005a 0F22     		movs	r2, #15
 1006 005c 1049     		ldr	r1, .L77+4
 1007 005e 2846     		mov	r0, r5
 1008 0060 FFF7FEFF 		bl	NyanPrint
 1009              	.LVL102:
ARM GAS  /tmp/cc1tEVD1.s 			page 27


 172:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1010              		.loc 1 172 13 view .LVU302
 172:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1011              		.loc 1 172 22 is_stmt 0 view .LVU303
 1012 0064 0423     		movs	r3, #4
 1013 0066 6B72     		strb	r3, [r5, #9]
 173:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1014              		.loc 1 173 13 is_stmt 1 view .LVU304
 173:Core/Src/nyan_os.c ****         case NYAN_EXE_IDLE :
 1015              		.loc 1 173 20 is_stmt 0 view .LVU305
 1016 0068 16E0     		b	.L69
 1017              	.LVL103:
 1018              	.L71:
 177:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1019              		.loc 1 177 13 is_stmt 1 view .LVU306
 1020 006a 2022     		movs	r2, #32
 1021 006c 0E49     		ldr	r1, .L77+12
 1022 006e FFF7FEFF 		bl	NyanPrint
 1023              	.LVL104:
 178:Core/Src/nyan_os.c ****             NyanPrint(nos, (char*)&nyan_keys_path_text[0], sizeof(nyan_keys_path_text));
 1024              		.loc 1 178 13 view .LVU307
 1025 0072 0322     		movs	r2, #3
 1026 0074 0949     		ldr	r1, .L77
 1027 0076 2846     		mov	r0, r5
 1028 0078 FFF7FEFF 		bl	NyanPrint
 1029              	.LVL105:
 179:Core/Src/nyan_os.c ****             nos->exe = NYAN_EXE_IDLE;
 1030              		.loc 1 179 13 view .LVU308
 1031 007c 0F22     		movs	r2, #15
 1032 007e 0849     		ldr	r1, .L77+4
 1033 0080 2846     		mov	r0, r5
 1034 0082 FFF7FEFF 		bl	NyanPrint
 1035              	.LVL106:
 180:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1036              		.loc 1 180 13 view .LVU309
 180:Core/Src/nyan_os.c ****             return NOS_SUCCESS;
 1037              		.loc 1 180 22 is_stmt 0 view .LVU310
 1038 0086 0423     		movs	r3, #4
 1039 0088 6B72     		strb	r3, [r5, #9]
 181:Core/Src/nyan_os.c ****         default:
 1040              		.loc 1 181 13 is_stmt 1 view .LVU311
 181:Core/Src/nyan_os.c ****         default:
 1041              		.loc 1 181 20 is_stmt 0 view .LVU312
 1042 008a 0124     		movs	r4, #1
 1043 008c 04E0     		b	.L69
 1044              	.LVL107:
 1045              	.L68:
 184:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1046              		.loc 1 184 13 is_stmt 1 view .LVU313
 184:Core/Src/nyan_os.c ****             return NOS_FAILURE;
 1047              		.loc 1 184 22 is_stmt 0 view .LVU314
 1048 008e 0423     		movs	r3, #4
 1049 0090 4372     		strb	r3, [r0, #9]
 185:Core/Src/nyan_os.c ****     }
 1050              		.loc 1 185 13 is_stmt 1 view .LVU315
 185:Core/Src/nyan_os.c ****     }
 1051              		.loc 1 185 20 is_stmt 0 view .LVU316
ARM GAS  /tmp/cc1tEVD1.s 			page 28


 1052 0092 0024     		movs	r4, #0
 1053 0094 00E0     		b	.L69
 1054              	.L75:
 156:Core/Src/nyan_os.c ****         case NYAN_EXE_GET_INFO :
 1055              		.loc 1 156 5 view .LVU317
 1056 0096 0124     		movs	r4, #1
 1057              	.LVL108:
 1058              	.L69:
 187:Core/Src/nyan_os.c **** 
 1059              		.loc 1 187 1 view .LVU318
 1060 0098 2046     		mov	r0, r4
 1061 009a 38BD     		pop	{r3, r4, r5, pc}
 1062              	.LVL109:
 1063              	.L78:
 187:Core/Src/nyan_os.c **** 
 1064              		.loc 1 187 1 view .LVU319
 1065              		.align	2
 1066              	.L77:
 1067 009c 00000000 		.word	nyan_keys_newline
 1068 00a0 00000000 		.word	nyan_keys_path_text
 1069 00a4 00000000 		.word	nyan_keys_set_owner_success
 1070 00a8 00000000 		.word	nyan_keys_unknown_command
 1071              		.cfi_endproc
 1072              	.LFE150:
 1074              		.section	.text.FreeNyanCommandArgs,"ax",%progbits
 1075              		.align	1
 1076              		.global	FreeNyanCommandArgs
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1081              	FreeNyanCommandArgs:
 1082              	.LVL110:
 1083              	.LFB155:
 382:Core/Src/nyan_os.c **** 
 383:Core/Src/nyan_os.c **** void FreeNyanCommandArgs(volatile NyanOS* nos)
 384:Core/Src/nyan_os.c **** {
 1084              		.loc 1 384 1 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 385:Core/Src/nyan_os.c ****     if (!nos) {
 1088              		.loc 1 385 5 view .LVU321
 1089              		.loc 1 385 8 is_stmt 0 view .LVU322
 1090 0000 C0B1     		cbz	r0, .L85
 384:Core/Src/nyan_os.c ****     if (!nos) {
 1091              		.loc 1 384 1 view .LVU323
 1092 0002 70B5     		push	{r4, r5, r6, lr}
 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 4, -16
 1095              		.cfi_offset 5, -12
 1096              		.cfi_offset 6, -8
 1097              		.cfi_offset 14, -4
 1098 0004 0646     		mov	r6, r0
 1099              	.LBB12:
 386:Core/Src/nyan_os.c ****         return;
 387:Core/Src/nyan_os.c ****     }
 388:Core/Src/nyan_os.c **** 
ARM GAS  /tmp/cc1tEVD1.s 			page 29


 389:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; i++) {
 1100              		.loc 1 389 14 view .LVU324
 1101 0006 0024     		movs	r4, #0
 1102 0008 00E0     		b	.L81
 1103              	.LVL111:
 1104              	.L82:
 1105              		.loc 1 389 46 is_stmt 1 discriminator 2 view .LVU325
 1106 000a 0134     		adds	r4, r4, #1
 1107              	.LVL112:
 1108              	.L81:
 1109              		.loc 1 389 23 discriminator 1 view .LVU326
 1110 000c 092C     		cmp	r4, #9
 1111 000e 10DC     		bgt	.L88
 390:Core/Src/nyan_os.c ****         if (nos->command_arg_buffer[i] != NULL) {
 1112              		.loc 1 390 9 view .LVU327
 1113              		.loc 1 390 36 is_stmt 0 view .LVU328
 1114 0010 04F12803 		add	r3, r4, #40
 1115 0014 06EB8303 		add	r3, r6, r3, lsl #2
 1116 0018 5B68     		ldr	r3, [r3, #4]
 1117              		.loc 1 390 12 view .LVU329
 1118 001a 002B     		cmp	r3, #0
 1119 001c F5D0     		beq	.L82
 391:Core/Src/nyan_os.c ****             free(nos->command_arg_buffer[i]); 
 1120              		.loc 1 391 13 is_stmt 1 view .LVU330
 1121              		.loc 1 391 41 is_stmt 0 view .LVU331
 1122 001e 04F12805 		add	r5, r4, #40
 1123 0022 06EB8505 		add	r5, r6, r5, lsl #2
 1124 0026 6868     		ldr	r0, [r5, #4]
 1125              		.loc 1 391 13 view .LVU332
 1126 0028 FFF7FEFF 		bl	free
 1127              	.LVL113:
 392:Core/Src/nyan_os.c ****             nos->command_arg_buffer[i] = NULL;
 1128              		.loc 1 392 13 is_stmt 1 view .LVU333
 1129              		.loc 1 392 40 is_stmt 0 view .LVU334
 1130 002c 0023     		movs	r3, #0
 1131 002e 6B60     		str	r3, [r5, #4]
 1132 0030 EBE7     		b	.L82
 1133              	.L88:
 1134              		.loc 1 392 40 view .LVU335
 1135              	.LBE12:
 393:Core/Src/nyan_os.c ****         }
 394:Core/Src/nyan_os.c ****     }
 395:Core/Src/nyan_os.c **** }
 1136              		.loc 1 395 1 view .LVU336
 1137 0032 70BD     		pop	{r4, r5, r6, pc}
 1138              	.LVL114:
 1139              	.L85:
 1140              		.cfi_def_cfa_offset 0
 1141              		.cfi_restore 4
 1142              		.cfi_restore 5
 1143              		.cfi_restore 6
 1144              		.cfi_restore 14
 1145              		.loc 1 395 1 view .LVU337
 1146 0034 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE155:
 1150              		.section	.rodata.NyanDecodeArgs.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/cc1tEVD1.s 			page 30


 1151              		.align	2
 1152              	.LC0:
 1153 0000 2000     		.ascii	" \000"
 1154              		.section	.text.NyanDecodeArgs,"ax",%progbits
 1155              		.align	1
 1156              		.global	NyanDecodeArgs
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1161              	NyanDecodeArgs:
 1162              	.LVL115:
 1163              	.LFB151:
 190:Core/Src/nyan_os.c ****     if (!nos) {
 1164              		.loc 1 190 1 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 191:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1168              		.loc 1 191 5 view .LVU339
 191:Core/Src/nyan_os.c ****         return NOS_FAILURE;
 1169              		.loc 1 191 8 is_stmt 0 view .LVU340
 1170 0000 0028     		cmp	r0, #0
 1171 0002 46D0     		beq	.L97
 190:Core/Src/nyan_os.c ****     if (!nos) {
 1172              		.loc 1 190 1 view .LVU341
 1173 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1174              		.cfi_def_cfa_offset 24
 1175              		.cfi_offset 3, -24
 1176              		.cfi_offset 4, -20
 1177              		.cfi_offset 5, -16
 1178              		.cfi_offset 6, -12
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0006 0646     		mov	r6, r0
 196:Core/Src/nyan_os.c **** 
 1182              		.loc 1 196 5 is_stmt 1 view .LVU342
 1183 0008 FFF7FEFF 		bl	FreeNyanCommandArgs
 1184              	.LVL116:
 198:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1185              		.loc 1 198 5 view .LVU343
 198:Core/Src/nyan_os.c ****     const char *delimiter = " ";
 1186              		.loc 1 198 44 is_stmt 0 view .LVU344
 1187 000c 0025     		movs	r5, #0
 1188 000e 86F88A50 		strb	r5, [r6, #138]
 199:Core/Src/nyan_os.c ****     char *token = strtok((char *)nos->command_buffer, delimiter);
 1189              		.loc 1 199 5 is_stmt 1 view .LVU345
 1190              	.LVL117:
 200:Core/Src/nyan_os.c **** 
 1191              		.loc 1 200 5 view .LVU346
 200:Core/Src/nyan_os.c **** 
 1192              		.loc 1 200 34 is_stmt 0 view .LVU347
 1193 0012 06F10A07 		add	r7, r6, #10
 200:Core/Src/nyan_os.c **** 
 1194              		.loc 1 200 19 view .LVU348
 1195 0016 2049     		ldr	r1, .L106
 1196 0018 3846     		mov	r0, r7
 1197 001a FFF7FEFF 		bl	strtok
ARM GAS  /tmp/cc1tEVD1.s 			page 31


 1198              	.LVL118:
 1199 001e 0446     		mov	r4, r0
 1200              	.LVL119:
 202:Core/Src/nyan_os.c ****     while (token != NULL) {
 1201              		.loc 1 202 5 is_stmt 1 view .LVU349
 203:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1202              		.loc 1 203 5 view .LVU350
 203:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1203              		.loc 1 203 11 is_stmt 0 view .LVU351
 1204 0020 12E0     		b	.L91
 1205              	.LVL120:
 1206              	.L95:
 1207              	.LBB13:
 1208              	.LBB14:
 210:Core/Src/nyan_os.c ****                 }
 1209              		.loc 1 210 21 is_stmt 1 discriminator 3 view .LVU352
 210:Core/Src/nyan_os.c ****                 }
 1210              		.loc 1 210 49 is_stmt 0 discriminator 3 view .LVU353
 1211 0022 04F12803 		add	r3, r4, #40
 1212 0026 06EB8303 		add	r3, r6, r3, lsl #2
 1213 002a 5868     		ldr	r0, [r3, #4]
 210:Core/Src/nyan_os.c ****                 }
 1214              		.loc 1 210 21 discriminator 3 view .LVU354
 1215 002c FFF7FEFF 		bl	free
 1216              	.LVL121:
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1217              		.loc 1 209 48 is_stmt 1 discriminator 3 view .LVU355
 1218 0030 0134     		adds	r4, r4, #1
 1219              	.LVL122:
 1220              	.L93:
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1221              		.loc 1 209 35 discriminator 1 view .LVU356
 1222 0032 A542     		cmp	r5, r4
 1223 0034 F5DC     		bgt	.L95
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1224              		.loc 1 209 35 is_stmt 0 discriminator 1 view .LVU357
 1225              	.LBE14:
 212:Core/Src/nyan_os.c ****             }
 1226              		.loc 1 212 24 view .LVU358
 1227 0036 0020     		movs	r0, #0
 1228 0038 2AE0     		b	.L90
 1229              	.LVL123:
 1230              	.L105:
 1231              	.LBB15:
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1232              		.loc 1 209 26 view .LVU359
 1233 003a 0024     		movs	r4, #0
 1234              	.LVL124:
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1235              		.loc 1 209 26 view .LVU360
 1236 003c F9E7     		b	.L93
 1237              	.LVL125:
 1238              	.L92:
 209:Core/Src/nyan_os.c ****                     free(nos->command_arg_buffer[i]);
 1239              		.loc 1 209 26 view .LVU361
 1240              	.LBE15:
 1241              	.LBE13:
ARM GAS  /tmp/cc1tEVD1.s 			page 32


 217:Core/Src/nyan_os.c ****     }
 1242              		.loc 1 217 9 is_stmt 1 view .LVU362
 217:Core/Src/nyan_os.c ****     }
 1243              		.loc 1 217 17 is_stmt 0 view .LVU363
 1244 003e 1649     		ldr	r1, .L106
 1245 0040 0020     		movs	r0, #0
 1246 0042 FFF7FEFF 		bl	strtok
 1247              	.LVL126:
 1248 0046 0446     		mov	r4, r0
 1249              	.LVL127:
 1250              	.L91:
 203:Core/Src/nyan_os.c ****         if (arg_count < _NYAN_CMD_MAX_ARGS) {
 1251              		.loc 1 203 18 is_stmt 1 view .LVU364
 1252 0048 CCB1     		cbz	r4, .L104
 204:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1253              		.loc 1 204 9 view .LVU365
 204:Core/Src/nyan_os.c ****             size_t tokenLength = strlen(token);
 1254              		.loc 1 204 12 is_stmt 0 view .LVU366
 1255 004a 092D     		cmp	r5, #9
 1256 004c F7DC     		bgt	.L92
 1257              	.LBB16:
 205:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1258              		.loc 1 205 13 is_stmt 1 view .LVU367
 205:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1259              		.loc 1 205 34 is_stmt 0 view .LVU368
 1260 004e 2046     		mov	r0, r4
 205:Core/Src/nyan_os.c ****             nos->command_arg_buffer[arg_count] = malloc(tokenLength + 1); // Allocate memory for th
 1261              		.loc 1 205 34 view .LVU369
 1262 0050 FFF7FEFF 		bl	strlen
 1263              	.LVL128:
 206:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1264              		.loc 1 206 13 is_stmt 1 view .LVU370
 206:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1265              		.loc 1 206 50 is_stmt 0 view .LVU371
 1266 0054 0130     		adds	r0, r0, #1
 1267              	.LVL129:
 206:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1268              		.loc 1 206 50 view .LVU372
 1269 0056 FFF7FEFF 		bl	malloc
 1270              	.LVL130:
 206:Core/Src/nyan_os.c ****             if (nos->command_arg_buffer[arg_count] == NULL) {
 1271              		.loc 1 206 48 view .LVU373
 1272 005a 05F12803 		add	r3, r5, #40
 1273 005e 06EB8303 		add	r3, r6, r3, lsl #2
 1274 0062 5860     		str	r0, [r3, #4]
 207:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1275              		.loc 1 207 13 is_stmt 1 view .LVU374
 207:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1276              		.loc 1 207 40 is_stmt 0 view .LVU375
 1277 0064 5B68     		ldr	r3, [r3, #4]
 207:Core/Src/nyan_os.c ****                 // Free any previously allocated memory
 1278              		.loc 1 207 16 view .LVU376
 1279 0066 002B     		cmp	r3, #0
 1280 0068 E7D0     		beq	.L105
 214:Core/Src/nyan_os.c ****             arg_count++;
 1281              		.loc 1 214 13 is_stmt 1 view .LVU377
 214:Core/Src/nyan_os.c ****             arg_count++;
ARM GAS  /tmp/cc1tEVD1.s 			page 33


 1282              		.loc 1 214 51 is_stmt 0 view .LVU378
 1283 006a 05F12803 		add	r3, r5, #40
 1284 006e 06EB8303 		add	r3, r6, r3, lsl #2
 1285 0072 5868     		ldr	r0, [r3, #4]
 214:Core/Src/nyan_os.c ****             arg_count++;
 1286              		.loc 1 214 13 view .LVU379
 1287 0074 2146     		mov	r1, r4
 1288 0076 FFF7FEFF 		bl	strcpy
 1289              	.LVL131:
 215:Core/Src/nyan_os.c ****         }
 1290              		.loc 1 215 13 is_stmt 1 view .LVU380
 215:Core/Src/nyan_os.c ****         }
 1291              		.loc 1 215 22 is_stmt 0 view .LVU381
 1292 007a 0135     		adds	r5, r5, #1
 1293              	.LVL132:
 215:Core/Src/nyan_os.c ****         }
 1294              		.loc 1 215 22 view .LVU382
 1295 007c DFE7     		b	.L92
 1296              	.LVL133:
 1297              	.L104:
 215:Core/Src/nyan_os.c ****         }
 1298              		.loc 1 215 22 view .LVU383
 1299              	.LBE16:
 220:Core/Src/nyan_os.c **** 
 1300              		.loc 1 220 5 is_stmt 1 view .LVU384
 220:Core/Src/nyan_os.c **** 
 1301              		.loc 1 220 34 is_stmt 0 view .LVU385
 1302 007e EDB2     		uxtb	r5, r5
 1303              	.LVL134:
 220:Core/Src/nyan_os.c **** 
 1304              		.loc 1 220 34 view .LVU386
 1305 0080 86F88C50 		strb	r5, [r6, #140]
 223:Core/Src/nyan_os.c **** 
 1306              		.loc 1 223 5 is_stmt 1 view .LVU387
 1307 0084 8122     		movs	r2, #129
 1308 0086 0021     		movs	r1, #0
 1309 0088 3846     		mov	r0, r7
 1310              	.LVL135:
 223:Core/Src/nyan_os.c **** 
 1311              		.loc 1 223 5 is_stmt 0 view .LVU388
 1312 008a FFF7FEFF 		bl	memset
 1313              	.LVL136:
 225:Core/Src/nyan_os.c **** }
 1314              		.loc 1 225 5 is_stmt 1 view .LVU389
 225:Core/Src/nyan_os.c **** }
 1315              		.loc 1 225 12 is_stmt 0 view .LVU390
 1316 008e 0120     		movs	r0, #1
 1317              	.LVL137:
 1318              	.L90:
 226:Core/Src/nyan_os.c **** 
 1319              		.loc 1 226 1 view .LVU391
 1320 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1321              	.LVL138:
 1322              	.L97:
 1323              		.cfi_def_cfa_offset 0
 1324              		.cfi_restore 3
 1325              		.cfi_restore 4
ARM GAS  /tmp/cc1tEVD1.s 			page 34


 1326              		.cfi_restore 5
 1327              		.cfi_restore 6
 1328              		.cfi_restore 7
 1329              		.cfi_restore 14
 192:Core/Src/nyan_os.c ****     }
 1330              		.loc 1 192 16 view .LVU392
 1331 0092 0020     		movs	r0, #0
 1332              	.LVL139:
 226:Core/Src/nyan_os.c **** 
 1333              		.loc 1 226 1 view .LVU393
 1334 0094 7047     		bx	lr
 1335              	.L107:
 1336 0096 00BF     		.align	2
 1337              	.L106:
 1338 0098 00000000 		.word	.LC0
 1339              		.cfi_endproc
 1340              	.LFE151:
 1342              		.section	.text.NyanDecode,"ax",%progbits
 1343              		.align	1
 1344              		.global	NyanDecode
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1349              	NyanDecode:
 1350              	.LVL140:
 1351              	.LFB149:
 134:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1352              		.loc 1 134 1 is_stmt 1 view -0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Core/Src/nyan_os.c ****     // First set the nos state to idle
 1356              		.loc 1 134 1 is_stmt 0 view .LVU395
 1357 0000 70B5     		push	{r4, r5, r6, lr}
 1358              		.cfi_def_cfa_offset 16
 1359              		.cfi_offset 4, -16
 1360              		.cfi_offset 5, -12
 1361              		.cfi_offset 6, -8
 1362              		.cfi_offset 14, -4
 1363 0002 0546     		mov	r5, r0
 136:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1364              		.loc 1 136 5 is_stmt 1 view .LVU396
 136:Core/Src/nyan_os.c ****     // Iterate over the available commands for a match to the input buffer
 1365              		.loc 1 136 14 is_stmt 0 view .LVU397
 1366 0004 0423     		movs	r3, #4
 1367 0006 4372     		strb	r3, [r0, #9]
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1368              		.loc 1 138 5 is_stmt 1 view .LVU398
 1369              	.LBB17:
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1370              		.loc 1 138 10 view .LVU399
 1371              	.LVL141:
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1372              		.loc 1 138 18 is_stmt 0 view .LVU400
 1373 0008 0024     		movs	r4, #0
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1374              		.loc 1 138 5 view .LVU401
ARM GAS  /tmp/cc1tEVD1.s 			page 35


 1375 000a 03E0     		b	.L109
 1376              	.LVL142:
 1377              	.L110:
 1378              	.LBB18:
 147:Core/Src/nyan_os.c ****         }
 1379              		.loc 1 147 13 is_stmt 1 discriminator 2 view .LVU402
 147:Core/Src/nyan_os.c ****         }
 1380              		.loc 1 147 22 is_stmt 0 discriminator 2 view .LVU403
 1381 000c 0323     		movs	r3, #3
 1382 000e 6B72     		strb	r3, [r5, #9]
 1383              	.LBE18:
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1384              		.loc 1 138 61 is_stmt 1 discriminator 2 view .LVU404
 1385 0010 0134     		adds	r4, r4, #1
 1386              	.LVL143:
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1387              		.loc 1 138 61 is_stmt 0 discriminator 2 view .LVU405
 1388 0012 E4B2     		uxtb	r4, r4
 1389              	.LVL144:
 1390              	.L109:
 138:Core/Src/nyan_os.c ****         size_t command_len = strlen(nyan_commands[cmd_idx]);
 1391              		.loc 1 138 39 is_stmt 1 discriminator 1 view .LVU406
 1392 0014 022C     		cmp	r4, #2
 1393 0016 13D8     		bhi	.L111
 1394              	.LBB19:
 139:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1395              		.loc 1 139 9 view .LVU407
 139:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1396              		.loc 1 139 50 is_stmt 0 view .LVU408
 1397 0018 0A4B     		ldr	r3, .L114
 1398 001a 53F82460 		ldr	r6, [r3, r4, lsl #2]
 139:Core/Src/nyan_os.c ****         // Make sure we compare only the relevant part of the buffer1
 1399              		.loc 1 139 30 view .LVU409
 1400 001e 3046     		mov	r0, r6
 1401 0020 FFF7FEFF 		bl	strlen
 1402              	.LVL145:
 1403 0024 0246     		mov	r2, r0
 1404              	.LVL146:
 141:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1405              		.loc 1 141 9 is_stmt 1 view .LVU410
 141:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1406              		.loc 1 141 12 is_stmt 0 view .LVU411
 1407 0026 8028     		cmp	r0, #128
 1408 0028 F0D8     		bhi	.L110
 141:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1409              		.loc 1 141 49 discriminator 1 view .LVU412
 1410 002a 3146     		mov	r1, r6
 1411 002c 05F10A00 		add	r0, r5, #10
 1412              	.LVL147:
 141:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1413              		.loc 1 141 49 discriminator 1 view .LVU413
 1414 0030 FFF7FEFF 		bl	memcmp
 1415              	.LVL148:
 141:Core/Src/nyan_os.c ****             NyanDecodeArgs(nos);
 1416              		.loc 1 141 46 discriminator 1 view .LVU414
 1417 0034 0028     		cmp	r0, #0
 1418 0036 E9D1     		bne	.L110
ARM GAS  /tmp/cc1tEVD1.s 			page 36


 142:Core/Src/nyan_os.c ****             // We have found a match, set the current evaluation cursor to the command length, args
 1419              		.loc 1 142 13 is_stmt 1 view .LVU415
 1420 0038 2846     		mov	r0, r5
 1421 003a FFF7FEFF 		bl	NyanDecodeArgs
 1422              	.LVL149:
 144:Core/Src/nyan_os.c ****             break;
 1423              		.loc 1 144 13 view .LVU416
 144:Core/Src/nyan_os.c ****             break;
 1424              		.loc 1 144 22 is_stmt 0 view .LVU417
 1425 003e 6C72     		strb	r4, [r5, #9]
 145:Core/Src/nyan_os.c ****         } else {
 1426              		.loc 1 145 13 is_stmt 1 view .LVU418
 1427              	.LVL150:
 1428              	.L111:
 145:Core/Src/nyan_os.c ****         } else {
 1429              		.loc 1 145 13 is_stmt 0 view .LVU419
 1430              	.LBE19:
 1431              	.LBE17:
 152:Core/Src/nyan_os.c **** }
 1432              		.loc 1 152 5 is_stmt 1 view .LVU420
 153:Core/Src/nyan_os.c **** 
 1433              		.loc 1 153 1 is_stmt 0 view .LVU421
 1434 0040 0120     		movs	r0, #1
 1435 0042 70BD     		pop	{r4, r5, r6, pc}
 1436              	.LVL151:
 1437              	.L115:
 153:Core/Src/nyan_os.c **** 
 1438              		.loc 1 153 1 view .LVU422
 1439              		.align	2
 1440              	.L114:
 1441 0044 00000000 		.word	nyan_commands
 1442              		.cfi_endproc
 1443              	.LFE149:
 1445              		.section	.text.FreeNyanString,"ax",%progbits
 1446              		.align	1
 1447              		.global	FreeNyanString
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1452              	FreeNyanString:
 1453              	.LVL152:
 1454              	.LFB156:
 396:Core/Src/nyan_os.c **** 
 397:Core/Src/nyan_os.c **** void FreeNyanString(NyanString* nyanString)
 398:Core/Src/nyan_os.c **** {
 1455              		.loc 1 398 1 is_stmt 1 view -0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              		.loc 1 398 1 is_stmt 0 view .LVU424
 1460 0000 10B5     		push	{r4, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 4, -8
 1463              		.cfi_offset 14, -4
 1464 0002 0446     		mov	r4, r0
 399:Core/Src/nyan_os.c ****     // Clear the memory contents
 400:Core/Src/nyan_os.c ****     for (uint32_t i = 0; i < nyanString->size; ++i) {
ARM GAS  /tmp/cc1tEVD1.s 			page 37


 1465              		.loc 1 400 5 is_stmt 1 view .LVU425
 1466              	.LBB20:
 1467              		.loc 1 400 10 view .LVU426
 1468              	.LVL153:
 1469              		.loc 1 400 19 is_stmt 0 view .LVU427
 1470 0004 0023     		movs	r3, #0
 1471              		.loc 1 400 5 view .LVU428
 1472 0006 03E0     		b	.L117
 1473              	.LVL154:
 1474              	.L118:
 401:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1475              		.loc 1 401 9 is_stmt 1 discriminator 3 view .LVU429
 1476              		.loc 1 401 19 is_stmt 0 discriminator 3 view .LVU430
 1477 0008 2268     		ldr	r2, [r4]
 1478              		.loc 1 401 32 discriminator 3 view .LVU431
 1479 000a 0021     		movs	r1, #0
 1480 000c D154     		strb	r1, [r2, r3]
 400:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1481              		.loc 1 400 48 is_stmt 1 discriminator 3 view .LVU432
 1482 000e 0133     		adds	r3, r3, #1
 1483              	.LVL155:
 1484              	.L117:
 400:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1485              		.loc 1 400 28 discriminator 1 view .LVU433
 400:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1486              		.loc 1 400 40 is_stmt 0 discriminator 1 view .LVU434
 1487 0010 6268     		ldr	r2, [r4, #4]
 400:Core/Src/nyan_os.c ****         nyanString->p_array[i] = 0x00;
 1488              		.loc 1 400 28 discriminator 1 view .LVU435
 1489 0012 9A42     		cmp	r2, r3
 1490 0014 F8D8     		bhi	.L118
 1491              	.LBE20:
 402:Core/Src/nyan_os.c ****     }
 403:Core/Src/nyan_os.c ****     // Free up the pointer and memory
 404:Core/Src/nyan_os.c ****     free(nyanString->p_array);
 1492              		.loc 1 404 5 is_stmt 1 view .LVU436
 1493 0016 2068     		ldr	r0, [r4]
 1494              	.LVL156:
 1495              		.loc 1 404 5 is_stmt 0 view .LVU437
 1496 0018 FFF7FEFF 		bl	free
 1497              	.LVL157:
 405:Core/Src/nyan_os.c ****     nyanString->p_array = NULL;
 1498              		.loc 1 405 5 is_stmt 1 view .LVU438
 1499              		.loc 1 405 25 is_stmt 0 view .LVU439
 1500 001c 0023     		movs	r3, #0
 1501 001e 2360     		str	r3, [r4]
 406:Core/Src/nyan_os.c ****     nyanString->size = 0;
 1502              		.loc 1 406 5 is_stmt 1 view .LVU440
 1503              		.loc 1 406 22 is_stmt 0 view .LVU441
 1504 0020 6360     		str	r3, [r4, #4]
 407:Core/Src/nyan_os.c **** }
 1505              		.loc 1 407 1 view .LVU442
 1506 0022 10BD     		pop	{r4, pc}
 1507              		.loc 1 407 1 view .LVU443
 1508              		.cfi_endproc
 1509              	.LFE156:
 1511              		.section	.text.ClearNyanCommandBuffer,"ax",%progbits
ARM GAS  /tmp/cc1tEVD1.s 			page 38


 1512              		.align	1
 1513              		.global	ClearNyanCommandBuffer
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1518              	ClearNyanCommandBuffer:
 1519              	.LVL158:
 1520              	.LFB157:
 408:Core/Src/nyan_os.c **** 
 409:Core/Src/nyan_os.c **** void ClearNyanCommandBuffer(volatile NyanOS* nos){
 1521              		.loc 1 409 50 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		.loc 1 409 50 is_stmt 0 view .LVU445
 1526 0000 08B5     		push	{r3, lr}
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 3, -8
 1529              		.cfi_offset 14, -4
 410:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1530              		.loc 1 410 5 is_stmt 1 view .LVU446
 1531              		.loc 1 410 29 is_stmt 0 view .LVU447
 1532 0002 0021     		movs	r1, #0
 1533 0004 80F88B10 		strb	r1, [r0, #139]
 411:Core/Src/nyan_os.c ****     memset((void*)nos->command_buffer, 0, sizeof(nos->command_buffer));
 1534              		.loc 1 411 5 is_stmt 1 view .LVU448
 1535 0008 8122     		movs	r2, #129
 1536 000a 0A30     		adds	r0, r0, #10
 1537              	.LVL159:
 1538              		.loc 1 411 5 is_stmt 0 view .LVU449
 1539 000c FFF7FEFF 		bl	memset
 1540              	.LVL160:
 412:Core/Src/nyan_os.c **** };...
 1541              		.loc 1 412 1 view .LVU450
 1542 0010 08BD     		pop	{r3, pc}
 1543              		.cfi_endproc
 1544              	.LFE157:
 1546              		.section	.text.NyanOsInit,"ax",%progbits
 1547              		.align	1
 1548              		.global	NyanOsInit
 1549              		.syntax unified
 1550              		.thumb
 1551              		.thumb_func
 1553              	NyanOsInit:
 1554              	.LVL161:
 1555              	.LFB145:
  18:Core/Src/nyan_os.c **** {
 1556              		.loc 1 18 1 is_stmt 1 view -0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
  18:Core/Src/nyan_os.c **** {
 1560              		.loc 1 18 1 is_stmt 0 view .LVU452
 1561 0000 38B5     		push	{r3, r4, r5, lr}
 1562              		.cfi_def_cfa_offset 16
 1563              		.cfi_offset 3, -16
 1564              		.cfi_offset 4, -12
ARM GAS  /tmp/cc1tEVD1.s 			page 39


 1565              		.cfi_offset 5, -8
 1566              		.cfi_offset 14, -4
 1567 0002 0546     		mov	r5, r0
  20:Core/Src/nyan_os.c ****     nos->state = READY;
 1568              		.loc 1 20 5 is_stmt 1 view .LVU453
  20:Core/Src/nyan_os.c ****     nos->state = READY;
 1569              		.loc 1 20 16 is_stmt 0 view .LVU454
 1570 0004 0123     		movs	r3, #1
 1571 0006 0372     		strb	r3, [r0, #8]
  21:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 1572              		.loc 1 21 5 is_stmt 1 view .LVU455
  21:Core/Src/nyan_os.c ****     nos->exe = NYAN_EXE_IDLE;
 1573              		.loc 1 21 14 is_stmt 0 view .LVU456
 1574 0008 0423     		movs	r3, #4
 1575 000a 4372     		strb	r3, [r0, #9]
  24:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 1576              		.loc 1 24 5 is_stmt 1 view .LVU457
  24:Core/Src/nyan_os.c ****     nos->command_buffer_num_args = 0;
 1577              		.loc 1 24 34 is_stmt 0 view .LVU458
 1578 000c 0024     		movs	r4, #0
 1579 000e 80F88C40 		strb	r4, [r0, #140]
  25:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1580              		.loc 1 25 5 is_stmt 1 view .LVU459
  25:Core/Src/nyan_os.c ****     nos->command_buffer_pos = 0;
 1581              		.loc 1 25 29 is_stmt 0 view .LVU460
 1582 0012 80F88B40 		strb	r4, [r0, #139]
  26:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 1583              		.loc 1 26 5 is_stmt 1 view .LVU461
  26:Core/Src/nyan_os.c ****     nos->cdc_ch = _NYAN_CDC_CHANNEL;
 1584              		.loc 1 26 17 is_stmt 0 view .LVU462
 1585 0016 80F88D40 		strb	r4, [r0, #141]
  29:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 1586              		.loc 1 29 5 is_stmt 1 view .LVU463
  29:Core/Src/nyan_os.c ****     nos->eeprom = eeprom;
 1587              		.loc 1 29 17 is_stmt 0 view .LVU464
 1588 001a 4160     		str	r1, [r0, #4]
  32:Core/Src/nyan_os.c ****     ClearNyanCommandBuffer(nos);
 1589              		.loc 1 32 5 is_stmt 1 view .LVU465
 1590 001c FFF7FEFF 		bl	ClearNyanCommandBuffer
 1591              	.LVL162:
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1592              		.loc 1 35 5 view .LVU466
 1593              	.LBB21:
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1594              		.loc 1 35 10 view .LVU467
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1595              		.loc 1 35 14 is_stmt 0 view .LVU468
 1596 0020 2346     		mov	r3, r4
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1597              		.loc 1 35 5 view .LVU469
 1598 0022 06E0     		b	.L123
 1599              	.LVL163:
 1600              	.L124:
  36:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 1601              		.loc 1 36 9 is_stmt 1 discriminator 3 view .LVU470
  36:Core/Src/nyan_os.c ****         nos->command_arg_buffer[i] = NULL;
 1602              		.loc 1 36 36 is_stmt 0 discriminator 3 view .LVU471
ARM GAS  /tmp/cc1tEVD1.s 			page 40


 1603 0024 03F12802 		add	r2, r3, #40
 1604 0028 05EB8202 		add	r2, r5, r2, lsl #2
 1605 002c 0021     		movs	r1, #0
 1606 002e 5160     		str	r1, [r2, #4]
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1607              		.loc 1 35 45 is_stmt 1 discriminator 3 view .LVU472
 1608 0030 0133     		adds	r3, r3, #1
 1609              	.LVL164:
 1610              	.L123:
  35:Core/Src/nyan_os.c ****     for (int i = 0; i < _NYAN_CMD_MAX_ARGS; ++i) {
 1611              		.loc 1 35 23 discriminator 1 view .LVU473
 1612 0032 092B     		cmp	r3, #9
 1613 0034 F6DD     		ble	.L124
 1614              	.LBE21:
  40:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 1615              		.loc 1 40 5 view .LVU474
  40:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 1616              		.loc 1 40 28 is_stmt 0 view .LVU475
 1617 0036 0023     		movs	r3, #0
 1618              	.LVL165:
  40:Core/Src/nyan_os.c ****     nos->tx_buffer.p_array = NULL;
 1619              		.loc 1 40 28 view .LVU476
 1620 0038 C5F89030 		str	r3, [r5, #144]
  41:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 1621              		.loc 1 41 5 is_stmt 1 view .LVU477
  41:Core/Src/nyan_os.c ****     nos->tx_buffer.size = 0;
 1622              		.loc 1 41 25 is_stmt 0 view .LVU478
 1623 003c C5F89430 		str	r3, [r5, #148]
  43:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1624              		.loc 1 43 5 is_stmt 1 view .LVU479
  44:Core/Src/nyan_os.c **** }
 1625              		.loc 1 44 1 is_stmt 0 view .LVU480
 1626 0040 0120     		movs	r0, #1
 1627 0042 38BD     		pop	{r3, r4, r5, pc}
  44:Core/Src/nyan_os.c **** }
 1628              		.loc 1 44 1 view .LVU481
 1629              		.cfi_endproc
 1630              	.LFE145:
 1632              		.section	.rodata.NyanAddInputBuffer.str1.4,"aMS",%progbits,1
 1633              		.align	2
 1634              	.LC1:
 1635 0000 08200800 		.ascii	"\010 \010\000"
 1636              		.section	.text.NyanAddInputBuffer,"ax",%progbits
 1637              		.align	1
 1638              		.global	NyanAddInputBuffer
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	NyanAddInputBuffer:
 1644              	.LVL166:
 1645              	.LFB147:
  59:Core/Src/nyan_os.c **** {
 1646              		.loc 1 59 1 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
  59:Core/Src/nyan_os.c **** {
ARM GAS  /tmp/cc1tEVD1.s 			page 41


 1650              		.loc 1 59 1 is_stmt 0 view .LVU483
 1651 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1652              		.cfi_def_cfa_offset 20
 1653              		.cfi_offset 4, -20
 1654              		.cfi_offset 5, -16
 1655              		.cfi_offset 6, -12
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 83B0     		sub	sp, sp, #12
 1659              		.cfi_def_cfa_offset 32
 1660 0004 0446     		mov	r4, r0
 1661 0006 0E46     		mov	r6, r1
 1662 0008 1746     		mov	r7, r2
  60:Core/Src/nyan_os.c ****     const char del_char = 0x7F;
 1663              		.loc 1 60 5 is_stmt 1 view .LVU484
 1664              	.LVL167:
  61:Core/Src/nyan_os.c ****     const char backspace_char = 0x08;
 1665              		.loc 1 61 5 view .LVU485
  62:Core/Src/nyan_os.c ****     const char carriage_return = '\r';
 1666              		.loc 1 62 5 view .LVU486
  63:Core/Src/nyan_os.c ****     const char line_feed = '\n';
 1667              		.loc 1 63 5 view .LVU487
  65:Core/Src/nyan_os.c ****     switch(nos->state){
 1668              		.loc 1 65 5 view .LVU488
  65:Core/Src/nyan_os.c ****     switch(nos->state){
 1669              		.loc 1 65 15 is_stmt 0 view .LVU489
 1670 000a 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 1671 000c DBB2     		uxtb	r3, r3
  65:Core/Src/nyan_os.c ****     switch(nos->state){
 1672              		.loc 1 65 5 view .LVU490
 1673 000e 012B     		cmp	r3, #1
 1674 0010 4FD0     		beq	.L136
 1675 0012 022B     		cmp	r3, #2
 1676 0014 63D0     		beq	.L137
 1677              	.LVL168:
 1678              	.L129:
  99:Core/Src/nyan_os.c ****     return NOS_SUCCESS;
 1679              		.loc 1 99 5 is_stmt 1 view .LVU491
 100:Core/Src/nyan_os.c **** }
 1680              		.loc 1 100 1 is_stmt 0 view .LVU492
 1681 0016 0120     		movs	r0, #1
 1682 0018 03B0     		add	sp, sp, #12
 1683              		.cfi_remember_state
 1684              		.cfi_def_cfa_offset 20
 1685              		@ sp needed
 1686 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 1687              	.LVL169:
 1688              	.L139:
 1689              		.cfi_restore_state
 1690              	.LBB22:
 1691              	.LBB23:
  70:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 1692              		.loc 1 70 21 is_stmt 1 view .LVU493
  70:Core/Src/nyan_os.c ****                     uint8_t backspace_seq[3] = {backspace_char, ' ', backspace_char};
 1693              		.loc 1 70 29 is_stmt 0 view .LVU494
 1694 001c 314B     		ldr	r3, .L141
 1695 001e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc1tEVD1.s 			page 42


 1696 0020 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1697 0024 1B0C     		lsrs	r3, r3, #16
 1698 0026 8DF80630 		strb	r3, [sp, #6]
  71:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&backspace_seq[0], sizeof(backspace_seq));
 1699              		.loc 1 71 21 is_stmt 1 view .LVU495
 1700 002a 0322     		movs	r2, #3
 1701 002c 01A9     		add	r1, sp, #4
 1702 002e 2046     		mov	r0, r4
 1703 0030 FFF7FEFF 		bl	NyanPrint
 1704              	.LVL170:
  72:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 1705              		.loc 1 72 21 view .LVU496
  72:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 1706              		.loc 1 72 26 is_stmt 0 view .LVU497
 1707 0034 94F88B30 		ldrb	r3, [r4, #139]	@ zero_extendqisi2
  72:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 1708              		.loc 1 72 21 view .LVU498
 1709 0038 013B     		subs	r3, r3, #1
 1710 003a DBB2     		uxtb	r3, r3
 1711 003c 84F88B30 		strb	r3, [r4, #139]
 1712              	.L131:
  72:Core/Src/nyan_os.c ****                     --nos->command_buffer_pos;
 1713              		.loc 1 72 21 view .LVU499
 1714              	.LBE23:
  67:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1715              		.loc 1 67 47 is_stmt 1 discriminator 2 view .LVU500
 1716 0040 0135     		adds	r5, r5, #1
 1717              	.LVL171:
 1718              	.L127:
  67:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1719              		.loc 1 67 39 discriminator 1 view .LVU501
  67:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1720              		.loc 1 67 41 is_stmt 0 discriminator 1 view .LVU502
 1721 0042 3B68     		ldr	r3, [r7]
  67:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1722              		.loc 1 67 39 discriminator 1 view .LVU503
 1723 0044 AB42     		cmp	r3, r5
 1724 0046 E6D9     		bls	.L129
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
 1725              		.loc 1 68 17 is_stmt 1 view .LVU504
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
 1726              		.loc 1 68 25 is_stmt 0 view .LVU505
 1727 0048 7119     		adds	r1, r6, r5
 1728 004a 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
 1729              		.loc 1 68 19 view .LVU506
 1730 004c 7F2B     		cmp	r3, #127
 1731 004e 18BF     		it	ne
 1732 0050 082B     		cmpne	r3, #8
 1733 0052 03D1     		bne	.L130
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
 1734              		.loc 1 68 82 discriminator 1 view .LVU507
 1735 0054 94F88B20 		ldrb	r2, [r4, #139]	@ zero_extendqisi2
  68:Core/Src/nyan_os.c ****                 if((pbuf[idx] == backspace_char ||  pbuf[idx] == del_char) && nos->command_buffer_p
 1736              		.loc 1 68 76 discriminator 1 view .LVU508
 1737 0058 002A     		cmp	r2, #0
 1738 005a DFD1     		bne	.L139
ARM GAS  /tmp/cc1tEVD1.s 			page 43


 1739              	.L130:
  73:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] == line_feed || pbuf[idx] == carriage_return) {
 1740              		.loc 1 73 24 is_stmt 1 view .LVU509
  73:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] == line_feed || pbuf[idx] == carriage_return) {
 1741              		.loc 1 73 26 is_stmt 0 view .LVU510
 1742 005c 0D2B     		cmp	r3, #13
 1743 005e 18BF     		it	ne
 1744 0060 0A2B     		cmpne	r3, #10
 1745 0062 17D0     		beq	.L140
  80:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 1746              		.loc 1 80 24 is_stmt 1 view .LVU511
  80:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 1747              		.loc 1 80 30 is_stmt 0 view .LVU512
 1748 0064 94F88B20 		ldrb	r2, [r4, #139]	@ zero_extendqisi2
 1749 0068 D2B2     		uxtb	r2, r2
  80:Core/Src/nyan_os.c ****                 } else if(nos->command_buffer_pos >= _NYAN_CMD_BUF_LEN - 1) {
 1750              		.loc 1 80 26 view .LVU513
 1751 006a 7E2A     		cmp	r2, #126
 1752 006c E8D8     		bhi	.L131
  82:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] >= 0x20 && pbuf[idx] <= 0x7E) {
 1753              		.loc 1 82 24 is_stmt 1 view .LVU514
  82:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] >= 0x20 && pbuf[idx] <= 0x7E) {
 1754              		.loc 1 82 45 is_stmt 0 view .LVU515
 1755 006e 203B     		subs	r3, r3, #32
 1756 0070 DBB2     		uxtb	r3, r3
  82:Core/Src/nyan_os.c ****                 } else if(pbuf[idx] >= 0x20 && pbuf[idx] <= 0x7E) {
 1757              		.loc 1 82 26 view .LVU516
 1758 0072 5E2B     		cmp	r3, #94
 1759 0074 E4D8     		bhi	.L131
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
 1760              		.loc 1 83 21 is_stmt 1 view .LVU517
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
 1761              		.loc 1 83 44 is_stmt 0 view .LVU518
 1762 0076 94F88B30 		ldrb	r3, [r4, #139]	@ zero_extendqisi2
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
 1763              		.loc 1 83 64 view .LVU519
 1764 007a 5A1C     		adds	r2, r3, #1
 1765 007c D2B2     		uxtb	r2, r2
 1766 007e 84F88B20 		strb	r2, [r4, #139]
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
 1767              		.loc 1 83 74 view .LVU520
 1768 0082 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  83:Core/Src/nyan_os.c ****                     nos->command_buffer[nos->command_buffer_pos++] = pbuf[idx];
 1769              		.loc 1 83 68 view .LVU521
 1770 0084 2344     		add	r3, r3, r4
 1771 0086 9A72     		strb	r2, [r3, #10]
  84:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)pbuf, (size_t)*Len);
 1772              		.loc 1 84 21 is_stmt 1 view .LVU522
 1773 0088 3A68     		ldr	r2, [r7]
 1774 008a 3146     		mov	r1, r6
 1775 008c 2046     		mov	r0, r4
 1776 008e FFF7FEFF 		bl	NyanPrint
 1777              	.LVL172:
 1778 0092 D5E7     		b	.L131
 1779              	.L140:
  75:Core/Src/nyan_os.c ****                     nos->command_buffer_pos = 0;
 1780              		.loc 1 75 21 view .LVU523
ARM GAS  /tmp/cc1tEVD1.s 			page 44


  75:Core/Src/nyan_os.c ****                     nos->command_buffer_pos = 0;
 1781              		.loc 1 75 45 is_stmt 0 view .LVU524
 1782 0094 0023     		movs	r3, #0
 1783 0096 84F88B30 		strb	r3, [r4, #139]
  76:Core/Src/nyan_os.c ****                     NyanDecode(nos);
 1784              		.loc 1 76 21 is_stmt 1 view .LVU525
 1785 009a 2046     		mov	r0, r4
 1786 009c FFF7FEFF 		bl	NyanDecode
 1787              	.LVL173:
  77:Core/Src/nyan_os.c ****                     ClearNyanCommandBuffer(nos);
 1788              		.loc 1 77 21 view .LVU526
 1789 00a0 2046     		mov	r0, r4
 1790 00a2 FFF7FEFF 		bl	ClearNyanCommandBuffer
 1791              	.LVL174:
  78:Core/Src/nyan_os.c ****                     NyanPrint(nos, (char*)&nyan_keys_newline[0], sizeof(nyan_keys_newline));
 1792              		.loc 1 78 21 view .LVU527
 1793 00a6 0322     		movs	r2, #3
 1794 00a8 0F49     		ldr	r1, .L141+4
 1795 00aa 2046     		mov	r0, r4
 1796 00ac FFF7FEFF 		bl	NyanPrint
 1797              	.LVL175:
  79:Core/Src/nyan_os.c ****                     break;
 1798              		.loc 1 79 21 view .LVU528
 1799 00b0 B1E7     		b	.L129
 1800              	.LVL176:
 1801              	.L136:
  79:Core/Src/nyan_os.c ****                     break;
 1802              		.loc 1 79 21 is_stmt 0 view .LVU529
 1803              	.LBE22:
  65:Core/Src/nyan_os.c ****     switch(nos->state){
 1804              		.loc 1 65 5 view .LVU530
 1805 00b2 0025     		movs	r5, #0
 1806 00b4 C5E7     		b	.L127
 1807              	.LVL177:
 1808              	.L134:
 1809              	.LBB24:
  91:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1810              		.loc 1 91 47 is_stmt 1 discriminator 2 view .LVU531
 1811 00b6 0133     		adds	r3, r3, #1
 1812              	.LVL178:
 1813              	.L128:
  91:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1814              		.loc 1 91 39 discriminator 1 view .LVU532
  91:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1815              		.loc 1 91 41 is_stmt 0 discriminator 1 view .LVU533
 1816 00b8 3A68     		ldr	r2, [r7]
  91:Core/Src/nyan_os.c ****             for(uint32_t idx = 0; idx < *Len; ++idx) {
 1817              		.loc 1 91 39 discriminator 1 view .LVU534
 1818 00ba 9A42     		cmp	r2, r3
 1819 00bc ABD9     		bls	.L129
  92:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 1820              		.loc 1 92 17 is_stmt 1 view .LVU535
  92:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 1821              		.loc 1 92 23 is_stmt 0 view .LVU536
 1822 00be D4F89810 		ldr	r1, [r4, #152]
  92:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 1823              		.loc 1 92 45 view .LVU537
ARM GAS  /tmp/cc1tEVD1.s 			page 45


 1824 00c2 D4F89C20 		ldr	r2, [r4, #156]
  92:Core/Src/nyan_os.c ****                 if(nos->bytes_received < nos->bytes_array_size)
 1825              		.loc 1 92 19 view .LVU538
 1826 00c6 9142     		cmp	r1, r2
 1827 00c8 F5D2     		bcs	.L134
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1828              		.loc 1 93 21 is_stmt 1 view .LVU539
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1829              		.loc 1 93 24 is_stmt 0 view .LVU540
 1830 00ca D4F8A010 		ldr	r1, [r4, #160]
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1831              		.loc 1 93 41 view .LVU541
 1832 00ce D4F89820 		ldr	r2, [r4, #152]
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1833              		.loc 1 93 57 view .LVU542
 1834 00d2 501C     		adds	r0, r2, #1
 1835 00d4 C4F89800 		str	r0, [r4, #152]
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1836              		.loc 1 93 67 view .LVU543
 1837 00d8 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1838              		.loc 1 93 61 view .LVU544
 1839 00da 8854     		strb	r0, [r1, r2]
 1840 00dc EBE7     		b	.L134
 1841              	.LVL179:
 1842              	.L137:
  93:Core/Src/nyan_os.c ****                     nos->bytes_array[nos->bytes_received++] = pbuf[idx];
 1843              		.loc 1 93 61 view .LVU545
 1844              	.LBE24:
  65:Core/Src/nyan_os.c ****     switch(nos->state){
 1845              		.loc 1 65 5 view .LVU546
 1846 00de 0023     		movs	r3, #0
 1847 00e0 EAE7     		b	.L128
 1848              	.L142:
 1849 00e2 00BF     		.align	2
 1850              	.L141:
 1851 00e4 00000000 		.word	.LC1
 1852 00e8 00000000 		.word	nyan_keys_newline
 1853              		.cfi_endproc
 1854              	.LFE147:
 1856              		.section	.data.nyan_keys_write_bitstream_error_size_tx_busy,"aw"
 1857              		.align	2
 1860              	nyan_keys_write_bitstream_error_size_tx_busy:
 1861 0000 4661696C 		.ascii	"Failed to write bitstream length, TX buffer is busy"
 1861      65642074 
 1861      6F207772 
 1861      69746520 
 1861      62697473 
 1862 0033 2E0D0A00 		.ascii	".\015\012\000"
 1863              		.section	.data.nyan_keys_write_bitstream_error_size,"aw"
 1864              		.align	2
 1867              	nyan_keys_write_bitstream_error_size:
 1868 0000 4661696C 		.ascii	"Failed to parse bitstream length, size must be less"
 1868      65642074 
 1868      6F207061 
 1868      72736520 
 1868      62697473 
ARM GAS  /tmp/cc1tEVD1.s 			page 46


 1869 0033 20746861 		.ascii	" than 65535 bytes.\015\012\000"
 1869      6E203635 
 1869      35333520 
 1869      62797465 
 1869      732E0D0A 
 1870              		.section	.data.nyan_keys_write_bitstream_info_start,"aw"
 1871              		.align	2
 1874              	nyan_keys_write_bitstream_info_start:
 1875 0000 72656164 		.ascii	"ready\015\012\000"
 1875      790D0A00 
 1876              		.section	.data.nyan_keys_unknown_command,"aw"
 1877              		.align	2
 1880              	nyan_keys_unknown_command:
 1881 0000 436F6D6D 		.ascii	"Command not supported by NyanOS\000"
 1881      616E6420 
 1881      6E6F7420 
 1881      73757070 
 1881      6F727465 
 1882              		.section	.data.nyan_keys_set_owner_success,"aw"
 1883              		.align	2
 1886              	nyan_keys_set_owner_success:
 1887 0000 4E79616E 		.ascii	"Nyan Keys owner has been successfully set\015\012\000"
 1887      204B6579 
 1887      73206F77 
 1887      6E657220 
 1887      68617320 
 1888              		.section	.data.nyan_keys_getinfo_owner,"aw"
 1889              		.align	2
 1892              	nyan_keys_getinfo_owner:
 1893 0000 4F776E65 		.ascii	"Owner: \000"
 1893      723A2000 
 1894              		.section	.data.nyan_keys_getinfo,"aw"
 1895              		.align	2
 1898              	nyan_keys_getinfo:
 1899 0000 56657273 		.ascii	"Version: 0.01\015\012Author: Portland.HODL\015\012B"
 1899      696F6E3A 
 1899      20302E30 
 1899      310D0A41 
 1899      7574686F 
 1900 0027 75696C74 		.ascii	"uilt: 07/11/23\015\012\000"
 1900      3A203037 
 1900      2F31312F 
 1900      32330D0A 
 1900      00
 1901              		.section	.data.nyan_keys_path_text,"aw"
 1902              		.align	2
 1905              	nyan_keys_path_text:
 1906 0000 4E79616E 		.ascii	"NyanOS \360\237\220\261 > \000"
 1906      4F5320F0 
 1906      9F90B120 
 1906      3E2000
 1907              		.section	.data.nyan_keys_newline,"aw"
 1908              		.align	2
 1911              	nyan_keys_newline:
 1912 0000 0D0A00   		.ascii	"\015\012\000"
 1913              		.section	.data.nyan_keys_welcome_text,"aw"
 1914              		.align	2
ARM GAS  /tmp/cc1tEVD1.s 			page 47


 1917              	nyan_keys_welcome_text:
 1918 0000 4E79616E 		.ascii	"Nyan Keys Operating System (NOS) V0.01\015\012Made "
 1918      204B6579 
 1918      73204F70 
 1918      65726174 
 1918      696E6720 
 1919 002d 62792050 		.ascii	"by Portland.HODL\015\012\015\012\000"
 1919      6F72746C 
 1919      616E642E 
 1919      484F444C 
 1919      0D0A0D0A 
 1920              		.section	.rodata.str1.4,"aMS",%progbits,1
 1921              		.align	2
 1922              	.LC2:
 1923 0000 67657469 		.ascii	"getinfo\000"
 1923      6E666F00 
 1924              		.align	2
 1925              	.LC3:
 1926 0008 77726974 		.ascii	"write-bitstream\000"
 1926      652D6269 
 1926      74737472 
 1926      65616D00 
 1927              		.align	2
 1928              	.LC4:
 1929 0018 7365742D 		.ascii	"set-owner\000"
 1929      6F776E65 
 1929      7200
 1930              		.section	.rodata.nyan_commands,"a"
 1931              		.align	2
 1934              	nyan_commands:
 1935 0000 00000000 		.word	.LC2
 1936 0004 08000000 		.word	.LC3
 1937 0008 18000000 		.word	.LC4
 1938              		.text
 1939              	.Letext0:
 1940              		.file 2 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1941              		.file 3 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1942              		.file 4 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1943              		.file 5 "Core/Inc/24xx_eeprom.h"
 1944              		.file 6 "Core/Inc/nyan_os.h"
 1945              		.file 7 "Core/Inc/nyan_strings.h"
 1946              		.file 8 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1947              		.file 9 "/home/qrsnap/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 1948              		.file 10 "<built-in>"
ARM GAS  /tmp/cc1tEVD1.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 nyan_os.c
     /tmp/cc1tEVD1.s:21     .text.NyanPrint:00000000 $t
     /tmp/cc1tEVD1.s:27     .text.NyanPrint:00000000 NyanPrint
     /tmp/cc1tEVD1.s:163    .text.NyanWelcomeDisplay:00000000 $t
     /tmp/cc1tEVD1.s:169    .text.NyanWelcomeDisplay:00000000 NyanWelcomeDisplay
     /tmp/cc1tEVD1.s:235    .text.NyanWelcomeDisplay:00000034 $d
     /tmp/cc1tEVD1.s:1917   .data.nyan_keys_welcome_text:00000000 nyan_keys_welcome_text
     /tmp/cc1tEVD1.s:1905   .data.nyan_keys_path_text:00000000 nyan_keys_path_text
     /tmp/cc1tEVD1.s:241    .text.NyanExeGetinfo:00000000 $t
     /tmp/cc1tEVD1.s:247    .text.NyanExeGetinfo:00000000 NyanExeGetinfo
     /tmp/cc1tEVD1.s:338    .text.NyanExeGetinfo:00000064 $d
     /tmp/cc1tEVD1.s:1898   .data.nyan_keys_getinfo:00000000 nyan_keys_getinfo
     /tmp/cc1tEVD1.s:1892   .data.nyan_keys_getinfo_owner:00000000 nyan_keys_getinfo_owner
     /tmp/cc1tEVD1.s:1911   .data.nyan_keys_newline:00000000 nyan_keys_newline
     /tmp/cc1tEVD1.s:345    .text.NyanExeSetOwner:00000000 $t
     /tmp/cc1tEVD1.s:351    .text.NyanExeSetOwner:00000000 NyanExeSetOwner
     /tmp/cc1tEVD1.s:628    .text.NyanExeWriteFpgaBitstream:00000000 $t
     /tmp/cc1tEVD1.s:634    .text.NyanExeWriteFpgaBitstream:00000000 NyanExeWriteFpgaBitstream
     /tmp/cc1tEVD1.s:907    .text.NyanExeWriteFpgaBitstream:00000110 $d
     /tmp/cc1tEVD1.s:1867   .data.nyan_keys_write_bitstream_error_size:00000000 nyan_keys_write_bitstream_error_size
     /tmp/cc1tEVD1.s:1860   .data.nyan_keys_write_bitstream_error_size_tx_busy:00000000 nyan_keys_write_bitstream_error_size_tx_busy
     /tmp/cc1tEVD1.s:1874   .data.nyan_keys_write_bitstream_info_start:00000000 nyan_keys_write_bitstream_info_start
     /tmp/cc1tEVD1.s:914    .text.NyanExecute:00000000 $t
     /tmp/cc1tEVD1.s:920    .text.NyanExecute:00000000 NyanExecute
     /tmp/cc1tEVD1.s:944    .text.NyanExecute:00000010 $d
     /tmp/cc1tEVD1.s:1067   .text.NyanExecute:0000009c $d
     /tmp/cc1tEVD1.s:1886   .data.nyan_keys_set_owner_success:00000000 nyan_keys_set_owner_success
     /tmp/cc1tEVD1.s:1880   .data.nyan_keys_unknown_command:00000000 nyan_keys_unknown_command
     /tmp/cc1tEVD1.s:1075   .text.FreeNyanCommandArgs:00000000 $t
     /tmp/cc1tEVD1.s:1081   .text.FreeNyanCommandArgs:00000000 FreeNyanCommandArgs
     /tmp/cc1tEVD1.s:1151   .rodata.NyanDecodeArgs.str1.4:00000000 $d
     /tmp/cc1tEVD1.s:1155   .text.NyanDecodeArgs:00000000 $t
     /tmp/cc1tEVD1.s:1161   .text.NyanDecodeArgs:00000000 NyanDecodeArgs
     /tmp/cc1tEVD1.s:1338   .text.NyanDecodeArgs:00000098 $d
     /tmp/cc1tEVD1.s:1343   .text.NyanDecode:00000000 $t
     /tmp/cc1tEVD1.s:1349   .text.NyanDecode:00000000 NyanDecode
     /tmp/cc1tEVD1.s:1441   .text.NyanDecode:00000044 $d
     /tmp/cc1tEVD1.s:1934   .rodata.nyan_commands:00000000 nyan_commands
     /tmp/cc1tEVD1.s:1446   .text.FreeNyanString:00000000 $t
     /tmp/cc1tEVD1.s:1452   .text.FreeNyanString:00000000 FreeNyanString
     /tmp/cc1tEVD1.s:1512   .text.ClearNyanCommandBuffer:00000000 $t
     /tmp/cc1tEVD1.s:1518   .text.ClearNyanCommandBuffer:00000000 ClearNyanCommandBuffer
     /tmp/cc1tEVD1.s:1547   .text.NyanOsInit:00000000 $t
     /tmp/cc1tEVD1.s:1553   .text.NyanOsInit:00000000 NyanOsInit
     /tmp/cc1tEVD1.s:1633   .rodata.NyanAddInputBuffer.str1.4:00000000 $d
     /tmp/cc1tEVD1.s:1637   .text.NyanAddInputBuffer:00000000 $t
     /tmp/cc1tEVD1.s:1643   .text.NyanAddInputBuffer:00000000 NyanAddInputBuffer
     /tmp/cc1tEVD1.s:1851   .text.NyanAddInputBuffer:000000e4 $d
     /tmp/cc1tEVD1.s:1857   .data.nyan_keys_write_bitstream_error_size_tx_busy:00000000 $d
     /tmp/cc1tEVD1.s:1864   .data.nyan_keys_write_bitstream_error_size:00000000 $d
     /tmp/cc1tEVD1.s:1871   .data.nyan_keys_write_bitstream_info_start:00000000 $d
     /tmp/cc1tEVD1.s:1877   .data.nyan_keys_unknown_command:00000000 $d
     /tmp/cc1tEVD1.s:1883   .data.nyan_keys_set_owner_success:00000000 $d
     /tmp/cc1tEVD1.s:1889   .data.nyan_keys_getinfo_owner:00000000 $d
     /tmp/cc1tEVD1.s:1895   .data.nyan_keys_getinfo:00000000 $d
     /tmp/cc1tEVD1.s:1902   .data.nyan_keys_path_text:00000000 $d
ARM GAS  /tmp/cc1tEVD1.s 			page 49


     /tmp/cc1tEVD1.s:1908   .data.nyan_keys_newline:00000000 $d
     /tmp/cc1tEVD1.s:1914   .data.nyan_keys_welcome_text:00000000 $d
     /tmp/cc1tEVD1.s:1921   .rodata.str1.4:00000000 $d
     /tmp/cc1tEVD1.s:1931   .rodata.nyan_commands:00000000 $d
     /tmp/cc1tEVD1.s:949    .text.NyanExecute:00000015 $d
     /tmp/cc1tEVD1.s:949    .text.NyanExecute:00000016 $t

UNDEFINED SYMBOLS
realloc
memcpy
malloc
EepromRead
strncpy
strlen
strcpy
EepromFlushTxBuff
free
EepromWrite
atoi
strtok
memset
memcmp
